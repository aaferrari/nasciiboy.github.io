<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nba - GNU&#39;s Rock</title>
    <link>http://nasciiboy.github.io/index.xml</link>
    <description>Recent content on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL 3.0</copyright>
    <lastBuildDate>Wed, 11 Jan 2017 10:03:58 -0600</lastBuildDate>
    <atom:link href="http://nasciiboy.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Raptor-Book</title>
      <link>http://nasciiboy.github.io/prog/raptor-book/</link>
      <pubDate>Wed, 11 Jan 2017 10:03:58 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptor-book/</guid>
      <description>&lt;p&gt;Solo queria programar un juego similar a &lt;strong&gt;Megaman 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../MegaMan2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;y termine instalando debian, leyendo de bash, sdl, ncurses, c, c++, Emacs&amp;hellip;&lt;/p&gt;

&lt;p&gt;Desafortunadamente aun no hay un texto sagrado de nombre &lt;strong&gt;&amp;ldquo;De Cero a Motor
3D&amp;rdquo;&lt;/strong&gt; (en solo 15 años) ni siminar. Entre intentar aprender ingles y buscar un
sistema de documentacion decente, termine por programar un motor de expresiones
regulares sin comprender la teoria de automatas finitos, lenguajes finitos ni
recordar un poco de las clases de mate de nivel basico, pues no llegue al
medio&amp;hellip;&lt;/p&gt;

&lt;p&gt;Con estos precedentes, el tiempo que brinda el desempleo en un mundo turbulento
lleno de humanos, aleatoriedad incomprendida y falto de materiales
psicotropicos, comence a escribir un libro lleno de palabras dilexicas que
muestra lo aprendido hasta ahora, con la sucia intencion de ganar dinero&amp;hellip; y
aportar conocimiento de libre disposicion a quien lo desee.&lt;/p&gt;

&lt;p&gt;De que va el libro? Como programar un motor de expresiones regulares sin tener
ni idea, el unico requisito es saber lenguaje de programacion C.&lt;/p&gt;

&lt;p&gt;Por ahora estoy revisando y reescribiendo las primeras secciones, pueden
colaborar con revision, anotaciones de que puntos se pueden mejorar y lo que les
venga en gana. Hay una version en html y en el repositorio hay una explicacion
un poco mas detallada.&lt;/p&gt;

&lt;p&gt;Pueden descargar una copia en un comprimido zip &lt;a href=&#34;https://github.com/nasciiboy/raptor-book/archive/master.zip&#34;&gt;aqui&lt;/a&gt; o
clonar el repositiorio asi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/nasciiboy/raptor-book.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aunque no me gustan los tutoriales en fasciculos, se iran agregando secciones al
libro segun esten listas, intentare ser constante.&lt;/p&gt;

&lt;p&gt;happy hacking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Definir atajos en Emacs</title>
      <link>http://nasciiboy.github.io/emacs/keychords/</link>
      <pubDate>Sat, 07 Jan 2017 09:38:46 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/keychords/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../kara.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;En emacs, tu puedes crear cualquier atajo de teclado para cualquier comando&lt;/p&gt;

&lt;p&gt;Por ejemplo, si deseas [F7] para el calendario, coloca en tu archivo de
configuracion de emacs&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key (kbd &amp;quot;&amp;lt;f7&amp;gt;&amp;quot;) &#39;calendar)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si estas experimentando y no deseas reiniciar emacs cada vez que intentas
definir un nuevo atajo, puedes colocar el cursor al final del ultimo parantesis
e invocar a (&lt;code&gt;M-x&lt;/code&gt;) &lt;code&gt;eval-last-sexp&lt;/code&gt; (comando ligado a &lt;code&gt;C-x C-e&lt;/code&gt;). El atajo se
activa de inmediato. Para salir del buffer calendario presiona &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si cometes algun error y necesitas iniciar emacs sin cargar el archivo de
configuracion, puedes iniciar emacs desde el terminal con este comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;emacs --no-init-file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sintaxis&#34;&gt;sintaxis&lt;/h2&gt;

&lt;p&gt;La funcion para definir atajos es&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(define-key map COMBINACION &#39;FUNCION)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;donde &lt;code&gt;map&lt;/code&gt; es un mapa de combinaciones, o por decirlo de alguna forma, un
prefijo que precede a la combinacion en si&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctl-x-map&lt;/code&gt; con prefijo &lt;code&gt;C-x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-4-map&lt;/code&gt; con prefijo &lt;code&gt;C-x 4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-5-map&lt;/code&gt; con prefijo &lt;code&gt;C-x 5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-r-map&lt;/code&gt; con prefijo &lt;code&gt;C-x r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esc-map&lt;/code&gt;  con prefijo &lt;code&gt;ESC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help-map&lt;/code&gt;  con prefijo &lt;code&gt;C-h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;global-map&lt;/code&gt; (sin prefijo) para cualquier combinacion. Esta ultima tiene una
funcion dedicada y en ella centraremos la explicacion&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key COMBINACION &#39;FUNCION)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La &lt;code&gt;COMBINACION&lt;/code&gt; de teclas puede ser cualquiera de estas 3 formas&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;quot;letra&amp;quot;&lt;/code&gt;. Una unica letra de a-z o 1-9 dentro de comillas&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;[nombre]&lt;/code&gt;. &lt;code&gt;nombre&lt;/code&gt;, se substiye por el nombre interno o por el codigo que
emacs asigna a cada tecla, la combinacion puede contener mas de una tecla pero
siempre se efectua en un solo paso, por ejemplo &lt;code&gt;[s-left]&lt;/code&gt; es presionar la
tecla super + la tecla fecha izquierda, &lt;code&gt;[s-kp-5]&lt;/code&gt; es presionar la
tecla super + la tecla 5 del pad numerico.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;(kbd &amp;quot;sequencia&amp;quot;)&lt;/code&gt;. &lt;code&gt;sequencia&lt;/code&gt; es cualquier combinacion del teclado colocada
entre parentesis, esta puede separarse en varios pasos si se coloca un espacio
en blanco entre los nombres de las teclas. Dentro de la cadena, para hacer
referencia a la tecla control, colocamos &lt;code&gt;C&lt;/code&gt;, para meta/esc &lt;code&gt;M&lt;/code&gt;, y para
super &lt;code&gt;s&lt;/code&gt;, las tres siempre van en conjunto con alguna otra tecla siguiendo el
formato &lt;code&gt;C-tecla&lt;/code&gt;, &lt;code&gt;M-tecla&lt;/code&gt; o &lt;code&gt;s-tecla&lt;/code&gt;. Finalmente podemos hacer referencia
al nombre interno de una tecla, al colocarlo entre mayor que y menor que, por
ejemplo &lt;code&gt;(kbd &amp;quot;&amp;lt;f8&amp;gt;&amp;quot;)&lt;/code&gt; sera la tecla F8&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;este es el nombre interno de algunas teclas&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;backspace&lt;/code&gt; retroceso&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt; enter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt; suprimir&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up&lt;/code&gt; flecha arriba&lt;/li&gt;
&lt;li&gt;&lt;code&gt;down&lt;/code&gt; flecha abajo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;right&lt;/code&gt; flecha derecha&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left&lt;/code&gt; flecha izquierda&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f1&lt;/code&gt;..&lt;code&gt;f35&lt;/code&gt;tecla de funcion de F1 a F35&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt; Inicio&lt;/li&gt;
&lt;li&gt;&lt;code&gt;end&lt;/code&gt; Fin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; Ayuda&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-0&lt;/code&gt;.. &lt;code&gt;kp-9&lt;/code&gt; numeros del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-subtract&lt;/code&gt; menos del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-add&lt;/code&gt; mas del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-enter&lt;/code&gt; enter del teclado numérico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-decimal&lt;/code&gt; punto decimal del teclado numérico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; AvPag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prior&lt;/code&gt; RePag&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ejemplos&#34;&gt;ejemplos&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key [s-left]  &#39;windmove-left)
(global-set-key [s-right] &#39;windmove-right)
(global-set-key [s-up]    &#39;windmove-up)
(global-set-key [s-down]  &#39;windmove-down)

(global-set-key (kbd &amp;quot;C-c &amp;lt;left&amp;gt;&amp;quot;)  &#39;windmove-left)
(global-set-key (kbd &amp;quot;C-c &amp;lt;right&amp;gt;&amp;quot;) &#39;windmove-right)
(global-set-key (kbd &amp;quot;C-c &amp;lt;up&amp;gt;&amp;quot;)    &#39;windmove-up)
(global-set-key (kbd &amp;quot;C-c &amp;lt;down&amp;gt;&amp;quot;)  &#39;windmove-down)

(global-set-key (kbd &amp;quot;C-c o&amp;quot;) &#39;recentf-open-files)
(global-set-key (kbd &amp;quot;C-x C-b&amp;quot;) &#39;ibuffer)

(global-set-key [return] &#39;backward-char)
(global-set-key (kbd &amp;quot;&amp;lt;return&amp;gt;&amp;quot;) &#39;backward-char)
(global-set-key (kbd &amp;quot;&amp;lt;f7&amp;gt; &amp;lt;f8&amp;gt;&amp;quot;) &#39;calendar)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;conocer-el-comando-ligado-a-un-atajo&#34;&gt;Conocer el comando ligado a un atajo&lt;/h2&gt;

&lt;p&gt;Si invocamos a &lt;code&gt;describe-key&lt;/code&gt; (&lt;code&gt;C-h k&lt;/code&gt;) y, a continuacion, se presiona un atajo,
emacs mostrara el comando al que esta ligado.&lt;/p&gt;

&lt;p&gt;Por ejemplo, supongamos que deseamos conocer el comando ligado a
&lt;code&gt;C-M-g&lt;/code&gt;. Primero se llama a &lt;code&gt;describe-key&lt;/code&gt;, luego se presiona la combinacion de
teclado, entonces emacs imprimira &lt;code&gt;C-M-g is undefined&lt;/code&gt;. Esto significa que
puedes utilizar &lt;code&gt;(kbd &amp;quot;C-M-g&amp;quot;)&lt;/code&gt; para representar una combinacion de teclas en
codigo lisp.&lt;/p&gt;

&lt;h2 id=&#34;combinaciones-a-evitar&#34;&gt;Combinaciones a evitar&lt;/h2&gt;

&lt;p&gt;Emacs tiene sus caprichos. Es mejor no definir las siguientes combinaciones, a
menos que sepas lo que estas haciendo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;C-cualquierLetra&lt;/code&gt;. Dada la forma en que emacs esta implementado utiliza la
sintaxis &amp;ldquo;C-letra&amp;rdquo; para un monton de atajos preestablecidos&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;F1&lt;/code&gt; o &lt;code&gt;C-h&lt;/code&gt;. Emacs utiliza esta combinacion para el sistema de ayuda de emacs
y tiene un estado especial en el sistema de comandos de emacs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt; o &lt;code&gt;C-[&lt;/code&gt;. Esta combinacion por si misma tiene un significado complicado,
dependiendo de cauntas veces se presione&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;C-Shift-letra&lt;/code&gt;. Algunos terminales no pueben dintingur las versiones de la
combinacion con Shift de la version sin Shift&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;buenas-opciones&#34;&gt;Buenas opciones&lt;/h2&gt;

&lt;p&gt;Emacs tiene unos siete mill comandos. De forma predeterminada, 800 de ellos
tiene un atajo. Si defines tus propios atajos sin cuidado es posible que muchos
modos primarios o secundarios anulen tus combinaciones, ya que estas tiene
prioridad.&lt;/p&gt;

&lt;p&gt;En la documentacion oficial de emacs, Las combinaciones libres para el usuario
son de F5 a F9 y &lt;code&gt;C-c letra&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Las siguientes combinaciones son buenos puntos de partida para tus propias
definiciones, y no causan ningun problema en la practica&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;F5&lt;/code&gt;, &lt;code&gt;F6&lt;/code&gt;, &lt;code&gt;F7&lt;/code&gt;, &lt;code&gt;F8&lt;/code&gt;, &lt;code&gt;F9&lt;/code&gt;, &lt;code&gt;F12&lt;/code&gt;. Puden combinarse sin problemas con
Ctrl. Asegurate que no los utilize el sistema operativo.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Super o Hyper. Cualquier combinacion con estas es buena, pero es posible que
el terminal no reconosca las teclas Super o Hyper.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fuentes&#34;&gt;fuentes&lt;/h2&gt;

&lt;p&gt;buena parte del articulo es una pseudo-traduccion de&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ergoemacs.org/emacs/keyboard_shortcuts.html&#34;&gt;http://ergoemacs.org/emacs/keyboard_shortcuts.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;otra, es una invencion no contrastada con el manual&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017Challenges</title>
      <link>http://nasciiboy.github.io/prog/2017Challenges/</link>
      <pubDate>Wed, 04 Jan 2017 20:41:22 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/2017Challenges/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../orange.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hace unos dias (presuntamente a principio de año) aparecio en reddit
(r/programming) un enlace a una competencia para programadores mediante github &lt;a href=&#34;https://github.com/YearOfProgramming/2017Challenges&#34;&gt;2017Challenges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aparentemente, el premio es el reto, la busqueda de nuevo conocimiento y la
alegria interior de ser el primero en publicar una solucion (ingeniosa) para un
lenguaje determinado&amp;hellip;&lt;/p&gt;

&lt;p&gt;iniciaron con cuatro pruebas&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Hello World: escribir un programa &amp;ldquo;hola mundo&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reverse String: invertir el orden de una cadena&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lonely: encontrar elementos no repetidos en un arreglo con longitud y valores
aleatorios, con opcion de mesclar enteros y caracteres&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Majority Element: dentro de un arreglo de longitud y elementos aleatorios,
localizar el valor que se repita almenos la mitad de la dimencion del arreglo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Invert Binary Tree: invertir un arbol binario&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;El dia de hoy se incluyo un nuevo reto&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the Difference: comparar dos cadenas donde una difiere en incluir un
caracter adicional, el punto es desplegar el caracter discordante&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cualquier lenguaje de programacion es valido&amp;hellip; he? pues si, lo que mas abunda
son python, seguido por java y javascript&amp;hellip;&lt;/p&gt;

&lt;p&gt;Todo lo necesario para que el codigo se incluya en el repositorio esta explicado
en el &lt;code&gt;readme.md&lt;/code&gt; del proyecto (o en internet)&lt;/p&gt;

&lt;p&gt;No ser un guru de la programacion es un buen motivo para participar, como
tambien aprender a colaborar en un proyecto mediante git(hub) (no tengo ni idea
que hacen fetch, merge, o el orden en que deba realizarce el pull), ademas
puedes poner en practica estructuras &amp;ldquo;complejas&amp;rdquo; como los arboles binarios, que
en mi caso solo los habia visto de lejos con respeto y admiracion en el &amp;ldquo;k&amp;amp;r&amp;rdquo; y
&amp;ldquo;C como programar&amp;rdquo;&lt;/p&gt;

&lt;p&gt;de momento llebo los 4 primeros retos en c (&lt;a href=&#34;https://github.com/nasciiboy/2017Challenges&#34;&gt;aqui&lt;/a&gt;) (aun pendientes de aprobacion los
ultimos 2), cuando tenga mas confianza intentare con go y en algun futuro lejano
quiza con lisp.&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zelda solarus</title>
      <link>http://nasciiboy.github.io/vg/solarus/</link>
      <pubDate>Sun, 01 Jan 2017 14:56:59 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/vg/solarus/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../solarus_logo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Segun la propia &lt;a href=&#34;http://www.solarus-games.org/&#34;&gt;web del proyecto&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Solarus es un motor de juegos Action-RPG gratuito y de codigo abierto, con
licencia GPL y esta escrito en C++. Ejecuta quest (campañas?) en Lua y puede
trabajar en un gran numero de plataformas.&lt;/p&gt;

&lt;p&gt;Solarus tambien cuenta con un editor de juegos llamado Solarus Quest Editor
escrito en C++ con Qt para ayudarte a crear un juego.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Por que los proyectos utilizan el palabro &amp;ldquo;open source&amp;rdquo; si estan bajo la
licencia GPL?&lt;/p&gt;

&lt;p&gt;Aunque en la web no se especifa, en la practica el motor fue creado para hacer
un videojuego fan-tributo de Zelda, y todos las juegos que de el han nacido
tiene que ver con Zelda, al parecer utilizan recursos salidos directamente de un
titulo de nintendo, ni idea de cual, supongo sera de snes. Por suerte el
proyecto parace no tener problemas legales de ningun tipo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../logo_2x.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THE LEGEND OF ZELDA Mystery Of Solarus DX&lt;/strong&gt; es el primer titulo que pruebo con
respecto a la saga zelda, sin importar ser o no un fan-game tiene una calidad
brutal, dificultad imposible y es muy adictivo. Reconosco que para terminarlo
fue necesario ver una guia (del propio creador) en no pocas ocaciones, no sin
antes pasar horas sin saber que hacer&amp;hellip; tambien modifique el fichero de
salvamento para poner el dinero y municion a tope.&lt;/p&gt;

&lt;p&gt;En definitiva si tuviese dinero compraria una consola e intentaria con algun
titulo oficial. Si tuviese mas dinero compraria nintentdo y pondria su
hardware/software libre tras un perido no mayor a 5 años luego del lanzamiento
del titulo&amp;hellip; un hombre debe tener sueños.&lt;/p&gt;

&lt;h2 id=&#34;compilar-solarus-engine-desde-repositorios&#34;&gt;Compilar solarus-engine desde repositorios&lt;/h2&gt;

&lt;p&gt;La lista de dependencias en Debian salio directamete del sitio web, si ya tienes el
codigo fuente de solarus puedes ver los pasos en el fichero &lt;code&gt;compilation.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;instalar dependencias en Debian&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libluajit-5.1-dev libphysfs-dev libopenal-dev libmodplug-dev libvorbis-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En el caso de fedora me he limitado a buscar el equivalente. Compilo cosas por
pasatiempo y mi sistema ya tiene un monton de librerias, a modo de prueba intete
compilar sin instalar nada mas y&amp;hellip; compilo, si encuentras algun inconveniente
no dudes en enviar un &lt;a href=&#34;mailto:nasciiboy@gmail.com&#34;&gt;correo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;instalar dependencias en fedora&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dnf -y install SDL2-devel SDL2-image-devel SDL2-ttf-devel luajit-devel physfs-devel openal-soft-devel libmodplug-devel libvorbis-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;creamos una carpeta donde estara el codigo del motor y el de los tres juegos que
aparecen listados en la pagina de solarus&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir solarus
cd solarus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;clonamos el motor y los tres juegos&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/solarus-games/solarus.git
git clone https://github.com/solarus-games/zsdx.git
git clone https://github.com/solarus-games/zsxd.git
git clone https://github.com/solarus-games/zelda-roth-se.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;compilamos el motor&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd solarus
mkdir build
cd build
cmake ..
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si la compilacion fue exitosa ya podemos ejecutar los juegos. Sin cambiar de
directorio ejecutamos&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./solarus_run ../../zsdx/

./solarus_run ../../zsxd/

./solarus_run ../../zelda-roth-se/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;los tres titulos se encuentran traducidos al español, las teclas de
funcionamiento son ajustables y tambien tiene soporte para joystick (en concreto
tengo el Logiteth 710, que funciona de forma nativa sin instalar nada)&lt;/p&gt;

&lt;p&gt;recientemente inicie zelda-roth-se, por motivos desconocidos los caracteres
&amp;ldquo;raros&amp;rdquo; del español (acentos y eñes) no se ven.&lt;/p&gt;

&lt;p&gt;puedes encontrar mas juegos (de zelda) basados en el motor solarus en
el &lt;a href=&#34;http://forum.solarus-games.org&#34;&gt;foro&lt;/a&gt; en la seccion
de &lt;a href=&#34;http://forum.solarus-games.org/index.php/board,5.0.html?PHPSESSID=mir01idorf2lfdchofmrhmthv7&#34;&gt;proyectos&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Krautrock Albums</title>
      <link>http://nasciiboy.github.io/post/Krautrock-Albums/</link>
      <pubDate>Fri, 30 Dec 2016 18:21:44 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/post/Krautrock-Albums/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../smile.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Segun &lt;a href=&#34;https://es.wikipedia.org/wiki/Krautrock&#34;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se le llama &lt;strong&gt;Krautrock&lt;/strong&gt; o &lt;strong&gt;Kraut Rock&lt;/strong&gt; (también conocida como Kosmische
Musik) a una corriente musical de rock y electrónica surgida en Alemania
Occidental a fines de los años 60.&lt;/p&gt;

&lt;p&gt;Se usa para referirse a una gran cantidad de artistas alemanes que habían sido
influidos por géneros como el rock psicodélico, el rock progresivo, la música
avant-garde y el jazz, que utilizaban nuevas tecnologías y nuevas formas de
usar las tecnologías de grabación, amplificación y mezcla musical, con nuevas
estructuras formales. El krautrock es muchas veces considerado un subgénero
del rock progresivo.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Segun nasciiboy, es la etiqueta que le ponen a un monton de discos chidos
grabados principalmente en los 70&amp;rsquo;s, que van del jazz a la musica ambiental
experimental, pasando por el clasico y el progresivo sin llegar a lo
Zeppelindroso.&lt;/p&gt;

&lt;p&gt;Buscando nuevas experiencias sonoras encontre (qbittorrent) una compilacion de
98 (o son 100?)  albums clasificados como Krautrock divididos en 5 enlaces de
descarga:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I   magnet:?xt=urn:btih:40632e48e8c7b8231a8d36475249da5d32b97839&amp;amp;dn=Top%20Krautrock%20Albums%20(according%20progarchives.com)%2c%20Part%20I&amp;amp;tr=udp%3a%2f%2fexplodie.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.coppersurfer.tk%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.leechers-paradise.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.zer0day.to%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2f9.rarbg.com%3a2710%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce
II  magnet:?xt=urn:btih:fe69d2fa839551d30b7984fee974442b53625ee3&amp;amp;dn=Top%20Krautrock%20Albums%20(according%20progarchives.com)%2c%20Part%20II&amp;amp;tr=udp%3a%2f%2f9.rarbg.com%3a2710%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.leechers-paradise.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.zer0day.to%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.coppersurfer.tk%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2fexplodie.org%3a6969%2fannounce
III magnet:?xt=urn:btih:0a1fd1f7b473172702fb4900d5dcf9967546e7e8&amp;amp;dn=Top%20Krautrock%20Albums%20(according%20progarchives.com)%2c%20Part%20III%20(reseed)
IV  magnet:?xt=urn:btih:d7c725e1b0f2ab14d916334b593fe1480dab7285&amp;amp;dn=Top%20Krautrock%20Albums%20(according%20progarchives.com)%2c%20Part%20IV&amp;amp;tr=udp%3a%2f%2f9.rarbg.com%3a2710%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.zer0day.to%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.leechers-paradise.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2fexplodie.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.coppersurfer.tk%3a6969%2fannounce
V   magnet:?xt=urn:btih:848fd0a1e0d1e84daaf0733c7a75fb866c7ce472&amp;amp;dn=Top%20Krautrock%20Albums%20(according%20progarchives.com)%2c%20Part%20V&amp;amp;tr=udp%3a%2f%2ftracker.zer0day.to%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.leechers-paradise.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2ftracker.coppersurfer.tk%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2fexplodie.org%3a6969%2fannounce&amp;amp;tr=udp%3a%2f%2f9.rarbg.com%3a2710%2fannounce
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De momento llebo escuchados 71. Todos son joyas raras dignas de un altar, en
particular &lt;strong&gt;Can&lt;/strong&gt; y &lt;strong&gt;Electric Orange&lt;/strong&gt;. Muchas grabaciones son de calidad
dudosa y algunas parecen salidas de una cinta/vinil, posiblemente sean la unica
version en existencia.&lt;/p&gt;

&lt;p&gt;Todas las pistas estan en formato flac a 800-1000 kbps. Cada enlace es de unos
5GB. Al parecer solo un humano tiene completo el material y se conecta de forma
esporadica con una velocidad de transmision de 1990. Luego de 2 meses se
completaron los enlaces I, IV y V. II esta al 93%, III tardara algunas
semanas/meses mas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>first theme</title>
      <link>http://nasciiboy.github.io/emacs/first-theme/</link>
      <pubDate>Wed, 28 Dec 2016 17:17:04 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/first-theme/</guid>
      <description>

&lt;h2 id=&#34;crear-un-tema-en-emacs&#34;&gt;Crear un Tema en Emacs&lt;/h2&gt;

&lt;h3 id=&#34;un-poco-de-historia&#34;&gt;un poco de historia&lt;/h3&gt;

&lt;p&gt;Cuando comence a utilizar emacs (hace unos pocos años) para establecer un tema
se utilizaba un paquete llamado &lt;strong&gt;color-theme&lt;/strong&gt; parte del paquete
&lt;code&gt;emacs-goodies-el&lt;/code&gt; de Debian. Al parecer desde la version 24 de emacs se
desaconseja su uso, pese a todo en mi instalacion se mantuvo en servicio hasta
la version 26.0.50 sin generar inconvenientes.&lt;/p&gt;

&lt;p&gt;para la posteridad y los viajeros en el tiempo, dejo aqui el paquete en forma
de &lt;a href=&#34;../color-theme-6.6.0.zip&#34;&gt;zip&lt;/a&gt; (con un tema personalizado de regalo
&lt;code&gt;color-theme-nascii&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;asi es como se utilizaba&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(add-to-list &#39;load-path &amp;quot;~/ruta-a/color-theme-6.6.0&amp;quot;)
(require &#39;color-theme)
(color-theme-initialize)

;; para cargar un tema en especifico
;; (color-theme-nombreDelTema)
(color-theme-nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;establecer-el-tema-por-defecto&#34;&gt;establecer el tema por defecto&lt;/h3&gt;

&lt;p&gt;apartir de emacs version 24 podemos cambiar el tema sin instalar nada con el
comando &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para cambiar el tema se mueve el cursor al tema y se presiona enter&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes-ligth-blue.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para guardar el cambio colocamos el cursor en el &amp;ldquo;boton&amp;rdquo; &lt;strong&gt;Save Theme
Setting&lt;/strong&gt; + un enter, accion que colocara automagicamente unas lineas de codigo
extra en nuestro &lt;code&gt;init.el&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No te van las cosas automagicas? puedes establecer la carga de un tema
directamente en el fichero de configuracion &lt;code&gt;init.el&lt;/code&gt; con&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/RUTA/A/miTema-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos que el menu de seleccion cargue un tema automaticamente, tiene que
estar en nuestro directorio de configuracion &lt;code&gt;~/.emacs.d/&lt;/code&gt;&lt;strong&gt;nombreTema&lt;/strong&gt;&lt;code&gt;-theme.el&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;crear-un-tema&#34;&gt;crear un tema&lt;/h3&gt;

&lt;p&gt;Los temas se crean en base a la configuracion actual, pero tambien podemos crear
un tema a partir de cero segun indiquemos al comando &lt;code&gt;customize-create-theme&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../customize-create-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;en el recuadro &lt;strong&gt;Theme Name&lt;/strong&gt; damos nombre al tema, en el recuandro
&lt;strong&gt;Description&lt;/strong&gt; dejamos la fecha de creacion o en su lugar colocamos una
descripcion del tema, por ejemplo &lt;code&gt;&amp;quot;nascii-theme un tema obscuro mas...&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;establecemos las variables a gusto y guardamos el tema con &lt;code&gt;C-x C-s&lt;/code&gt; o con un
intro sobre el recuadro &lt;strong&gt;Save Theme&lt;/strong&gt;. Regresamos a &lt;code&gt;customize-themes&lt;/code&gt; y
automagicamente nuestro tema estara disponible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: Si creamos el tema apartir de la configuracion actual y queremos
compartirlo con los demas habitantes de la red, debemos evitar incluir algunas
variables especificas de nuestro sistema en el codigo fuente del tema, por
ejemplo, el tipo de tipografia.&lt;/p&gt;

&lt;h3 id=&#34;ver-los-cambios-al-vuelo&#34;&gt;ver los cambios &amp;ldquo;al vuelo&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Vamos al codigo fuente del tema &lt;code&gt;C-x C-f&lt;/code&gt; &lt;code&gt;~/.emacs.d/miTema-theme.el&lt;/code&gt;,
modificamos el parametro de interes (los colorines se encuentran entre comillas
en formato nombre o en formato hexadecimal de 3 o 6 digitos), luego evaluamos el
buffer con el comando &lt;code&gt;eval-buffer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para hacer un poco menos lioso el asunto asignamos &lt;code&gt;eval-buffer&lt;/code&gt; a una tecla&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(global-set-key [f9] &#39;eval-buffer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;con esto tenemos asignado el comando a la tecla de funcion &lt;strong&gt;F9&lt;/strong&gt;, asi podemos
recargar los cambios estilo navegador web.&lt;/p&gt;

&lt;h3 id=&#34;nascii-theme&#34;&gt;nascii-theme&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../nascii-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

;; ---------------------------
;;
;; nascii: Another dark theme
;;
;; ----------------------------

(unless (&amp;gt;= emacs-major-version 24)
  (error &amp;quot;requires Emacs 24 or later.&amp;quot;))

(deftheme nascii
  &amp;quot;Another dark theme&amp;quot;)

(custom-theme-set-faces
 &#39;nascii
 &#39;(default ((t (:weight normal :slant normal :underline nil :overline nil :strike-through nil :foreground &amp;quot;white&amp;quot; :background &amp;quot;black&amp;quot; :stipple nil :inherit nil))))
 &#39;(cursor ((t (:background &amp;quot;yellow&amp;quot;))))
 &#39;(escape-glyph ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;brown&amp;quot;))))
 &#39;(minibuffer-prompt ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;medium blue&amp;quot;))))
 &#39;(highlight ((t (:background &amp;quot;darkolivegreen&amp;quot;))))
 &#39;(region ((t (:background &amp;quot;#222&amp;quot; :foreground &amp;quot;#87cefa&amp;quot;))))
 &#39;(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground &amp;quot;grey50&amp;quot;)) (((class color grayscale) (min-colors 88) (background dark)) (:foreground &amp;quot;grey70&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;green&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;yellow&amp;quot;))))
 &#39;(secondary-selection ((t (:background &amp;quot;darkslateblue&amp;quot;))))
 &#39;(trailing-whitespace ((t (:background &amp;quot;red&amp;quot;))))
 &#39;(font-lock-builtin-face ((t (:foreground &amp;quot;LightSteelBlue&amp;quot;))))
 &#39;(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 &#39;(font-lock-comment-face ((t (:foreground &amp;quot;OrangeRed&amp;quot;))))
 &#39;(font-lock-constant-face ((t (:foreground &amp;quot;Aquamarine&amp;quot;))))
 &#39;(font-lock-doc-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-function-name-face ((t (:foreground &amp;quot;LightSkyBlue&amp;quot;))))
 &#39;(font-lock-keyword-face ((t (:foreground &amp;quot;Cyan&amp;quot;))))
 &#39;(font-lock-negation-char-face ((t nil)))
 &#39;(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 &#39;(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 &#39;(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 &#39;(font-lock-string-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-type-face ((t (:foreground &amp;quot;PaleGreen&amp;quot;))))
 &#39;(font-lock-variable-name-face ((t (:foreground &amp;quot;LightGoldenrod&amp;quot;))))
 &#39;(font-lock-warning-face ((t (:weight bold :foreground &amp;quot;Pink&amp;quot;))))
 &#39;(button ((t (:inherit (link)))))
 &#39;(link ((((class color) (min-colors 88) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;blue&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan1&amp;quot;)) (((class color) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan&amp;quot;)) (t (:inherit (underline)))))
 &#39;(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground &amp;quot;magenta4&amp;quot;)) (((class color) (background dark)) (:foreground &amp;quot;violet&amp;quot;))))
 &#39;(fringe ((t (:background &amp;quot;grey10&amp;quot;))))
 &#39;(header-line ((t (:box nil :foreground &amp;quot;grey20&amp;quot; :background &amp;quot;grey90&amp;quot;))))
 &#39;(tooltip ((t (:foreground &amp;quot;black&amp;quot; :background &amp;quot;lightyellow&amp;quot;))))
 &#39;(mode-line ((t (:box (:line-width -2 :color nil :style released-button) :background &amp;quot;black&amp;quot; :foreground &amp;quot;white&amp;quot;))))
 &#39;(mode-line-buffer-id ((t (:weight bold))))
 &#39;(mode-line-emphasis ((t (:weight bold))))
 &#39;(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color &amp;quot;grey40&amp;quot; :style released-button))) (t (:inherit (highlight)))))
 &#39;(mode-line-inactive ((default (:inherit (mode-line))) (((class color) (min-colors 88) (background light)) (:background &amp;quot;grey90&amp;quot; :foreground &amp;quot;grey20&amp;quot; :box (:line-width -1 :color &amp;quot;grey75&amp;quot; :style nil) :weight light)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;grey30&amp;quot; :foreground &amp;quot;grey80&amp;quot; :box (:line-width -1 :color &amp;quot;grey40&amp;quot; :style nil) :weight light))))
 &#39;(isearch ((t (:foreground &amp;quot;brown4&amp;quot; :background &amp;quot;palevioletred2&amp;quot;))))
 &#39;(isearch-fail ((((class color) (min-colors 88) (background light)) (:background &amp;quot;RosyBrown1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;red4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;red&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;red&amp;quot;)) (((class color grayscale)) (:foreground &amp;quot;grey&amp;quot;)) (t (:inverse-video t))))
 &#39;(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background &amp;quot;paleturquoise&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;paleturquoise4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;turquoise3&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;turquoise3&amp;quot;)) (t (:underline (:color foreground-color :style line)))))
 &#39;(match ((((class color) (min-colors 88) (background light)) (:background &amp;quot;yellow1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;black&amp;quot; :background &amp;quot;yellow&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;white&amp;quot; :background &amp;quot;blue&amp;quot;)) (((type tty) (class mono)) (:inverse-video t)) (t (:background &amp;quot;gray&amp;quot;))))
 &#39;(next-error ((t (:inherit (region)))))
 &#39;(query-replace ((t (:inherit (isearch))))))

(provide-theme &#39;nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;para cargar el tema, copiar y guardar en &lt;code&gt;&amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;&lt;/code&gt;, luego se
puede cargar/probar ejecutando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o mediante &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;referencias&#34;&gt;referencias&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&#34;&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tambien puede acceder directamente al manual dentro de emacs. Copia esto&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[info:emacs#Creating%20Custom%20Themes]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pegalo en algun buffer, cambia a modo-org, coloca el cursor sobre el texto y
presiona &lt;code&gt;C-c C-o&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacs - first blood</title>
      <link>http://nasciiboy.github.io/emacs/first-blood/</link>
      <pubDate>Sun, 25 Dec 2016 15:13:24 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/first-blood/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../first-blood.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;instalando-gnu-emacs&#34;&gt;Instalando GNU Emacs&lt;/h2&gt;

&lt;p&gt;En general utilizo emacs apartir del codigo fuente, no obstante tambien tengo
disponible el que brinde la distribucion de turno, ya sea para probar algo o por
si alguna version presenta algun comportamiento extraño.&lt;/p&gt;

&lt;p&gt;Nunca la he instalado en el sistema emacs compilado a partir del codigo, en su
lugar tengo un atajo de teclado para su invocacion&lt;/p&gt;

&lt;h3 id=&#34;desde-repositorios&#34;&gt;desde repositorios&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# en debian
apt-get install emacs
# en fedora
dnf install emacs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;compilar-desde-el-codigo-fuente&#34;&gt;compilar desde el codigo fuente&lt;/h3&gt;

&lt;p&gt;instalamos las dependencias&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
# en debian
apt-get build-dep emacs
# en fedora
dnf builddep emacs
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;por motivos muy tristes no tengo debian, la ultima ocacion que compile
emacs en debian fue con &lt;code&gt;apt-get build-dep emacs-24&lt;/code&gt;, intenta simplemente con
&lt;code&gt;emacs&lt;/code&gt;, de lo contrario prueba con &lt;code&gt;emacs-25&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(si no tienes &lt;code&gt;git&lt;/code&gt; instalalo)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://git.sv.gnu.org/emacs.git
./autogen.sh
./autogen.sh git
./configure
make
# ya podemos utilizar emacs
./src/emacs
# si deseamos intalarlo
su
make install
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configuracion-base&#34;&gt;configuracion base&lt;/h2&gt;

&lt;p&gt;tenia mucho tiempo sin &amp;ldquo;purgar&amp;rdquo; la configuracion de Emacs, el resultado esta en
este &lt;a href=&#34;../emacs-config.zip&#34;&gt;zip&lt;/a&gt; (33mb). Para utilizarla necesitas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;descomprimir&lt;/li&gt;
&lt;li&gt;renombrar la carpeta como &lt;code&gt;.emacs.d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;y moverla a home.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Contenido&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- init.el         # fichero de configuracion de emacs
- nascii-theme.el # tema nascii
- plugins/        # todas las carpetas proceden directamente de git
         company-mode               # autocompletado
         magit                      # interfaz avanzada git emacs-style
         dash.el                    #   dependencia de magit
         with-editor                #   dependencia de magit
         emacs-fish                 # modo para scripts fish
         expand-region.el           # seleccion segun el contexto
         go-mode.el                 # modo para golang
         haskell-mode               # modo para haskell
         markdown-mode              # modo para markdown
         multiple-cursors.el        # cursores multiples
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Emacs posee un magnifico gestor de pagetes, pero soy un romantico e instale
todos los &amp;ldquo;plugins&amp;rdquo; directamente de los fuentes, es decir, cada carpeta en
&lt;code&gt;plugins&lt;/code&gt; tiene su &lt;code&gt;.git&lt;/code&gt;. En teoria esto hara que la configuracion este lista
solo con copiar y pegar. Para ser especifico lo he probado con las versiones
25.1.1 y 26.0.50, ambas en fedora.&lt;/p&gt;

&lt;p&gt;Esto tambien significa que los repositorios no estan activados, tendras que
hacerlo como antaño: llendo al navegador y averiguado como.&lt;/p&gt;

&lt;p&gt;Los modos &lt;strong&gt;magit&lt;/strong&gt; y &lt;strong&gt;haskell&lt;/strong&gt; estan compilados (son los ficheros que
terminan con &lt;code&gt;.elc&lt;/code&gt;) y es posible que se genere un error durante la carga aunque
no estoy seguro de ese hecho. Si esto sucede, existen dos soluciones posibles&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;elimina la seccion correspondiente a dichos modos dentro de &lt;code&gt;init.el&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;o sigue las instrucciones dentro de &lt;code&gt;init.el&lt;/code&gt; y compila los modos&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;como notas adicionales los atajos estan pensados en la distribucion de teclado
&lt;strong&gt;programmer dvorak&lt;/strong&gt;  con 5 teclas modificadas (los dos control, mayus, @ y \)
y el modo go depende de que tengas una instalacion de go. Puedes seguir los dos
pasos anteriores si encuentras algun problema (&lt;strong&gt;no olvides revisar la correcta
ubicacion de las rutas en&lt;/strong&gt; &lt;code&gt;init.el&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;programo en haskell? no, pero me hace gracia tener el modo&lt;/p&gt;

&lt;h2 id=&#34;iniciando&#34;&gt;Iniciando&lt;/h2&gt;

&lt;p&gt;Una vez Emacs esta en el sistema y ha sido invocado presiona &lt;code&gt;C-h t&lt;/code&gt; (Control y
&amp;lsquo;h&amp;rsquo; a la vez y luego &amp;rsquo;t&amp;rsquo;) esto abre el tutorial&amp;hellip; &lt;strong&gt;bienvenido a Emacs!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La proxima entrega sera &amp;ldquo;Emacs - Como crear un tema&amp;rdquo;&amp;hellip; o algo asi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fish</title>
      <link>http://nasciiboy.github.io/apt/fish/</link>
      <pubDate>Sat, 24 Dec 2016 10:04:44 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/apt/fish/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../ascii_fish.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;fish &lt;strong&gt;&amp;ldquo;El Shell de los 90s&amp;rdquo;&lt;/strong&gt;, es un shell como los son bash o zsh. Esta
programado en C++ y se distribuye con la licencia GNU GPL version 2.&lt;/p&gt;

&lt;p&gt;Segun &lt;a href=&#34;https://fishshell.com/&#34;&gt;su pagina&lt;/a&gt; tiene autocompletado, autosugerencias,
colores VGA, se puede configurar con una interfaz web, todo funciona sin
necesidad de mover nada y sus scripts son los mas bonitos del
barrio&amp;hellip; &lt;strong&gt;MENTIRA&lt;/strong&gt; todos los scripts de shell son feos&lt;/p&gt;

&lt;h2 id=&#34;como-cambiar-bash&#34;&gt;como? cambiar &lt;code&gt;bash&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;dialogo interno&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;luego de aprender lo basico de &lt;code&gt;bash&lt;/code&gt; (que ya funciona y lo hace bien) pasar a
utilizar un shell que programa gente salida no se donde solo porque tiene
colorines&amp;hellip; ja, ja, ja&amp;hellip; ni muerto, solo probare, para confirmar su
inferioridad&amp;hellip; mierda, tiene autosugerencias/autocompletado automagico sin
configurar nada&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;y asi es como pase a utilizar &lt;code&gt;fish&lt;/code&gt; y &lt;code&gt;bash&lt;/code&gt; dejo de ser suficiente.&lt;/p&gt;

&lt;p&gt;Son mas bonitos los scripts fish? No.&lt;/p&gt;

&lt;p&gt;Tiene tantos adeptos como bash? No.&lt;/p&gt;

&lt;p&gt;Una interfaz de configuracion web es mejor? No.&lt;/p&gt;

&lt;p&gt;Los colores de resaltado son mas llamativos? No, pero se pueden configurar.&lt;/p&gt;

&lt;p&gt;El autocompletado/autosugerencias son perfectos? No, y sin embargo ya no puedo
vivir sin esto&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;instalacion&#34;&gt;instalacion&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ su
$ gestor-de-paquetes install fish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sin dejar el modo root revisa si fish se agrego a la &amp;ldquo;lista de shells&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/shells
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;de no encontrarse una linea que termine con &lt;code&gt;fish&lt;/code&gt; ejecuta&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ whereis fish
fish: /usr/bin/fish /etc/fish /usr/share/fish /usr/share/man/man1/fish.1.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;acorde a la buenas costumbres &lt;code&gt;fish&lt;/code&gt; esta en &lt;code&gt;/usr/bin/&lt;/code&gt;. Agregamos la ruta
a la lista de shells&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;/usr/bin/fish&amp;quot; &amp;gt;&amp;gt; /etc/shells
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ahora cambiamos la shell por defecto&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chsh
Cambiando intérprete de órdenes para nasciiboy.
Nuevo intérprete de órdenes [/usr/bin/bash]: /usr/bin/fish
$ exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;si tenemos un terminal grafico, quiza sea necesario configurar el cambio
(proceda segun el caso).&lt;/p&gt;

&lt;p&gt;Ejecutamos &lt;code&gt;fish&lt;/code&gt;, o abrimos una nueva secion y optenemos esto&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Welcome to fish, the friendly interactive shell
Type help for instructions on how to use fish
you@hostname ~&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;si ejecutamos &lt;code&gt;help&lt;/code&gt; optenemos la documentacion en una pestaña del navegador por
defecto&amp;hellip; claro siempre que estes en modo grafico de lo contrario
optendras un error&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;configuracion&#34;&gt;configuracion&lt;/h2&gt;

&lt;p&gt;si ejecutomos &lt;code&gt;fish_config&lt;/code&gt; se abrira una intefaz web (en el navegador web por
defecto) donde podemos configurar el tema, el prompt y demas&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../fish_customize.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;si bien no esta aconsejado, podemos hacer lo mismo a mano con nuestro editor de
confianza la ruta es &lt;code&gt;~/.config/fish/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La configuracion basica (equivalente al &lt;code&gt;~/.bashrc&lt;/code&gt;) esta en &lt;code&gt;config.fish&lt;/code&gt;. Esta es
la configuracion de nasciiboy&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -g -x fish_greeting &#39;&#39;              # elimina el mensaje de inicio
set --export GOPATH /home/nasciiboy/go  # asi configuras una variable
set --export PATH $GOPATH/bin $PATH     # asi agregas una ruta al PATH
set --export EDITOR &amp;quot;emacs -nw&amp;quot;         # con esto se establece el editor

# screenfetch -D debian                 # esto es un comentario comentado
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;el prompt se establece en la carpeta &lt;code&gt;functions&lt;/code&gt; en el fichero
&lt;code&gt;fish_prompt.fish&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function fish_prompt
        set_color -o fff
        printf &#39;--( &#39;

        switch (whoami)
                case nasciiboy
                        set_color cyan
                case root
                        set_color red
                case &#39;*&#39;
                        set_color yellow
        end

        printf &amp;quot;%s&amp;quot; (whoami)

        set_color fff
        printf &#39; ) - { &#39;

        set_color 54ffff
        printf &#39;%s&#39; (prompt_pwd)

        set_color fff
        printf &amp;quot; }\n--| &amp;quot;

        set_color normal
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;esto genera este prompt&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../nascii_prompt.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para terminar el esquema de color y los alias se encuentran el el fichero
&lt;code&gt;fishd.localhost.localdomain&lt;/code&gt; el &lt;code&gt;localdomain&lt;/code&gt; puede ser tu local domain en mi
caso &lt;code&gt;localnasciiboy&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# This file is automatically generated by the fish.
# Do NOT edit it directly, your changes will be overwritten.
SET __fish_classic_git_prompt_initialized:\x1d
SET __fish_init_1_50_0:\x1d
SET __fish_init_2_3_0:\x1d
SET fish_color_autosuggestion:ffffff
SET fish_color_command:5fffff
SET fish_color_comment:ff0000
SET fish_color_cwd:green
SET fish_color_cwd_root:red
SET fish_color_end:ffffff
SET fish_color_error:ffff00
SET fish_color_escape:cyan
SET fish_color_history_current:cyan
SET fish_color_host:normal
SET fish_color_match:cyan
SET fish_color_normal:normal
SET fish_color_operator:cyan
SET fish_color_param:ffffff
SET fish_color_quote:ffffff
SET fish_color_redirection:ff5f00
SET fish_color_search_match:\x2d\x2dbackground\x3dpurple
SET fish_color_selection:\x2d\x2dbackground\x3dpurple
SET fish_color_status:red
SET fish_color_user:green
SET fish_color_valid_path:\x2d\x2dunderline
SET fish_greeting:Welcome\x20to\x20fish\x2c\x20the\x20friendly\x20interactive\x20shell\x0aType\x20\x1b\x5b32mhelp\x1b\x5b30m\x1b\x28B\x1b\x5bm\x20for\x20instructions\x20on\x20how\x20to\x20use\x20fish
SET fish_key_bindings:fish_default_key_bindings
SET fish_pager_color_completion:normal
SET fish_pager_color_description:555\x1eyellow
SET fish_pager_color_prefix:cyan
SET fish_pager_color_progress:cyan
SET fish_user_abbreviations:\x2b\x2b\x20ls\x20\x2dFalh\x20\x2d\x2dcolor\x3dauto\x1e\x2b\x20ls\x20\x2dF\x20\x2d\x2dcolor\x3dauto\x1e\u00e7\x20mocp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tengo tres alias&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;+&amp;quot;  para &amp;quot;ls -F --color=auto&amp;quot;
&amp;quot;++&amp;quot; para &amp;quot;ls -Falh --color=auto&amp;quot;
&amp;quot;ç&amp;quot;  para &amp;quot;mocp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;he probado la configuracion en varios sistemas y para root, ha funcionado sin
inconvenientes&lt;/p&gt;

&lt;h2 id=&#34;detalles&#34;&gt;detalles&lt;/h2&gt;

&lt;p&gt;la mayoria de atajos de bash sirven en fish, tambien se pueden personalizar a
exepcion de uno muy importante Ctrl-r (revizar el historial). fish soluciona
esto de una forma mas elegante: siempre estas en el historial, con
Ctrl-P/flecha-arriba para anterior, Ctrl-N/flecha-abajo para siguiente&lt;/p&gt;

&lt;p&gt;quiza lo que menos me gusta de fish es su manera de ejecutar una tarea si la anterir se
realiza. En bash es&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ comando-1 &amp;amp;&amp;amp; comando-2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;en fish es&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ comando-1; and comando-2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;manipular-scrips-fish-en-emacs&#34;&gt;Manipular scrips fish en emacs&lt;/h2&gt;

&lt;p&gt;sencillo instalamos el paquete &lt;code&gt;fish-mode&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;mediante-melpa&#34;&gt;Mediante melpa&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;M-x package-install fish-mode
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;manualmente&#34;&gt;Manualmente&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/wwwjfy/emacs-fish.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y luego, dentro de emacs cargamos el paquete con:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;/RUTA/A/REPOSITORIO/emacs-fish/fish-mode.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para que el cambio sea permanente agregamos la enterior linea a &lt;code&gt;init.el&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Que es GNU Emacs?</title>
      <link>http://nasciiboy.github.io/emacs/que-es-emacs/</link>
      <pubDate>Fri, 23 Dec 2016 20:43:19 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/que-es-emacs/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../Emacs-logo.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;algunos dicen que es &lt;strong&gt;un editor&lt;/strong&gt;, otros que es &lt;strong&gt;un sistema operativo&lt;/strong&gt;, los mas
filosoficos diran que es  &lt;strong&gt;lo que elijas que sea&lt;/strong&gt;, &lt;strong&gt;una forma de vida&lt;/strong&gt;,
&lt;strong&gt;un camino a seguir&lt;/strong&gt; o incluso que Emacs son los padres&amp;hellip; bueno luego de un
par de años utilizando Emacs esta es mi opinion&lt;/p&gt;

&lt;h2 id=&#34;my-and-mrs-emacs&#34;&gt;My and mrs Emacs&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Yo y la señora Emacs,
tenemos algo que esta creciendo,
sabemos que está mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Nos vemos cada dia en el mismo monitor,
a las 8:30 se que estará ahí,
tomando mis comandos, haciendo toda clase de funciones,
mientras moc toca nuestra canción favorita.&lt;/p&gt;

&lt;p&gt;Yo y la señora, señora Emacs, señora Emacs, señora Emacs,
tenemos algo que esta creciendo,
sabemos que esta mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Tenemos que ser muy cuidadosos,
de no llevar nuestros sueños muy lejos,
porque ella tiene sus propias obligaciones y yo también,
yo y la señora, señora Emacs, señora Emacs, señora Emacs.&lt;/p&gt;

&lt;p&gt;Bueno, es nuestra hora de irnos,
me duele mucho, mucho por dentro,
y ahora ella tomará su camino, yo el mio,
Pero mañana nos veremos en el mismo lugar, a la misma hora.
Yo y la señora Emacs, señora Emacs, señora Emacs&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;hellip;cof, cof, hem, todo aspirante a programador debe eligir su martillo
forjador de codigo, en mi caso al ser autodidacta unicamente las opiniones de
internet sirvieron de guia (lagrimas ironicas).&lt;/p&gt;

&lt;p&gt;Primero vino la bestia (&lt;strong&gt;VI&lt;/strong&gt;), fue dificil, muy dificil (mas sin saber
mecanografia). Hubo que anotar las combinaciones frecuentes en un papel y pegar
los ojos al teclado y luego al monitor y luego al teclado. Dia tras dia mejoraba
mi Kung Fu y la idea de ser un programador parecia no ser solo un sueño. Tras un
mes de entrenamiento y con algo de confianza probe un enfoque mas visual
(&lt;strong&gt;gedit&lt;/strong&gt;), el resultado? Un sin sabor, era sencillo pero no tenia profundidad,
carecia de potencia, en resumen aburrido, de regreso al viejo dojo encontre una
nueva escuela (&lt;strong&gt;Emacs&lt;/strong&gt;), las clases eran gratis y prometian ser interesantes&lt;/p&gt;

&lt;p&gt;Tras una semana con el tutorial, era tan agil con Emacs como con Vi, nada mal,
se podia hacer todo con el teclado y si lo queria tambien tenia menus accesibles
tanto por las &lt;code&gt;F&lt;/code&gt;s como por el raton (esto ultimo es increible, todo aquel que
asimila la &lt;strong&gt;forma Emacs&lt;/strong&gt; inevitablemente termina por hacer a un lado el
raton. ¿Quien demonios sigue programando esto?).&lt;/p&gt;

&lt;p&gt;Tras unos dias (y con ayuda de algun tutorial) puede cambiar el tema, luego
descubri que se podia navegar por los ficheros desde emacs y que tenia
terminales e interpretes y un tetris y un navegador web y gestor de paquetes y
soporte para cualquier lenguaje de programacion (almenos resaltado) y un sin fin
de utiles(?) aplicaciones, sin embargo &lt;strong&gt;todas compartian el mismo conjunto de
comandos base&lt;/strong&gt; para moverse por la interfaz y manipular texto, aprender lo
especifico de cada funcionalidad (en gerga de emacs, &lt;strong&gt;modo&lt;/strong&gt;) es un tema
aparte que requiere una memoria exepcional&lt;/p&gt;

&lt;p&gt;Cai como un yonqui adicto a cualquier informacion de emacs (los no hablantes de
ingles tenemos un poco mas dicil&amp;hellip; todo), apenas aprendi algun nuevo comando lo
ponia en practica (para olvidarlo un par de horas despues)&lt;/p&gt;

&lt;p&gt;Y un buen dia entientes que puedes programar emacs, que todo comportamiento es
modificable y de echo es modificable &lt;strong&gt;al vuelo&lt;/strong&gt; y te preguntas &lt;strong&gt;¿Que es
Emacs?&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;emacs-es&#34;&gt;Emacs Es&amp;hellip;&lt;/h2&gt;

&lt;p&gt;El interprete de un lenguaje derivado de Lisp (Emacs Lisp). De hecho es el
interprete mas sofisticado que existe y probablemente existira, ya que viene con
el suficiente codigo precargado como para (hacerte creer que es un editor y)
permitirte crear nuevos programas, funcionalidades o modificar Emacs en si
mismo&amp;hellip; existe un mejor diseño que ese?&lt;/p&gt;

&lt;h2 id=&#34;enfoques-sobre-el-texto&#34;&gt;Enfoques sobre el texto&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;teco&lt;/strong&gt;: un leguaje para forjar texto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vi&lt;/strong&gt;: escribamos caracteres o apliquemos comandos a los caracteres&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: el texto es la interfaz, el editor es parte de la interfaz,
extendamos y modifiquemos a voluntad y sin restricciones nuestra interfaz&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;: un simple editor&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vim&lt;/strong&gt;: joder, lo que pueden hacer los de emacs, haremos a vi extensible&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sublime&lt;/strong&gt;: hare mi propio vim&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;atom&lt;/strong&gt;: hagamos un editor como sublime pero con tecnologia web awesome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>moc</title>
      <link>http://nasciiboy.github.io/apt/moc/</link>
      <pubDate>Thu, 22 Dec 2016 11:56:44 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/apt/moc/</guid>
      <description>&lt;p&gt;En GNU existe una cantidad ridicula de &lt;strong&gt;reproductores de audio&lt;/strong&gt;, por
participar hasta el vlc o video (gnome) se meten en esos temas.&lt;/p&gt;

&lt;p&gt;En general este tipo de aplicaciones te piden una carpeta &amp;ldquo;especial&amp;rdquo; donde
coloques la musica y luego exitienden sus tentaculos para optener portadas,
letras, titulos, generar listas de reproduccion por autor/mas escuchados/genero,
y un sin numero mas de caracteristicas que incluyen conectarse a la red, claro
mientras te roban un espacio con una interfaz de lo mas mona, pensada para mover
el raton de un lado a otro&amp;hellip;&lt;/p&gt;

&lt;p&gt;si por el contrario, &lt;strong&gt;el album es tu lista de reproduccion&lt;/strong&gt;, la carpeta con
el nombre del grupo el unico metadato que necesitas y mover la mano con el raton
no te genera ningun placer, existe &lt;strong&gt;moc&lt;/strong&gt; (&lt;a href=&#34;https://moc.daper.net/&#34;&gt;Music On Console&lt;/a&gt;)
un eficiente reproductor de todo tipo de ficheros de audio desde la consola, con
una interfaz tipo &amp;ldquo;navegador de ficheros&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;si tienes una distro descente (como debian) estara en los repositorios, en el
caso de freidora la encontraras en rpm-fusion, instalarla no cuesta nada&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gestor-de-pagetes install moc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;para ejecutarla simplemente escribimos &lt;code&gt;mocp&lt;/code&gt; en la consola (en freidora por
alguna obscura razon primero tenemos que crear un fichero en blanco (como root)
&lt;code&gt;touch /etc/popt.d/empty_file&lt;/code&gt;) y optenemos esto&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../moc-default.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;como soy un ser de la noche, fue necesario realizar alguna modificacion dejando
el tema asi&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../moc-nascii.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;en este &lt;a href=&#34;../moc-nascii-theme.zip&#34;&gt;zip&lt;/a&gt; encontraras el tema &amp;ldquo;nascii-theme&amp;rdquo; y una
configuracion basica. Debes colocar el contenido en tu home dentro del
directorio &lt;code&gt;.moc&lt;/code&gt;, no sin antes modificar las siguientes lineas del fichero
&lt;code&gt;config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# substituye &amp;quot;user&amp;quot; por tu nombre de usuario
# linea  72 - directorio por defecto
MusicDir = &amp;quot;/home/user/fonos&amp;quot;
# linea  92 - reproducir siguiente pista
AutoNext = yes
# linea 194 - tema por defecto
Theme = /home/user/.moc/themes/nascii_theme
# linea 242 - guardar playlist para la siguiente secion
SavePlaylist = yes
# En la posicion 277 puedes configurar el acceso
# rapido a algunos directorios
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;presionando &lt;code&gt;h&lt;/code&gt; se muestran los comandos (teclas) que puedes ejecutar.&lt;/p&gt;

&lt;p&gt;Listo, a disfrutar de buena musica&lt;/p&gt;

&lt;p&gt;ps: ese album de la cura esta&amp;hellip; bueno, en contraste a algunos otros.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como dividir un album contenido en una sola pista flac</title>
      <link>http://nasciiboy.github.io/apt/shnsplit/</link>
      <pubDate>Thu, 22 Dec 2016 09:56:05 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/apt/shnsplit/</guid>
      <description>&lt;p&gt;En este mundo existen algunos seres extraños con tanto amor (libros, musica,
series, peliculas, porno, &amp;hellip;) que no les cabe en su disco duro y tienen que
compartirlo.&lt;/p&gt;

&lt;p&gt;Si el amor viene en forma de &lt;strong&gt;una sola pista flac&lt;/strong&gt;, no hagas como yo y la
mandes a la mierda, toda muestra de afecto merece respeto&amp;hellip; exepto si proviene
de un degenerado que graba viniles en digital a maxima calidad, si formas parte
de este grupo no mereces tener oidos.&lt;/p&gt;

&lt;p&gt;Bueno, podemos optener las pistas individuales siempre y cuando la pista este
acompañada de un fichero con terminacion &lt;strong&gt;.cue&lt;/strong&gt;. Primero necesitamos instalar
unas cuantas herramientas, tanto en debian como en freidora son las siguientes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gestor-de-paquetes install cuetools shntool flac
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;luego vamos hasta la carpeta que tiene la pista a dividir y ejecutamos el
siguiente comando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shnsplit -f pista.cue -o flac pista.flac
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;modificando &lt;code&gt;pista&lt;/code&gt;, por el nombre especifico de &lt;strong&gt;tu&lt;/strong&gt; pista. Luego de ejecutar
esto tendremos pistas independientes con el formato &lt;code&gt;split-track01.flac&lt;/code&gt;,
&lt;code&gt;split-track02.flac&lt;/code&gt;, &lt;code&gt;split-track&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;para colocar los metadatos (titulo, autor) en las pistas invocamos lo siguiente&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cuetag.sh pista.cue split-track*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;en ocaciones, este comando puede informarnos que el numero de pistas no
coincide, si se presenta dicha circunstancia revisa si tienes una pista con
nombre &lt;code&gt;split-track00.flac&lt;/code&gt;, te la cargas y vuelves a intentar.&lt;/p&gt;

&lt;p&gt;Pero&amp;hellip; y todo esto aun nos deja las pistas con nombre &lt;code&gt;split-track*&lt;/code&gt;, para eso
no conosco una solucion elegante desde linea de comandos. La solucion que
utilizo es abrir moc (&lt;strong&gt;Music On Console&lt;/strong&gt;) copiar todos las nombres de las
pistas (el titulo se muestra a partir de los metadatos) y con Emacs cambiar los
nombres &amp;ldquo;a mano&amp;rdquo; en &lt;code&gt;wdired-change-to-wdired-mode&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ncurses</title>
      <link>http://nasciiboy.github.io/prog/ncurses/</link>
      <pubDate>Mon, 19 Dec 2016 21:45:05 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/ncurses/</guid>
      <description>

&lt;h2 id=&#34;que-es-ncurses&#34;&gt;Que es Ncurses&lt;/h2&gt;

&lt;p&gt;Es una libreria (parte del proyecto GNU) que nos permite crear &lt;strong&gt;TUIs&lt;/strong&gt; (Text
User Interface) escrita en lenguaje de programacion &lt;strong&gt;C&lt;/strong&gt; con &lt;em&gt;envoltorios&lt;/em&gt; para
algunos otros lenguajes. Se utiliza principalmente en el sistema GNU/linux y en
los derivados de BSD y probablemente tambien corra en el sistema de las ventanas
mediante minGW (Minimalist GNU for Windows).&lt;/p&gt;

&lt;p&gt;Proporciona funciones para «dibujar» caracteres en la pantalla con hasta 256
colores disponibles (si la terminal lo permite). Despues de conocer &lt;code&gt;mvwprintw&lt;/code&gt;
utilizar &lt;code&gt;printf&lt;/code&gt; es igual a sufrir alguna incapacidad. Tambien nos da la
posibilidad de modificar varios atributos de la tipografia como pueden ser
&lt;strong&gt;negrita&lt;/strong&gt;, &lt;em&gt;italica&lt;/em&gt; o &lt;u&gt;subrayado&lt;/u&gt;.&lt;/p&gt;

&lt;p&gt;finalmente nos ofrece la posibilidad de tener acceso completo al teclado y
raton.&lt;/p&gt;

&lt;h2 id=&#34;por-que-programar-tuis&#34;&gt;Por que programar TUIs&lt;/h2&gt;

&lt;p&gt;Bueno, es una foma muy sencilla de crear una interfaz «visual» sin morir en el
intento y como fiel creyente de la iglesia de Emacs creo que &lt;em&gt;el texto es la
unica interfaz verdadera&lt;/em&gt;. Si planeas aprender programacion de videojuegos
tambien encontraras que es mas sencillo interactuar con caracteres en lugar de
con pixeles (aunque en el fondo sean lo mismo)&lt;/p&gt;

&lt;h2 id=&#34;como-aprender-a-programar-con-ncurses&#34;&gt;Como aprender a programar con Ncurses?&lt;/h2&gt;

&lt;p&gt;complicado lo tienes&amp;hellip; solo existe un mini-manual (NCURSES Programming HOWTO) y
un libro (Programmer&amp;rsquo;s Guide to NCurses) (ambos en ingles) para aprender lo
basico del tema.&lt;/p&gt;

&lt;p&gt;Tampoco leer codigo ayuda mucho, sobre todo el codigo fuente de la propia
libreria (es muy raro).&lt;/p&gt;

&lt;p&gt;Hace ya un tiempo dedique algunas tardes a traducir el minimanual, puedes encontrar
lo fundamental en este &lt;a href=&#34;../ncurses-programming-howto.zip&#34;&gt;zip&lt;/a&gt; y el resto en un
repositorio en &lt;a href=&#34;https://github.com/nasciiboy/NCURSES-Programming-HOWTO&#34;&gt;github&lt;/a&gt;.
No ha sido revisado, y la traduccion  se realizo con el &amp;ldquo;traductor de
internet&amp;rdquo;. En el repositorio encontraras los fuentes en formato org-mode de
emacs, en algun momento (o años) le dare alguna revicion y quizo se
actualice. Si te es de &lt;code&gt;interes &amp;amp;&amp;amp; utilidad &amp;amp;&amp;amp; y-lo-mejoras&lt;/code&gt; no dudes en
enviarme el resultado&lt;/p&gt;

&lt;p&gt;quiza en un post/tutorial futuro ponga algun codigo interesante del tipo &amp;ldquo;como
programar un tetris&amp;rdquo; o algo asi&amp;hellip;&lt;/p&gt;

&lt;p&gt;ps: tengo una traduccion (ilegal) de el libro casi terminada&amp;hellip;&lt;/p&gt;

&lt;p&gt;ps 2: actualmente no me gusta ncurses, principalmente por que no entiendo su
codigo fuente, y porque es un &amp;ldquo;todo en uno&amp;rdquo;, preferiria que la interaccion con
el teclado, el mouse e incluso joystick fuesen librerias independientes&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nxEngine</title>
      <link>http://nasciiboy.github.io/vg/nxEngine/</link>
      <pubDate>Mon, 19 Dec 2016 11:29:56 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/vg/nxEngine/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../Dokutsu.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dōkutsu Monogatari mejor conocido en oxidente como Cave Story (La historia de la
cueva) es un videojuego de plataformas con un toque de RPG desarrollado por una
sola persona (Daisuke Amaya, alias &amp;ldquo;pixel&amp;rdquo;) a lo largo de 5 años. Originalmente
fue liberado como &lt;em&gt;freeware&lt;/em&gt; para la plataforma pc de microsoft, no obstante por
su sobresaliente calidad ha sido portado a una gran cantidad de sistemas entre
las que se encuentran AROS, MorphOS, AmigaOS 4, Mac OS, PSP, Dreamcast, GP2X,
&amp;hellip;, y por supuesto GNU/linux.&lt;/p&gt;

&lt;p&gt;Pese a que la licencia de distribucion no es libre, se cuenta con una
implementacion del motor (en C++) bajo la licencia GNU GPL v3 llamada
&lt;a href=&#34;http://nxengine.sourceforge.net/&#34;&gt;nxEngine&lt;/a&gt; y un par de traducciones al español
(utilizare &lt;a href=&#34;http://www.romhacking.net/translations/2172/&#34;&gt;esta&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Si bien podemos disfrutar Dōkutsu Monogatari mediante &lt;strong&gt;wine&lt;/strong&gt; (asunto con poco
misterio) vamos a compilar una vercion nativa con nxEngine. Todo lo que
necesitas lo encontraras en este &lt;a href=&#34;../nx.zip&#34;&gt;zip&lt;/a&gt;. Descargalo y abre un terminal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
# nxEngine depende de la libreria SDL. En freidora
dnf -y install SDL-devel SDL_ttf-devel
exit

unzip nx.zip -d nx
cd nx
make
./nx # luego presiona &#39; &#39; (espacio) y &#39;a&#39; (letra a)
# listo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La vercion nativa no maneja apropiadamente los acentos ni los caracteres raros
del español, aun asi puede entenderse perfectamente.&lt;/p&gt;

&lt;p&gt;Mi amor por esta obra es proporcional a su dificultad, moriras y moriras y
moriras y volveras a morir y cuando lleges al tramo final moriras muchas veces
mas. Recuerda salvar cada ves que se presente la oportunidad o te puedes pegar
un cabreo.&lt;/p&gt;

&lt;p&gt;El unico defecto de este magnifico titulo, es la imposibilidad de saltarse los
dialogos. Cuando apreda a programar&amp;hellip;&lt;/p&gt;

&lt;p&gt;La duracion ronda entre 4-8 horas, (la primer vez que lo termine tarde 6). Como
dispone de varios finales, como minimo pasatelo 2 veces.&lt;/p&gt;

&lt;p&gt;Puedes encontrar achivos de salvamento, ports diversos y muchas cosas mas en
&lt;a href=&#34;http://www.cavestory.org/&#34;&gt;http://www.cavestory.org/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>H Craft Championship</title>
      <link>http://nasciiboy.github.io/vg/H-Craft/</link>
      <pubDate>Sat, 17 Dec 2016 08:29:18 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/vg/H-Craft/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../hcraft01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;H-Craft es un juego de &amp;ldquo;carreras&amp;rdquo; con &lt;em&gt;Hovercrafts&lt;/em&gt; (aerodeslizadores)
estupendo disponible libremente para GNU/linux (tambien hay vercion para android
y windows)&lt;/p&gt;

&lt;h2 id=&#34;hardware&#34;&gt;hardware&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;1 Ghz Processor&lt;/li&gt;
&lt;li&gt;512 MB Memory&lt;/li&gt;
&lt;li&gt;A 3D-Card with the power of a Geforce3 or Radeon 7500 (or better)&lt;/li&gt;
&lt;li&gt;OpenGL 1.3&lt;/li&gt;
&lt;li&gt;GNU/linux (32 Bit / 64 Bit) or winbug$ 98, mp, xp, 2000, vista&lt;/li&gt;
&lt;li&gt;150 MB free space on hard-disk&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;build-debian&#34;&gt;build (debian)&lt;/h2&gt;

&lt;p&gt;Este es el proceso que segui para compilarlo en debian 7. No me gustan los
&lt;em&gt;IDEs&lt;/em&gt; y como en este caso se utiliza CodeBlocks, mejor invocarlo desde la
terminal&lt;/p&gt;

&lt;p&gt;Por cierto, actualice al codigo para compilarlo desde freidora 25&amp;hellip; la
compilacion no se logro&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
aptitude install bash gcc cmake codeblocks mercurial
exit

mkdir ~/h-craft
cd ~/h-craft
hg clone https://bitbucket.org/mzeilfelder/trunk_hc1
hg clone https://bitbucket.org/mzeilfelder/media_hc1
cd trunk_hc1/build

# necesario ejecutarlo con bash o colocar #! /bin/bash
# a estos scripts
./copy-media-linux.sh
./make-libs-linux.sh

cd ..
codeblocks --build --target=&amp;quot;Linux - Release - accurate math - static&amp;quot; \
           --no-batch-window-close libs/irrlicht/source/Irrlicht/Irrlicht-gcc.cbp
codeblocks --build --target=&amp;quot;linux64 release&amp;quot; --no-batch-window-close src/hover.cbp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tuning&#34;&gt;tuning&lt;/h2&gt;

&lt;p&gt;existe una traduccion del los menus realizada por &lt;strong&gt;Caleb&lt;/strong&gt;, puedes encontrarla  en
&lt;a href=&#34;http://cadetesdelespacio.es/node/1362&#34;&gt;http://cadetesdelespacio.es/node/1362&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Performance comparison of regular expression engines</title>
      <link>http://nasciiboy.github.io/prog/Performance-comparison-of-regular-expression-engines/</link>
      <pubDate>Fri, 16 Dec 2016 20:22:03 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/Performance-comparison-of-regular-expression-engines/</guid>
      <description>&lt;p&gt;Hola gente, hace unos meses tome el codigo de &lt;strong&gt;dark100&lt;/strong&gt; &amp;ldquo;Performance
comparison of regular expression engines&amp;rdquo; (pueden ver el orginal
&lt;a href=&#34;http://sljit.sourceforge.net/regex_perf.html&#34;&gt;aqui&lt;/a&gt;) para hacer algunas pruebas
a un pequeño &lt;a href=&#34;https://github.com/nasciiboy/RecursiveRegexpRaptor&#34;&gt;motor regexp&lt;/a&gt;
que programe en mi tiempo &lt;em&gt;libre?&lt;/em&gt;, bueno &amp;hellip; acabo de actualizar la prueba
(&lt;a href=&#34;https://github.com/nasciiboy/RecursiveRegexpRaptor-vs-Benchmarks&#34;&gt;aqui&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;El proceso fue el siguiente&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Optener el codigo fuente de cada motor (PCRE2, RE2, tre, oniguruma)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Compilar cada motor localmente (intel x86-64 celeron 847), es
decir&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./autogen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./configure&lt;/code&gt; (para PCRE con alguna consideracion especifica)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copiar el código fuente al entorno&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Intentar con el makefile existente hasta que se logro compilar&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Modificar levemente el ambiente (no se si compilara en un sistema no GNU)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;En realidad no tengo ni idea si este es el proceso adecuado para actualizar el
entorno, pero funciona ¯_(ツ)_/¯. Si conoces una mejor configuracion o como
optimizar alguna prueba sera bien recibida, siempre y cuando los makefiles se
mantengan KISS (aunque solo compile en x86-64)&lt;/p&gt;

&lt;p&gt;Para leer la prueba cómodamente tienes que descagar el fichero &lt;code&gt;readme.html&lt;/code&gt; del
repositorio y visualizarlo en tu navegador.&lt;/p&gt;

&lt;p&gt;por cierto la exprecion:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;^( )*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;genera un bucle infinito en pcre, tre, oniguruma, re2. En principio esta fue la
motivacion principal para actualizar el codigo de cada prueba&amp;hellip; alguna pista?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>