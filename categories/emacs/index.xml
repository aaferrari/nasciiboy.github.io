<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on nba - GNU&#39;s Rock</title>
    <link>http://nasciiboy.github.io/categories/emacs/index.xml</link>
    <description>Recent content in Emacs on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL 3.0</copyright>
    <atom:link href="http://nasciiboy.github.io/categories/emacs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Definir atajos en Emacs</title>
      <link>http://nasciiboy.github.io/emacs/keychords/</link>
      <pubDate>Sat, 07 Jan 2017 09:38:46 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/keychords/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../kara.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;En emacs, tu puedes crear cualquier atajo de teclado para cualquier comando&lt;/p&gt;

&lt;p&gt;Por ejemplo, si deseas [F7] para el calendario, coloca en tu archivo de
configuracion de emacs&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key (kbd &amp;quot;&amp;lt;f7&amp;gt;&amp;quot;) &#39;calendar)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si estas experimentando y no deseas reiniciar emacs cada vez que intentas
definir un nuevo atajo, puedes colocar el cursor al final del ultimo parantesis
e invocar a (&lt;code&gt;M-x&lt;/code&gt;) &lt;code&gt;eval-last-sexp&lt;/code&gt; (comando ligado a &lt;code&gt;C-x C-e&lt;/code&gt;). El atajo se
activa de inmediato. Para salir del buffer calendario presiona &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Si cometes algun error y necesitas iniciar emacs sin cargar el archivo de
configuracion, puedes iniciar emacs desde el terminal con este comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;emacs --no-init-file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sintaxis&#34;&gt;sintaxis&lt;/h2&gt;

&lt;p&gt;La funcion para definir atajos es&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(define-key map COMBINACION &#39;FUNCION)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;donde &lt;code&gt;map&lt;/code&gt; es un mapa de combinaciones, o por decirlo de alguna forma, un
prefijo que precede a la combinacion en si&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctl-x-map&lt;/code&gt; con prefijo &lt;code&gt;C-x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-4-map&lt;/code&gt; con prefijo &lt;code&gt;C-x 4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-5-map&lt;/code&gt; con prefijo &lt;code&gt;C-x 5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctl-x-r-map&lt;/code&gt; con prefijo &lt;code&gt;C-x r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esc-map&lt;/code&gt;  con prefijo &lt;code&gt;ESC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help-map&lt;/code&gt;  con prefijo &lt;code&gt;C-h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;global-map&lt;/code&gt; (sin prefijo) para cualquier combinacion. Esta ultima tiene una
funcion dedicada y en ella centraremos la explicacion&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key COMBINACION &#39;FUNCION)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La &lt;code&gt;COMBINACION&lt;/code&gt; de teclas puede ser cualquiera de estas 3 formas&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;quot;letra&amp;quot;&lt;/code&gt;. Una unica letra de a-z o 1-9 dentro de comillas&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;[nombre]&lt;/code&gt;. &lt;code&gt;nombre&lt;/code&gt;, se substiye por el nombre interno o por el codigo que
emacs asigna a cada tecla, la combinacion puede contener mas de una tecla pero
siempre se efectua en un solo paso, por ejemplo &lt;code&gt;[s-left]&lt;/code&gt; es presionar la
tecla super + la tecla fecha izquierda, &lt;code&gt;[s-kp-5]&lt;/code&gt; es presionar la
tecla super + la tecla 5 del pad numerico.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;(kbd &amp;quot;sequencia&amp;quot;)&lt;/code&gt;. &lt;code&gt;sequencia&lt;/code&gt; es cualquier combinacion del teclado colocada
entre parentesis, esta puede separarse en varios pasos si se coloca un espacio
en blanco entre los nombres de las teclas. Dentro de la cadena para hacer
referencia a la tecla control control colocamos &lt;code&gt;C&lt;/code&gt;, para meta/esc &lt;code&gt;M&lt;/code&gt;, y para
super &lt;code&gt;s&lt;/code&gt;, las tres siempre van en conjunto con alguna otra tecla siguiendo el
formato &lt;code&gt;C-tecla&lt;/code&gt;, &lt;code&gt;M-tecla&lt;/code&gt; o &lt;code&gt;s-tecla&lt;/code&gt;. Finalmente podemos hacer referencia
al nombre interno de una tecla al colocarlo entre mayor que y menor que, por
ejemplo &lt;code&gt;(kbd &amp;quot;&amp;lt;f8&amp;gt;&amp;quot;)&lt;/code&gt; sera la tecla F8&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;este es el nombre interno de algunas teclas&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;backspace&lt;/code&gt; retroceso&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt; enter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;delete&lt;/code&gt; suprimir&lt;/li&gt;
&lt;li&gt;&lt;code&gt;up&lt;/code&gt; flecha arriba&lt;/li&gt;
&lt;li&gt;&lt;code&gt;down&lt;/code&gt; flecha abajo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;right&lt;/code&gt; flecha derecha&lt;/li&gt;
&lt;li&gt;&lt;code&gt;left&lt;/code&gt; flecha izquierda&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f1&lt;/code&gt;..&lt;code&gt;f35&lt;/code&gt;tecla de funcion de F1 a F35&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt; Inicio&lt;/li&gt;
&lt;li&gt;&lt;code&gt;end&lt;/code&gt; Fin&lt;/li&gt;
&lt;li&gt;&lt;code&gt;help&lt;/code&gt; Ayuda&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-0&lt;/code&gt;.. &lt;code&gt;kp-9&lt;/code&gt; numeros del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-subtract&lt;/code&gt; menos del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-add&lt;/code&gt; mas del pad numerico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-enter&lt;/code&gt; enter del teclado numérico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kp-decimal&lt;/code&gt; punto decimal del teclado numérico&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next&lt;/code&gt; AvPag&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prior&lt;/code&gt; RePag&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ejemplos&#34;&gt;ejemplos&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-elisp&#34;&gt;(global-set-key [s-left]  &#39;windmove-left)
(global-set-key [s-right] &#39;windmove-right)
(global-set-key [s-up]    &#39;windmove-up)
(global-set-key [s-down]  &#39;windmove-down)

(global-set-key (kbd &amp;quot;C-c &amp;lt;left&amp;gt;&amp;quot;)  &#39;windmove-left)
(global-set-key (kbd &amp;quot;C-c &amp;lt;right&amp;gt;&amp;quot;) &#39;windmove-right)
(global-set-key (kbd &amp;quot;C-c &amp;lt;up&amp;gt;&amp;quot;)    &#39;windmove-up)
(global-set-key (kbd &amp;quot;C-c &amp;lt;down&amp;gt;&amp;quot;)  &#39;windmove-down)

(global-set-key (kbd &amp;quot;C-c o&amp;quot;) &#39;recentf-open-files)
(global-set-key (kbd &amp;quot;C-x C-b&amp;quot;) &#39;ibuffer)

(global-set-key [return] &#39;backward-char)
(global-set-key (kbd &amp;quot;&amp;lt;return&amp;gt;&amp;quot;) &#39;backward-char)
(global-set-key (kbd &amp;quot;RET&amp;quot;) &#39;forward-char)
(global-set-key (kbd &amp;quot;&amp;lt;f7&amp;gt; &amp;lt;f8&amp;gt;&amp;quot;) &#39;calendar)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h2 id=&#34;conocer-el-comando-ligado-a-un-atajo&#34;&gt;Conocer el comando ligado a un atajo&lt;/h2&gt;

&lt;p&gt;Si invocamos a &lt;code&gt;describe-key&lt;/code&gt; (&lt;code&gt;C-h k&lt;/code&gt;) y, a continuacion, se presiona un atajo,
emacs mostrara el comando al que esta ligado.&lt;/p&gt;

&lt;p&gt;Por ejemplo, supongamos que deseamos conocer el comando ligado a
&lt;code&gt;C-M-g&lt;/code&gt;. Primero se llama a &lt;code&gt;describe-key&lt;/code&gt;, luego se presiona la combinacion de
teclado, entonces emacs imprimira &lt;code&gt;C-M-g is undefined&lt;/code&gt;. Esto significa que
puedes utilizar &lt;code&gt;(kbd &amp;quot;C-M-g&amp;quot;)&lt;/code&gt; para representar una combinacion de teclas en
codigo lisp.&lt;/p&gt;

&lt;h2 id=&#34;combinaciones-a-evitar&#34;&gt;Combinaciones a evitar&lt;/h2&gt;

&lt;p&gt;Emacs tiene sus caprichos. Es mejor no definir las siguientes combinaciones, a
menos que sepas lo que estas haciendo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;C-cualquierLetra&lt;/code&gt;. Dada la forma en que emacs esta implementado utiliza la
sintaxis &amp;ldquo;C-letra&amp;rdquo; para un monton de atajos preestablecidos&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;F1&lt;/code&gt; o &lt;code&gt;C-h&lt;/code&gt;. Emacs utiliza esta combinacion para el sistema de ayuda de emacs
y tiene un estado especial en el sistema de comandos de emacs.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ESC&lt;/code&gt; o &lt;code&gt;C-[&lt;/code&gt;. Esta combinacion por si misma tiene un significado complicado,
dependiendo de cauntas veces se presione&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;C-Shift-letra&lt;/code&gt;. Algunos terminales no pueben dintingur las versiones de la
combinacion con Shift de la version sin Shift&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;buenas-opciones&#34;&gt;Buenas opciones&lt;/h2&gt;

&lt;p&gt;Emacs tiene unos siete mill comandos. De forma predeterminada, 800 de ellos
tiene un atajo. Si defines tus propios atajos sin cuidado es posible que muchos
modos primarios o secundarios anulen tus combinaciones, ya que estas tiene
prioridad.&lt;/p&gt;

&lt;p&gt;En la documentacion oficial de emacs, Las combinaciones libres para el usuario
son de F5 a F9 y &lt;code&gt;C-c letra&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Las siguientes combinaciones son buenos puntos de partida para tus propias
definiciones, y no causan ningun problema en la practica&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;F5&lt;/code&gt;, &lt;code&gt;F6&lt;/code&gt;, &lt;code&gt;F7&lt;/code&gt;, &lt;code&gt;F8&lt;/code&gt;, &lt;code&gt;F9&lt;/code&gt;, &lt;code&gt;F12&lt;/code&gt;. Puden combinarse sin problemas con
Ctrl. Asegurate que no los utilize el sistema operativo.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Super o Hyper. Cualquier combianacion con estas es buena. Es posible que en
modo terminal no reconosca Super o Hyper.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fuentes&#34;&gt;fuentes&lt;/h2&gt;

&lt;p&gt;buena parte del articulo es una pseudo-traduccion de&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ergoemacs.org/emacs/keyboard_shortcuts.html&#34;&gt;http://ergoemacs.org/emacs/keyboard_shortcuts.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;otra, es una invencion no contrastada con el manual&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>first theme</title>
      <link>http://nasciiboy.github.io/emacs/first-theme/</link>
      <pubDate>Wed, 28 Dec 2016 17:17:04 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/first-theme/</guid>
      <description>

&lt;h2 id=&#34;crear-un-tema-en-emacs&#34;&gt;Crear un Tema en Emacs&lt;/h2&gt;

&lt;h3 id=&#34;un-poco-de-historia&#34;&gt;un poco de historia&lt;/h3&gt;

&lt;p&gt;Cuando comence a utilizar emacs (hace unos pocos años) para establecer un tema
se utilizaba un paquete llamado &lt;strong&gt;color-theme&lt;/strong&gt; parte del paquete
&lt;code&gt;emacs-goodies-el&lt;/code&gt; de Debian. Al parecer desde la version 24 de emacs se
desaconseja su uso, pese a todo en mi instalacion se mantuvo en servicio hasta
la version 26.0.50 sin generar inconvenientes.&lt;/p&gt;

&lt;p&gt;para la posteridad y los viajeros en el tiempo, dejo aqui el paquete en forma
de &lt;a href=&#34;../color-theme-6.6.0.zip&#34;&gt;zip&lt;/a&gt; (con un tema personalizado de regalo
&lt;code&gt;color-theme-nascii&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;asi es como se utilizaba&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(add-to-list &#39;load-path &amp;quot;~/ruta-a/color-theme-6.6.0&amp;quot;)
(require &#39;color-theme)
(color-theme-initialize)

;; para cargar un tema en especifico
;; (color-theme-nombreDelTema)
(color-theme-nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;establecer-el-tema-por-defecto&#34;&gt;establecer el tema por defecto&lt;/h3&gt;

&lt;p&gt;apartir de emacs version 24 podemos cambiar el tema sin instalar nada con el
comando &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para cambiar el tema se mueve el cursor al tema y se presiona enter&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes-ligth-blue.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para guardar el cambio colocamos el cursor en el &amp;ldquo;boton&amp;rdquo; &lt;strong&gt;Save Theme
Setting&lt;/strong&gt; + un enter, accion que colocara automagicamente unas lineas de codigo
extra en nuestro &lt;code&gt;init.el&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No te van las cosas automagicas? puedes establecer la carga de un tema
directamente en el fichero de configuracion &lt;code&gt;init.el&lt;/code&gt; con&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/RUTA/A/miTema-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos que el menu de seleccion cargue un tema automaticamente, tiene que
estar en nuestro directorio de configuracion &lt;code&gt;~/.emacs.d/&lt;/code&gt;&lt;strong&gt;nombreTema&lt;/strong&gt;&lt;code&gt;-theme.el&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;crear-un-tema&#34;&gt;crear un tema&lt;/h3&gt;

&lt;p&gt;Los temas se crean en base a la configuracion actual, pero tambien podemos crear
un tema a partir de cero segun indiquemos al comando &lt;code&gt;customize-create-theme&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../customize-create-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;en el recuadro &lt;strong&gt;Theme Name&lt;/strong&gt; damos nombre al tema, en el recuandro
&lt;strong&gt;Description&lt;/strong&gt; dejamos la fecha de creacion o en su lugar colocamos una
descripcion del tema, por ejemplo &lt;code&gt;&amp;quot;nascii-theme un tema obscuro mas...&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;establecemos las variables a gusto y guardamos el tema con &lt;code&gt;C-x C-s&lt;/code&gt; o con un
intro sobre el recuadro &lt;strong&gt;Save Theme&lt;/strong&gt;. Regresamos a &lt;code&gt;customize-themes&lt;/code&gt; y
automagicamente nuestro tema estara disponible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: Si creamos el tema apartir de la configuracion actual y queremos
compartirlo con los demas habitantes de la red, debemos evitar incluir algunas
variables especificas de nuestro sistema en el codigo fuente del tema, por
ejemplo, el tipo de tipografia.&lt;/p&gt;

&lt;h3 id=&#34;ver-los-cambios-al-vuelo&#34;&gt;ver los cambios &amp;ldquo;al vuelo&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Vamos al codigo fuente del tema &lt;code&gt;C-x C-f&lt;/code&gt; &lt;code&gt;~/.emacs.d/miTema-theme.el&lt;/code&gt;,
modificamos el parametro de interes (los colorines se encuentran entre comillas
en formato nombre o en formato hexadecimal de 3 o 6 digitos), luego evaluamos el
buffer con el comando &lt;code&gt;eval-buffer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para hacer un poco menos lioso el asunto asignamos &lt;code&gt;eval-buffer&lt;/code&gt; a una tecla&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(global-set-key [f9] &#39;eval-buffer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;con esto tenemos asignado el comando a la tecla de funcion &lt;strong&gt;F9&lt;/strong&gt;, asi podemos
recargar los cambios estilo navegador web.&lt;/p&gt;

&lt;h3 id=&#34;nascii-theme&#34;&gt;nascii-theme&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../nascii-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

;; ---------------------------
;;
;; nascii: Another dark theme
;;
;; ----------------------------

(unless (&amp;gt;= emacs-major-version 24)
  (error &amp;quot;requires Emacs 24 or later.&amp;quot;))

(deftheme nascii
  &amp;quot;Another dark theme&amp;quot;)

(custom-theme-set-faces
 &#39;nascii
 &#39;(default ((t (:weight normal :slant normal :underline nil :overline nil :strike-through nil :foreground &amp;quot;white&amp;quot; :background &amp;quot;black&amp;quot; :stipple nil :inherit nil))))
 &#39;(cursor ((t (:background &amp;quot;yellow&amp;quot;))))
 &#39;(escape-glyph ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;brown&amp;quot;))))
 &#39;(minibuffer-prompt ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;medium blue&amp;quot;))))
 &#39;(highlight ((t (:background &amp;quot;darkolivegreen&amp;quot;))))
 &#39;(region ((t (:background &amp;quot;#222&amp;quot; :foreground &amp;quot;#87cefa&amp;quot;))))
 &#39;(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground &amp;quot;grey50&amp;quot;)) (((class color grayscale) (min-colors 88) (background dark)) (:foreground &amp;quot;grey70&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;green&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;yellow&amp;quot;))))
 &#39;(secondary-selection ((t (:background &amp;quot;darkslateblue&amp;quot;))))
 &#39;(trailing-whitespace ((t (:background &amp;quot;red&amp;quot;))))
 &#39;(font-lock-builtin-face ((t (:foreground &amp;quot;LightSteelBlue&amp;quot;))))
 &#39;(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 &#39;(font-lock-comment-face ((t (:foreground &amp;quot;OrangeRed&amp;quot;))))
 &#39;(font-lock-constant-face ((t (:foreground &amp;quot;Aquamarine&amp;quot;))))
 &#39;(font-lock-doc-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-function-name-face ((t (:foreground &amp;quot;LightSkyBlue&amp;quot;))))
 &#39;(font-lock-keyword-face ((t (:foreground &amp;quot;Cyan&amp;quot;))))
 &#39;(font-lock-negation-char-face ((t nil)))
 &#39;(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 &#39;(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 &#39;(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 &#39;(font-lock-string-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-type-face ((t (:foreground &amp;quot;PaleGreen&amp;quot;))))
 &#39;(font-lock-variable-name-face ((t (:foreground &amp;quot;LightGoldenrod&amp;quot;))))
 &#39;(font-lock-warning-face ((t (:weight bold :foreground &amp;quot;Pink&amp;quot;))))
 &#39;(button ((t (:inherit (link)))))
 &#39;(link ((((class color) (min-colors 88) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;blue&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan1&amp;quot;)) (((class color) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan&amp;quot;)) (t (:inherit (underline)))))
 &#39;(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground &amp;quot;magenta4&amp;quot;)) (((class color) (background dark)) (:foreground &amp;quot;violet&amp;quot;))))
 &#39;(fringe ((t (:background &amp;quot;grey10&amp;quot;))))
 &#39;(header-line ((t (:box nil :foreground &amp;quot;grey20&amp;quot; :background &amp;quot;grey90&amp;quot;))))
 &#39;(tooltip ((t (:foreground &amp;quot;black&amp;quot; :background &amp;quot;lightyellow&amp;quot;))))
 &#39;(mode-line ((t (:box (:line-width -2 :color nil :style released-button) :background &amp;quot;black&amp;quot; :foreground &amp;quot;white&amp;quot;))))
 &#39;(mode-line-buffer-id ((t (:weight bold))))
 &#39;(mode-line-emphasis ((t (:weight bold))))
 &#39;(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color &amp;quot;grey40&amp;quot; :style released-button))) (t (:inherit (highlight)))))
 &#39;(mode-line-inactive ((default (:inherit (mode-line))) (((class color) (min-colors 88) (background light)) (:background &amp;quot;grey90&amp;quot; :foreground &amp;quot;grey20&amp;quot; :box (:line-width -1 :color &amp;quot;grey75&amp;quot; :style nil) :weight light)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;grey30&amp;quot; :foreground &amp;quot;grey80&amp;quot; :box (:line-width -1 :color &amp;quot;grey40&amp;quot; :style nil) :weight light))))
 &#39;(isearch ((t (:foreground &amp;quot;brown4&amp;quot; :background &amp;quot;palevioletred2&amp;quot;))))
 &#39;(isearch-fail ((((class color) (min-colors 88) (background light)) (:background &amp;quot;RosyBrown1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;red4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;red&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;red&amp;quot;)) (((class color grayscale)) (:foreground &amp;quot;grey&amp;quot;)) (t (:inverse-video t))))
 &#39;(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background &amp;quot;paleturquoise&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;paleturquoise4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;turquoise3&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;turquoise3&amp;quot;)) (t (:underline (:color foreground-color :style line)))))
 &#39;(match ((((class color) (min-colors 88) (background light)) (:background &amp;quot;yellow1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;black&amp;quot; :background &amp;quot;yellow&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;white&amp;quot; :background &amp;quot;blue&amp;quot;)) (((type tty) (class mono)) (:inverse-video t)) (t (:background &amp;quot;gray&amp;quot;))))
 &#39;(next-error ((t (:inherit (region)))))
 &#39;(query-replace ((t (:inherit (isearch))))))

(provide-theme &#39;nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;para cargar el tema, copiar y guardar en &lt;code&gt;&amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;&lt;/code&gt;, luego se
puede cargar/probar ejecutando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o mediante &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;referencias&#34;&gt;referencias&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&#34;&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tambien puede acceder directamente al manual dentro de emacs. Copia esto&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[info:emacs#Creating%20Custom%20Themes]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pegalo en algun buffer, cambia a modo-org, coloca el cursor sobre el texto y
presiona &lt;code&gt;C-c C-o&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacs - first blood</title>
      <link>http://nasciiboy.github.io/emacs/first-blood/</link>
      <pubDate>Sun, 25 Dec 2016 15:13:24 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/first-blood/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../first-blood.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;instalando-gnu-emacs&#34;&gt;Instalando GNU Emacs&lt;/h2&gt;

&lt;p&gt;En general utilizo emacs apartir del codigo fuente, no obstante tambien tengo
disponible el que brinde la distribucion de turno, ya sea para probar algo o por
si alguna version presenta algun comportamiento extraño.&lt;/p&gt;

&lt;p&gt;Nunca la he instalado en el sistema emacs compilado a partir del codigo, en su
lugar tengo un atajo de teclado para su invocacion&lt;/p&gt;

&lt;h3 id=&#34;desde-repositorios&#34;&gt;desde repositorios&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# en debian
apt-get install emacs
# en fedora
dnf install emacs
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;compilar-desde-el-codigo-fuente&#34;&gt;compilar desde el codigo fuente&lt;/h3&gt;

&lt;p&gt;instalamos las dependencias&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su
# en debian
apt-get build-dep emacs
# en fedora
dnf builddep emacs
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;por motivos muy tristes no tengo debian, la ultima ocacion que compile
emacs en debian fue con &lt;code&gt;apt-get build-dep emacs-24&lt;/code&gt;, intenta simplemente con
&lt;code&gt;emacs&lt;/code&gt;, de lo contrario prueba con &lt;code&gt;emacs-25&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(si no tienes &lt;code&gt;git&lt;/code&gt; instalalo)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://git.sv.gnu.org/emacs.git
./autogen.sh
./autogen.sh git
./configure
make
# ya podemos utilizar emacs
./src/emacs
# si deseamos intalarlo
su
make install
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configuracion-base&#34;&gt;configuracion base&lt;/h2&gt;

&lt;p&gt;tenia mucho tiempo sin &amp;ldquo;purgar&amp;rdquo; la configuracion de Emacs, el resultado esta en
este &lt;a href=&#34;../emacs-config.zip&#34;&gt;zip&lt;/a&gt; (33mb). Para utilizarla necesitas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;descomprimir&lt;/li&gt;
&lt;li&gt;renombrar la carpeta como &lt;code&gt;.emacs.d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;y moverla a home.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Contenido&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- init.el         # fichero de configuracion de emacs
- nascii-theme.el # tema nascii
- plugins/        # todas las carpetas proceden directamente de git
         company-mode               # autocompletado
         magit                      # interfaz avanzada git emacs-style
         dash.el                    #   dependencia de magit
         with-editor                #   dependencia de magit
         emacs-fish                 # modo para scripts fish
         expand-region.el           # seleccion segun el contexto
         go-mode.el                 # modo para golang
         haskell-mode               # modo para haskell
         markdown-mode              # modo para markdown
         multiple-cursors.el        # cursores multiples
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Emacs posee un magnifico gestor de pagetes, pero soy un romantico e instale
todos los &amp;ldquo;plugins&amp;rdquo; directamente de los fuentes, es decir, cada carpeta en
&lt;code&gt;plugins&lt;/code&gt; tiene su &lt;code&gt;.git&lt;/code&gt;. En teoria esto hara que la configuracion este lista
solo con copiar y pegar. Para ser especifico lo he probado con las versiones
25.1.1 y 26.0.50, ambas en fedora.&lt;/p&gt;

&lt;p&gt;Esto tambien significa que los repositorios no estan activados, tendras que
hacerlo como antaño: llendo al navegador y averiguado como.&lt;/p&gt;

&lt;p&gt;Los modos &lt;strong&gt;magit&lt;/strong&gt; y &lt;strong&gt;haskell&lt;/strong&gt; estan compilados (son los ficheros que
terminan con &lt;code&gt;.elc&lt;/code&gt;) y es posible que se genere un error durante la carga aunque
no estoy seguro de ese hecho. Si esto sucede, existen dos soluciones posibles&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;elimina la seccion correspondiente a dichos modos dentro de &lt;code&gt;init.el&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;o sigue las instrucciones dentro de &lt;code&gt;init.el&lt;/code&gt; y compila los modos&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;como notas adicionales los atajos estan pensados en la distribucion de teclado
&lt;strong&gt;programmer dvorak&lt;/strong&gt;  con 5 teclas modificadas (los dos control, mayus, @ y \)
y el modo go depende de que tengas una instalacion de go. Puedes seguir los dos
pasos anteriores si encuentras algun problema (&lt;strong&gt;no olvides revisar la correcta
ubicacion de las rutas en&lt;/strong&gt; &lt;code&gt;init.el&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;programo en haskell? no, pero me hace gracia tener el modo&lt;/p&gt;

&lt;h2 id=&#34;iniciando&#34;&gt;Iniciando&lt;/h2&gt;

&lt;p&gt;Una vez Emacs esta en el sistema y ha sido invocado presiona &lt;code&gt;C-h t&lt;/code&gt; (Control y
&amp;lsquo;h&amp;rsquo; a la vez y luego &amp;rsquo;t&amp;rsquo;) esto abre el tutorial&amp;hellip; &lt;strong&gt;bienvenido a Emacs!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La proxima entrega sera &amp;ldquo;Emacs - Como crear un tema&amp;rdquo;&amp;hellip; o algo asi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Que es GNU Emacs?</title>
      <link>http://nasciiboy.github.io/emacs/que-es-emacs/</link>
      <pubDate>Fri, 23 Dec 2016 20:43:19 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/que-es-emacs/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../Emacs-logo.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;algunos dicen que es &lt;strong&gt;un editor&lt;/strong&gt;, otros que es &lt;strong&gt;un sistema operativo&lt;/strong&gt;, los mas
filosoficos diran que es  &lt;strong&gt;lo que elijas que sea&lt;/strong&gt;, &lt;strong&gt;una forma de vida&lt;/strong&gt;,
&lt;strong&gt;un camino a seguir&lt;/strong&gt; o incluso que Emacs son los padres&amp;hellip; bueno luego de un
par de años utilizando Emacs esta es mi opinion&lt;/p&gt;

&lt;h2 id=&#34;my-and-mrs-emacs&#34;&gt;My and mrs Emacs&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Yo y la señora Emacs,
tenemos algo que esta creciendo,
sabemos que está mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Nos vemos cada dia en el mismo monitor,
a las 8:30 se que estará ahí,
tomando mis comandos, haciendo toda clase de funciones,
mientras moc toca nuestra canción favorita.&lt;/p&gt;

&lt;p&gt;Yo y la señora, señora Emacs, señora Emacs, señora Emacs,
tenemos algo que esta creciendo,
sabemos que esta mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Tenemos que ser muy cuidadosos,
de no llevar nuestros sueños muy lejos,
porque ella tiene sus propias obligaciones y yo también,
yo y la señora, señora Emacs, señora Emacs, señora Emacs.&lt;/p&gt;

&lt;p&gt;Bueno, es nuestra hora de irnos,
me duele mucho, mucho por dentro,
y ahora ella tomará su camino, yo el mio,
Pero mañana nos veremos en el mismo lugar, a la misma hora.
Yo y la señora Emacs, señora Emacs, señora Emacs&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;hellip;cof, cof, hem, todo aspirante a programador debe eligir su martillo
forjador de codigo, en mi caso al ser autodidacta unicamente las opiniones de
internet sirvieron de guia (lagrimas ironicas).&lt;/p&gt;

&lt;p&gt;Primero vino la bestia (&lt;strong&gt;VI&lt;/strong&gt;), fue dificil, muy dificil (mas sin saber
mecanografia). Hubo que anotar las combinaciones frecuentes en un papel y pegar
los ojos al teclado y luego al monitor y luego al teclado. Dia tras dia mejoraba
mi Kung Fu y la idea de ser un programador parecia no ser solo un sueño. Tras un
mes de entrenamiento y con algo de confianza probe un enfoque mas visual
(&lt;strong&gt;gedit&lt;/strong&gt;), el resultado? Un sin sabor, era sencillo pero no tenia profundidad,
carecia de potencia, en resumen aburrido, de regreso al viejo dojo encontre una
nueva escuela (&lt;strong&gt;Emacs&lt;/strong&gt;), las clases eran gratis y prometian ser interesantes&lt;/p&gt;

&lt;p&gt;Tras una semana con el tutorial, era tan agil con Emacs como con Vi, nada mal,
se podia hacer todo con el teclado y si lo queria tambien tenia menus accesibles
tanto por las &lt;code&gt;F&lt;/code&gt;s como por el raton (esto ultimo es increible, todo aquel que
asimila la &lt;strong&gt;forma Emacs&lt;/strong&gt; inevitablemente termina por hacer a un lado el
raton. ¿Quien demonios sigue programando esto?).&lt;/p&gt;

&lt;p&gt;Tras unos dias (y con ayuda de algun tutorial) puede cambiar el tema, luego
descubri que se podia navegar por los ficheros desde emacs y que tenia
terminales e interpretes y un tetris y un navegador web y gestor de paquetes y
soporte para cualquier lenguaje de programacion (almenos resaltado) y un sin fin
de utiles(?) aplicaciones, sin embargo &lt;strong&gt;todas compartian el mismo conjunto de
comandos base&lt;/strong&gt; para moverse por la interfaz y manipular texto, aprender lo
especifico de cada funcionalidad (en gerga de emacs, &lt;strong&gt;modo&lt;/strong&gt;) es un tema
aparte que requiere una memoria exepcional&lt;/p&gt;

&lt;p&gt;Cai como un yonqui adicto a cualquier informacion de emacs (los no hablantes de
ingles tenemos un poco mas dicil&amp;hellip; todo), apenas aprendi algun nuevo comando lo
ponia en practica (para olvidarlo un par de horas despues)&lt;/p&gt;

&lt;p&gt;Y un buen dia entientes que puedes programar emacs, que todo comportamiento es
modificable y de echo es modificable &lt;strong&gt;al vuelo&lt;/strong&gt; y te preguntas &lt;strong&gt;¿Que es
Emacs?&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;emacs-es&#34;&gt;Emacs Es&amp;hellip;&lt;/h2&gt;

&lt;p&gt;El interprete de un lenguaje derivado de Lisp (Emacs Lisp). De hecho es el
interprete mas sofisticado que existe y probablemente existira, ya que viene con
el suficiente codigo precargado como para (hacerte creer que es un editor y)
permitirte crear nuevos programas, funcionalidades o modificar Emacs en si
mismo&amp;hellip; existe un mejor diseño que ese?&lt;/p&gt;

&lt;h2 id=&#34;enfoques-sobre-el-texto&#34;&gt;Enfoques sobre el texto&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;teco&lt;/strong&gt;: un leguaje para forjar texto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vi&lt;/strong&gt;: escribamos caracteres o apliquemos comandos a los caracteres&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: el texto es la interfaz, el editor es parte de la interfaz,
extendamos y modifiquemos a voluntad y sin restricciones nuestra interfaz&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;: un simple editor&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vim&lt;/strong&gt;: joder, lo que pueden hacer los de emacs, haremos a vi extensible&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sublime&lt;/strong&gt;: hare mi propio vim&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;atom&lt;/strong&gt;: hagamos un editor como sublime pero con tecnologia web awesome!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>