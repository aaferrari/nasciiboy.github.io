<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regexp on nba - GNU&#39;s Rock</title>
    <link>https://nasciiboy.github.io/tags/regexp/</link>
    <description>Recent content in Regexp on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL v3.0</copyright>
    <lastBuildDate>Fri, 27 Oct 2017 16:58:55 -0500</lastBuildDate>
    
	<atom:link href="https://nasciiboy.github.io/tags/regexp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raptor Down</title>
      <link>https://nasciiboy.github.io/prog/raptor-down/</link>
      <pubDate>Fri, 27 Oct 2017 16:58:55 -0500</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/raptor-down/</guid>
      <description>El Conteo Final De los pocos proyectos presentables que tengo, la libreria de expresiones regulares (estilo) &amp;ldquo;raptor&amp;rdquo; contiene lo suficiente de mi&amp;hellip; que aun si el fastidio se presentara mañana y dejara de programar, seria suficiente para sentirme satisfecho
incluso inclui algunas caracteristicas &amp;ldquo;avanzadas&amp;rdquo; (no regexp) de otros motores, por ejemplo una exprecion texto.*mas-texto en raptor era texto(mas-texto)*#!mas-texto, algo que denomine como negacion de expresiones
perooo, la negacion de expresiones requeria romper con la sencilles de la libreria (o motor o como se diga).</description>
    </item>
    
    <item>
      <title>Ramen X – Infierno Mayoi</title>
      <link>https://nasciiboy.github.io/post/ramen-x/</link>
      <pubDate>Fri, 08 Sep 2017 11:53:17 -0500</pubDate>
      
      <guid>https://nasciiboy.github.io/post/ramen-x/</guid>
      <description>bitacora de abordo: ha pasado casi un mes desde el ultimo &amp;ldquo;encuentro&amp;rdquo;, muchas cosas sabrosas, informaticas y otros echos hilarantes (a nivel personal) podrian merecer un registro, pero pondre lo que recuerde y algunas cosas que iba escribiendo despistadamente.
Quiza lo mas relevante, es que me encuentro absorto en la aleatoria labor de reescribir morg. El reencuentro empezo (manoceando codigo) aproximadamente hace dos meses, luego de terminada la lectura del tgpl, reescribiendo unas funciones basicas de manipulacion de strings (las extrañas cadenas de Go) y luego replanteando, escribiendo, puliendo (y no pocas veces regresando al punto de partida) cambios en las estructuras Markup y los &amp;ldquo;comandos de bloque&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Raptor VS Mundo</title>
      <link>https://nasciiboy.github.io/prog/raptorvsworld-ii/</link>
      <pubDate>Sat, 19 Aug 2017 14:20:56 -0500</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/raptorvsworld-ii/</guid>
      <description>(Ya que la forma en que presenta github los readme&amp;rsquo;s no es apropiada para una extensa tabla, he agregado la comparativa como una pagina (oculta e independentista) del blog: aqui)
Hace tiempo que no actualizaba la &amp;ldquo;Performance comparison of regular expression engines&amp;rdquo;, una prueba que tome prestada de dark100 (nick de sourceforge) so-pretexto de poner a prueba la version en Go de mi motor pueril de expresiones regulares (alias Recursive Regexp Raptor), al cual profeso apego, alegria y frustracion por el tiempo inmensurable que le he invertido.</description>
    </item>
    
    <item>
      <title>regexp4-go (dia cero)</title>
      <link>https://nasciiboy.github.io/prog/regexp4-go/</link>
      <pubDate>Sat, 15 Jul 2017 21:36:03 -0500</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/regexp4-go/</guid>
      <description>regexp4 es un &amp;ldquo;motor&amp;rdquo; de expresiones regulares de la familia de los motores regulares Recursive Regexp Raptor, o expresado de otra forma: una libreria de expresiones regulares hecha desde cero, reinventando la rueda (o no) de la manera (que para mi es la) mas simple posible. sin arboles de evaluacion, ni liberacion de memoria, ni cosas raras o esa es la intencion, almenos de las versiones en C
cual es entonces la necesidad de que exista esta version en go, podrias preguntar.</description>
    </item>
    
    <item>
      <title>regexp3-go (dia cero)</title>
      <link>https://nasciiboy.github.io/prog/regexp3-go/</link>
      <pubDate>Sat, 11 Feb 2017 10:26:04 -0600</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/regexp3-go/</guid>
      <description>Hace un año, luego de &amp;ldquo;maquetar&amp;rdquo; algunos libros en org-mode, decidi crear mi propio lenguaje de marcas ligeras, con casinos y colegialas japonesas, programar un substituto del comando man/info y aniquilar a html/latex como sistema de documentacion.
Un mes mas tarde fruto de la necesidad de parsear el texto del nuevo lenguaje y mi incapacidad de entender como utilizar una libreria de expresiones regulares, nacio Recursive Regexp Raptor (alias regexp3) que es un motor de expresiones regulares para C, otro mes mas tarde salio a la web la primer version en forma de repositorio en github y ahora&amp;hellip; ni hay un nuevo lenguaje, ni un substituto de man/info, ni ha muerto html y he dedicado mas horas de las que jamas pense en regexp3 (y regexp4 &amp;ldquo;el sucesor&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>Raptor-Book</title>
      <link>https://nasciiboy.github.io/prog/raptor-book/</link>
      <pubDate>Wed, 11 Jan 2017 10:03:58 -0600</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/raptor-book/</guid>
      <description>Solo queria programar un juego similar a Megaman 2
y termine instalando debian, leyendo de bash, sdl, ncurses, c, c++, Emacs&amp;hellip;
Desafortunadamente aun no hay un texto sagrado de nombre &amp;ldquo;De Cero a Motor 3D&amp;rdquo; (en solo 15 años) ni siminar. Entre intentar aprender ingles y buscar un sistema de documentacion decente, termine por programar un motor de expresiones regulares sin comprender la teoria de automatas finitos, lenguajes finitos ni recordar un poco de las clases de mate de nivel basico, pues no llegue al medio&amp;hellip;</description>
    </item>
    
    <item>
      <title>Performance comparison of regular expression engines</title>
      <link>https://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</link>
      <pubDate>Fri, 16 Dec 2016 20:22:03 -0600</pubDate>
      
      <guid>https://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</guid>
      <description>Hola gente, hace unos meses tome el codigo de dark100 &amp;ldquo;Performance comparison of regular expression engines&amp;rdquo; (pueden ver el orginal aqui) para hacer algunas pruebas a un pequeño motor regexp que programe en mi tiempo libre?, bueno &amp;hellip; acabo de actualizar la prueba (aqui)
El proceso fue el siguiente
 Optener el codigo fuente de cada motor (PCRE2, RE2, tre, oniguruma)
 Compilar cada motor localmente (intel x86-64 celeron 847), es decir</description>
    </item>
    
  </channel>
</rss>