<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Progs on nba - GNU&#39;s Rock</title>
    <link>http://nasciiboy.github.io/prog/</link>
    <description>Recent content in Progs on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL 3.0</copyright>
    <lastBuildDate>Thu, 23 Nov 2017 16:26:40 -0600</lastBuildDate>
    
	<atom:link href="http://nasciiboy.github.io/prog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTC One M8 (flasheo)</title>
      <link>http://nasciiboy.github.io/prog/m8/</link>
      <pubDate>Thu, 23 Nov 2017 16:26:40 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/m8/</guid>
      <description>sucede que estas tranquilamente con tu dispositivo (un androide 4.4) que se arrastra por la vida, un dia revisando la playstore aparece que google te esta revisando las aplicaciones para que no tengas que preocuparte por tontaaas de seguridad o virus. Te cuiada tanto que ni te aviza, le dices que no tiene que hacerlo, pero insiste.
Otro dia revisas tus apps y cual hongo &amp;ldquo;nace&amp;rdquo; un nuevo icono de nombre Ajustes de Google, va, si esto no lo instale yo, que generosidad&amp;hellip; y asi tu dispositivo con pocos recursos, programado en java, sobre java, sobre un nucleo, sobre un hardware con 500MB de ram y doble nucleo arm, no puede reproducir un puñetero audio decentemente.</description>
    </item>
    
    <item>
      <title>The Return Of F</title>
      <link>http://nasciiboy.github.io/prog/the-return-of-f/</link>
      <pubDate>Thu, 16 Nov 2017 13:24:08 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/the-return-of-f/</guid>
      <description>Siguiendo esa bonita tradicion de las entradas &amp;ldquo;que hacer despues de instalar X&amp;ldquo;, llega el turno de hacer un: &amp;ldquo;que hacer despues de instalar&amp;hellip; Fedora&amp;hellip;&amp;rdquo;
y, es que el tour por antergos fue un encanto mientras duro, pero cuando las cosas se pusieron feas, la ultima opcion que quedaba fue regresar a las frias y perversas garras (reptili|fedori)anas.
Jo, jo, jo, no todo es tan malo, creo, freidora tambien tiene de lo ultimo y por ahora el unico problema es que el equipo no se apaga si no es con un reinicio y cortando el switch de la fuente en el interludio&amp;hellip;.</description>
    </item>
    
    <item>
      <title>Java &amp; Me(h)</title>
      <link>http://nasciiboy.github.io/prog/javame/</link>
      <pubDate>Fri, 10 Nov 2017 14:57:41 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/javame/</guid>
      <description>Por que razones concientes y sin coercion externa aprender java?
en mi caso, hice un solemne juramento de no aprender java (y quiza python, js&amp;hellip;) y en general nada 7 veces mas lento que C&amp;hellip; porque cualquier lenguaje un orden de magnitud mas lento que C, es directamente una basura&amp;hellip; o tiene un ambito de uso extremadamente especifico, como servir para crear extensiones o como prompt. Fuera de este uso, nadie &amp;ldquo;serio&amp;rdquo; sacarlos deberia.</description>
    </item>
    
    <item>
      <title>OCR</title>
      <link>http://nasciiboy.github.io/prog/ocr/</link>
      <pubDate>Thu, 09 Nov 2017 17:10:40 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/ocr/</guid>
      <description>sucede que tenia un libro que aprecio muchisimo, pero mucho mucho mucho, aunque no lo habia leido y lo escaneeehee para convertirlo en otra cobaya del proyecto morg, y para leerlo&amp;hellip; y por que supongo que lo voy a necesitar con inmediates y de forma reiterativa en el futuro.
asi que en un acto de benevolencia, pereza y mayor exactitud (o no), paso por mi mente darle otra oportunidad al ocr y ver si con el paso del tiempo la cosa habia ido a mejor o en definitiva hay que esperar la aparicion de inteligencias artificiales reales, para la titanica tarea de digitalizar todo el conocimento</description>
    </item>
    
    <item>
      <title>blackfriday</title>
      <link>http://nasciiboy.github.io/prog/blackfriday/</link>
      <pubDate>Fri, 27 Oct 2017 17:42:32 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/blackfriday/</guid>
      <description>Durante la modificacion del morg, habia escrito esto junto con otras notas vagas en una bitocora de abordo que trata de ser FIFO, aunque si no mantengo la constancia comienza a crecer y crecer hasta volverse incomoda. Asi pues (y como el post anterior) a despejar algunas de esas divagaciones
Como (no) construir un parser para un lenguaje de marcas (ligeras) con morg (parser y lenguaje de marcas ligueras inventado por yo) la construccion al igual que casi todas mis mierdas, fue fruto de reinventar la rueda + prueba y error constantes, tratando de mantener una cierta sencilles&amp;hellip; mientras la raices de la incertidubre sobre si el proyecto llegaria a ser funcional o quedaria truncado por la ignorancia y malas deciciones de diseño orientadas en su mayoria por la aleatoriedad, me consumen lentamente</description>
    </item>
    
    <item>
      <title>Raptor Down</title>
      <link>http://nasciiboy.github.io/prog/raptor-down/</link>
      <pubDate>Fri, 27 Oct 2017 16:58:55 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptor-down/</guid>
      <description>El Conteo Final De los pocos proyectos presentables que tengo, la libreria de expresiones regulares (estilo) &amp;ldquo;raptor&amp;rdquo; contiene lo suficiente de mi&amp;hellip; que aun si el fastidio se presentara mañana y dejara de programar, seria suficiente para sentirme satisfecho
incluso inclui algunas caracteristicas &amp;ldquo;avanzadas&amp;rdquo; (no regexp) de otros motores, por ejemplo una exprecion texto.*mas-texto en raptor era texto(mas-texto)*#!mas-texto, algo que denomine como negacion de expresiones
perooo, la negacion de expresiones requeria romper con la sencilles de la libreria (o motor o como se diga).</description>
    </item>
    
    <item>
      <title>lxde shortcuts</title>
      <link>http://nasciiboy.github.io/prog/lxde-shortcuts/</link>
      <pubDate>Sun, 22 Oct 2017 12:36:18 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/lxde-shortcuts/</guid>
      <description>A Gnome ♥ lo que pida! Mas, si el equipo es incapas de cumplir sus exigencias para una experiencia completa (contar con un procesador con 2 nucleos, 2 monitores y 3GB de ram), mejor optar por un entorno poco exigente en sus recursos
asi pues en una laptop limitada con 10 años en su historia (32bits con 512MB ram) el balance ideal (segun varias prubas) fue debian 9 con lxde, que, no solo consigue regresar de la vida al equipo, tiene la potencia suficiente como para ejecutar un navegador consumista moderno, varias terminales, editor, fluidez con los videos e incluso ejecutar varios emuladores, todo con un sistema actualizado, moderno y libre</description>
    </item>
    
    <item>
      <title>Que es Morg? [Redux]</title>
      <link>http://nasciiboy.github.io/prog/morg-redux/</link>
      <pubDate>Sun, 15 Oct 2017 14:52:46 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-redux/</guid>
      <description>(el cuadro superior izquierdo, es una version colareada con gimp, el resto son capturas reales. Lo de redux, no es por ser un video que ha tirado el yutu y se ha resivido, mas bien, es una actualizacion de un post anterior, al que no queria cambiar la fecha, cosa que modificaria el mapa del sitio, ademas, queria hacer propaganda por el feed)
que es morg?
el nombre de otro sistema de documentacion de marcas ligeras, basado en otros sistemas de documentacion (de marcas ligeras)</description>
    </item>
    
    <item>
      <title>The X86 Strikes Back</title>
      <link>http://nasciiboy.github.io/prog/the-x86-strikes-back/</link>
      <pubDate>Sat, 14 Oct 2017 12:38:00 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/the-x86-strikes-back/</guid>
      <description>bueno, la imagen es mas de 8bits que por ahora son los equipos retro-nostalgicos de moda, ya le llegara su momento a x86.
Esta historia trata de como pase (sin querer) de considerar obsoleto el hardware x86, pidiendo que todos esos equipos entregasen su silicio al mundo, a creer que aun son equipos potables para su uso diario o en el peor de las casos para utilizarlos como instrumentos de iniciacion en el heretico culto de Emacs, las ttys y la &amp;ldquo;verdadera&amp;rdquo; programacion</description>
    </item>
    
    <item>
      <title>benchmarks dentro de un programa en go</title>
      <link>http://nasciiboy.github.io/prog/gomark/</link>
      <pubDate>Fri, 06 Oct 2017 21:03:55 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/gomark/</guid>
      <description>en Go podemos realizar benchmarks dentro de los ficheros _test.go, sin embargo realizar comparativas dentro de en un programa &amp;ldquo;regular&amp;rdquo; no es (era) tan sencillo hasta la llegada de la version 1.9
cgo la primer opcion es echar mano de la libreria time de C. Esta libreria contiene la funcion clock que nos regresa una aproximacion a la cantidad de tiempo del procesador que ha utilizado el programa desde su ejecucion.</description>
    </item>
    
    <item>
      <title>morg v0.20</title>
      <link>http://nasciiboy.github.io/prog/morg-v020/</link>
      <pubDate>Fri, 06 Oct 2017 17:33:57 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-v020/</guid>
      <description>One More Kiss woooooo!!! wraaoggghhh!!! (&amp;amp;) wrooomgfff!!!
aunque he dedicado aproximadamente los ultimos 2 meses en exclusiva y de forma obsesa a la refactorizacion de morg, su codigo sigue siendo mediocre. mentiria si dijera que comparativamente no ha avanzado un guevo con respecto a la ultima vez que lo toque, pero como diria mick, &amp;ldquo;no me satisface&amp;rdquo; (aun)
muchas cosas he aprendido por el camino, sobre todo relacionado con Go, pues ahora si me siento comodo y casi seguro con su huso, tambien aprendi ha hacer un &amp;ldquo;Scanner&amp;rdquo; para identificar lineas&amp;hellip; cadenas, numeros, constantes y otros cosas dentro de una cadena &amp;ldquo;cruda&amp;rdquo; de texto, ademas ahora se, que las cadenas (como las cucharas) no existen, y un monton de cosas mas que ya no recuerdo&amp;hellip;</description>
    </item>
    
    <item>
      <title>Sayonara F</title>
      <link>http://nasciiboy.github.io/prog/sayonara-f/</link>
      <pubDate>Thu, 14 Sep 2017 16:16:26 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/sayonara-f/</guid>
      <description>fedora -&amp;gt; antergos (dos pantalas y un adios) aaah, compras un disco duro, optienes dos semanas de depresion y terminas cambiando de distribucion&amp;hellip;
en mi aldea, diria que solo hay un sitio rasonable para comprar hardware, que no por ello con variedad o siquiera stock, asi que cuando logre ahorrar para un hdd de 2TB y no encontre existencias, fui a otro sitio y compre el hdd y termine con un disco de servidor con miles de horas, crujidos y un mal historial del smart, mas eso ocurrio luego de haber pasado casi toda mi coleccion de libros y perderlos en el limbo&amp;hellip;</description>
    </item>
    
    <item>
      <title>iScheme</title>
      <link>http://nasciiboy.github.io/prog/ischeme/</link>
      <pubDate>Sun, 20 Aug 2017 15:59:03 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/ischeme/</guid>
      <description>La traduccion del SICP se esta poniendo matemagicamente densa, casi hostil para mi escaso saber, por su parte los conceptos programacionales con Scheme solo los entiendo a nivel superficial, es decir, podria explicar de que van, pero no ponerlo en nada practico, ademas han dejado de aparecer fraces esotericas.
Con el proposito de enmendar uno de estos dilemas (el de la programacion, por su puesto), me plante comenzar un port del raptor (si, otro mas) al Scheme, mas, pronto me di cuenta que habia olvidado siquiera como definir una variable, una funcion y una l-a-a-m-m-b-d-a-a (que raro suena), oohh, que dilema –dijo interiormente nasciiboy</description>
    </item>
    
    <item>
      <title>Raptor VS Mundo</title>
      <link>http://nasciiboy.github.io/prog/raptorvsworld-ii/</link>
      <pubDate>Sat, 19 Aug 2017 14:20:56 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptorvsworld-ii/</guid>
      <description>(Ya que la forma en que presenta github los readme&amp;rsquo;s no es apropiada para una extensa tabla, he agregado la comparativa como una pagina (oculta e independentista) del blog: aqui)
Hace tiempo que no actualizaba la &amp;ldquo;Performance comparison of regular expression engines&amp;rdquo;, una prueba que tome prestada de dark100 (nick de sourceforge) so-pretexto de poner a prueba la version en Go de mi motor pueril de expresiones regulares (alias Recursive Regexp Raptor), al cual profeso apego, alegria y frustracion por el tiempo inmensurable que le he invertido.</description>
    </item>
    
    <item>
      <title>stylus black-translator</title>
      <link>http://nasciiboy.github.io/prog/stylus-black-translator/</link>
      <pubDate>Thu, 27 Jul 2017 00:50:52 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/stylus-black-translator/</guid>
      <description>Si Firefox es mi navegador de confianza, no es solo por que sea software libre y tenga una fundacion que le da soporte, tambien lo utilizo por que debido a que es software libre y lo desarrolla gente decente, su creacion refleja esta coherencia otorgando un punto fino de manoseo configuratorio mostruoso, no solo un par de botonsitos deslizables&amp;hellip; pero debido a esta misma apertura y los plugins que instalo, que en su mayoria son para tener una navegacion humana, sin basura y demas, termino por romper una u otra cosa, en particular la apariencia</description>
    </item>
    
    <item>
      <title>regexp4-go (dia cero)</title>
      <link>http://nasciiboy.github.io/prog/regexp4-go/</link>
      <pubDate>Sat, 15 Jul 2017 21:36:03 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/regexp4-go/</guid>
      <description>regexp4 es un &amp;ldquo;motor&amp;rdquo; de expresiones regulares de la familia de los motores regulares Recursive Regexp Raptor, o expresado de otra forma: una libreria de expresiones regulares hecha desde cero, reinventando la rueda (o no) de la manera (que para mi es la) mas simple posible. sin arboles de evaluacion, ni liberacion de memoria, ni cosas raras o esa es la intencion, almenos de las versiones en C
cual es entonces la necesidad de que exista esta version en go, podrias preguntar.</description>
    </item>
    
    <item>
      <title>Webeloper – El navegador web</title>
      <link>http://nasciiboy.github.io/prog/webeloper/</link>
      <pubDate>Mon, 10 Jul 2017 23:03:56 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/webeloper/</guid>
      <description>joder, que gracioso, ho, ho, ho, veamos si existe la remota posibiidad que nadie utilize este (en mi mente) despectivo &amp;ldquo;titulo&amp;rdquo;&amp;hellip;
&amp;hellip; no &amp;hellip; bueno, que mas da, no se puede ser &amp;ldquo;innovador&amp;rdquo; todo el tiempo
hola, que tal, esta entrada trata de algunos de los navegadores web que he utilizado y el por que, o esa es la idea
Navegadores por terminal Luego que comienza a agradarte la terminal, y con algo de nostalgia sintetica, dices: &amp;ldquo;veamos eso del internet en la terminal, que igual va mejor que el firefox en mi maquina agonizante con 500 megas de ram&amp;rdquo;, y asi sin demasiado esfuerso aqui esta la lista de navegadores de terminal que en algun momento llege a utilizar (una a dos veces):</description>
    </item>
    
    <item>
      <title>SICP [es] – Guia para Colaboradores</title>
      <link>http://nasciiboy.github.io/prog/sicp-contrib/</link>
      <pubDate>Mon, 10 Jul 2017 17:57:10 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/sicp-contrib/</guid>
      <description>Bienvenidos los contribuidores a la traduccion No oficial de libro SICP al español!
Antes de comenzar, es necesario decir que esta vercion esta formateada en un lenguaje (experimental) de marcas ligeras llamado morg que busca ser mas sencillo que ningun otro lenguaje para crear documentacion, mientras mantiene la mayoria de caracteristicas de otros lenguajes de marcas como xml o los derivados de TeX. Por tanto esta es una de sus primeras pruebas en el mundo real</description>
    </item>
    
    <item>
      <title>SICP (proyecto de traduccion)</title>
      <link>http://nasciiboy.github.io/prog/dot-slash-sicp2es/</link>
      <pubDate>Fri, 07 Jul 2017 18:27:56 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/dot-slash-sicp2es/</guid>
      <description>o en otras palabras dadme pasta! (no en galletas)
faq por que?
para traducir un libro de muchas lineas al español, el Structure and Interpretation of Computer Programs, tambien conocido como SICP
por que sicp?
 en los listados de lecturas para programadores suele aparecer inevitablemente y en los primeros puestos
 puedo traducirlo y combrar por ello, sin romper ninguna ley (creo)
 parece interesante y creo que enseñan a programar, ademas utilizan un derivado de lisp: Scheme</description>
    </item>
    
    <item>
      <title>morg [dia 432]</title>
      <link>http://nasciiboy.github.io/prog/morg-d432/</link>
      <pubDate>Tue, 04 Jul 2017 18:47:44 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-d432/</guid>
      <description>sin un titulo interesante y sin esperar una secuencia tan armonica, confie a un programa informatico de internet la tarea de calcular los dias desde el primer commit del repo de morg, no por ningun hecho revelante y menos por un desarrollo agil, que es mas bien paralitico
bueno, el programa exportador llevaba parado un rato con un bicho enorme, mientras continua el aprendizage del lenguaje Go, a la espera de una refactorizacion, pruebas y demas cosas necesarias, asi pues cuando me decidia a probar a exportar o visualizar algun libro recien maquetado, optenia un log inverso de panicos y direcciones de memoria exadecimales.</description>
    </item>
    
    <item>
      <title>Crear una paleta de color con solo un indice</title>
      <link>http://nasciiboy.github.io/prog/rainbow/</link>
      <pubDate>Sat, 17 Jun 2017 12:39:43 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/rainbow/</guid>
      <description>que tal, como lo indica el titulo vamos a generar una paleta de color apartir de un unico indice, para, por ejemplo colorear una imagen en una escala de colores RGB del negro absoluto (0,0,0) al blanco (255,255,255), con una trancicion &amp;ldquo;suave&amp;rdquo; por estos
El asunto surgio resolviendo algunos de los ejercicios de libro de programacion de go, especificamente el 3.5, donde proponian dar color a una imagen de mandelbrot, que estaba en una escala de grises (de hay viene lo de generar los colores apartir de un solo indice).</description>
    </item>
    
    <item>
      <title>El Lenguaje De programacion Go</title>
      <link>http://nasciiboy.github.io/prog/tgpl/</link>
      <pubDate>Mon, 29 May 2017 22:02:43 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/tgpl/</guid>
      <description>golang, el lenguaje de programacion de sistemas de la gente de google con el que planea llebar a cabo sus mas retorcidos y stalkerosos deseos.
Hoy y tras pocos meses de programacion y muchas horas de investigacion linguistica intentando entender el english, les traigo una reseña de la biblia de golang (Go para los amigos) The Go Programming Language (en adelante TGPL o GPL(?))
el libro los usa-americanos tinen sus medidas extravagantes, siguiendo su ejemplo, yo mido la extencion de un documento en las lineas (de 80 columnas indentadas) que abarca, por ejemplo, 7000-10000 lineas suelen ser la extencion regular de una novela, debajo de esta cantidad es un trabajo corto, superior de esta es extenso y superior a las 20000 lineas ya es muy extenso, aunque Dune utiliza (y muy bien) la friolera y descomunal cantidad de 34150 lineas.</description>
    </item>
    
    <item>
      <title>Nirvana</title>
      <link>http://nasciiboy.github.io/prog/nirvana/</link>
      <pubDate>Thu, 20 Apr 2017 11:54:03 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/nirvana/</guid>
      <description>hu! ha!, imparable el proyecto de programacion morg (nombre temporal) es (o no), mientras tanto y a modo de respaldo (por si en algun momento me convierto al lado privativo de la fuerza&amp;hellip;) les presento las ultimas novedades codificadas del proyecto
Primero se agrego katana que conceptualmente se encarga de parsear/cortar el texto plano formateado, y regresar una estructura convenientemente estructurada que facilita cualquier labor a realizar.
Dentro de la estructura se enucuentran los datos del documento y opciones, ademas de un arreglo de nodos, llamado Toc donde cada elemento es un encabezado (de cualquier nivel) que contiene los parrafos, listas, abouts, tablas, comandos, etc.</description>
    </item>
    
    <item>
      <title>Programmer&#39;s Guide to NCurses</title>
      <link>http://nasciiboy.github.io/prog/pg2ncurses/</link>
      <pubDate>Tue, 11 Apr 2017 12:38:06 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/pg2ncurses/</guid>
      <description>Go, que no es un lenguaje nuevo (ya tiene sus añitos) carece de librerias nativas para desplegar guis, asi como tuis&amp;hellip; bueno esto ultimo no es del todo cierto, pues cuenta con unas pocas librerias nativas para mostrar graficos por la terminal, solo queeee, estan muy verdes, me explico, tienes la habilidad de modificar los caracteres, conocer la dimencion de la terminal, leer la entrada del rator (y teclado) y poco mas, ni funciones para desplegar texto, ni scroll, ni todo el arsenal de funciones que por ejemplo, posee ncurses.</description>
    </item>
    
    <item>
      <title>yorozuya</title>
      <link>http://nasciiboy.github.io/prog/yorozuya/</link>
      <pubDate>Tue, 14 Mar 2017 16:33:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/yorozuya/</guid>
      <description>Yorozuya en una tienda donde se toma cualquier tipo de trabajo por una tarifa&amp;hellip; bienvenidos los encargos!
bueno, bueno, matizando un poco y conectado con la saga de post sobre morg, me encontraba aprendiendo golang y para tener una referencia rapida del lenguaje, pase el libro oficial (apartir de un pdf) a morg (AQUI el material, fuente, resultado e imagenes). Aun le falta una revision fina que ire realizando a medida que avance su lectura, aunque la actualizacion quisa solo vea la luz cuando aparesca el proyecto morg al 100%.</description>
    </item>
    
    <item>
      <title>morg: como usar</title>
      <link>http://nasciiboy.github.io/prog/morg-howto/</link>
      <pubDate>Sun, 12 Mar 2017 09:33:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-howto/</guid>
      <description>la aleatoriadad llevo a programar morg en golang (aunque creo que ya se como portarlo a c) de momento a instalar go
instalar go (version GNU) primero ve a la direccion https://golang.org/dl/ y clica el enlace de descarga donde diga algo como (al dia de escribir esto) go1.8.linux-amd64.tar.gz (Cambia el amd64 por la arquitectura de tu equipo)
Si todo va bien tendras el comprimido en $HOME/Downloads, abrimos un terminal y vamos hay</description>
    </item>
    
    <item>
      <title>morg</title>
      <link>http://nasciiboy.github.io/prog/morg/</link>
      <pubDate>Thu, 02 Mar 2017 06:37:35 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg/</guid>
      <description>Que tal, por fin tras un año de hacer el vago ha surgido el primer exportador del lenguaje de marcas ligeras morg (nombre tentativo). Aun esta en una fase de programacion, con muchos apaños y trucos sucios&amp;hellip; pero funciona! toma eso internet!
Que igual y no era tan dificil, pero que me hice lio y termine programando un motor de expresiones regulares y por puro orgullo lo incluyo en el programa</description>
    </item>
    
    <item>
      <title>INBO</title>
      <link>http://nasciiboy.github.io/prog/inbo/</link>
      <pubDate>Mon, 13 Feb 2017 22:14:42 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/inbo/</guid>
      <description>Despues de año y medio de desempleo (y quiza de ser un inutil) aparecio una idea voy a programar un juego como MegaMan II. Por supuesto, no tenia ningun conocimiento de programacion (ni conputadora), solo tiempo y patrocinadores que gentilmente me proporcionaron un pc pentium 4 con un monitor lcd de imagen difuminada aderesada por unas lineas misteriosas capaces de disminuir la vida util de tus ojos 10 años (como la edad (minima) del pc, coincidencia?</description>
    </item>
    
    <item>
      <title>regexp3-go (dia cero)</title>
      <link>http://nasciiboy.github.io/prog/regexp3-go/</link>
      <pubDate>Sat, 11 Feb 2017 10:26:04 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/regexp3-go/</guid>
      <description>Hace un año, luego de &amp;ldquo;maquetar&amp;rdquo; algunos libros en org-mode, decidi crear mi propio lenguaje de marcas ligeras, con casinos y colegialas japonesas, programar un substituto del comando man/info y aniquilar a html/latex como sistema de documentacion.
Un mes mas tarde fruto de la necesidad de parsear el texto del nuevo lenguaje y mi incapacidad de entender como utilizar una libreria de expresiones regulares, nacio Recursive Regexp Raptor (alias regexp3) que es un motor de expresiones regulares para C, otro mes mas tarde salio a la web la primer version en forma de repositorio en github y ahora&amp;hellip; ni hay un nuevo lenguaje, ni un substituto de man/info, ni ha muerto html y he dedicado mas horas de las que jamas pense en regexp3 (y regexp4 &amp;ldquo;el sucesor&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>Gnome Keys</title>
      <link>http://nasciiboy.github.io/prog/gnome-keys/</link>
      <pubDate>Wed, 18 Jan 2017 20:57:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/gnome-keys/</guid>
      <description>He utilizado gnome 2 (mas de un año en Debian 6), tambien xfce, lxde, dwm, ratpoison, stumpwm, kde 4, kde 5, fluxbox y openbox (y visto unity&amp;hellip;) con todo, mi escritorio es y sera Gnome Shell
Lo unico que evita que Gnome Shell sea perfecto es la capacidad de personalizar el teclado a gusto, como puede ofreser kde, o eso creia.
Hace un par de dias comence a utilizar un emulador grafico nuevo llamado terminix el cual tambien adolece de una personalizacion profunda de los atajos de teclado, asi que me pase por su proyecto y les deje una lista de deseos.</description>
    </item>
    
    <item>
      <title>Raptor-Book</title>
      <link>http://nasciiboy.github.io/prog/raptor-book/</link>
      <pubDate>Wed, 11 Jan 2017 10:03:58 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptor-book/</guid>
      <description>Solo queria programar un juego similar a Megaman 2
y termine instalando debian, leyendo de bash, sdl, ncurses, c, c++, Emacs&amp;hellip;
Desafortunadamente aun no hay un texto sagrado de nombre &amp;ldquo;De Cero a Motor 3D&amp;rdquo; (en solo 15 años) ni siminar. Entre intentar aprender ingles y buscar un sistema de documentacion decente, termine por programar un motor de expresiones regulares sin comprender la teoria de automatas finitos, lenguajes finitos ni recordar un poco de las clases de mate de nivel basico, pues no llegue al medio&amp;hellip;</description>
    </item>
    
    <item>
      <title>2017Challenges</title>
      <link>http://nasciiboy.github.io/prog/2017challenges/</link>
      <pubDate>Wed, 04 Jan 2017 20:41:22 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/2017challenges/</guid>
      <description>Hace unos dias (presuntamente a principio de año) aparecio en reddit (r/programming) un enlace a una competencia para programadores mediante github 2017Challenges.
Aparentemente, el premio es el reto, la busqueda de nuevo conocimiento y la alegria interior de ser el primero en publicar una solucion (ingeniosa) para un lenguaje determinado&amp;hellip;
iniciaron con cuatro pruebas
 Hello World: escribir un programa &amp;ldquo;hola mundo&amp;rdquo;
 Reverse String: invertir el orden de una cadena</description>
    </item>
    
    <item>
      <title>Ncurses</title>
      <link>http://nasciiboy.github.io/prog/ncurses/</link>
      <pubDate>Mon, 19 Dec 2016 21:45:05 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/ncurses/</guid>
      <description>Que es Ncurses Es una libreria (parte del proyecto GNU) que nos permite crear TUIs (Text User Interface) escrita en lenguaje de programacion C con envoltorios para algunos otros lenguajes. Se utiliza principalmente en el sistema GNU/linux y en los derivados de BSD y probablemente tambien corra en el sistema de las ventanas mediante minGW (Minimalist GNU for Windows).
Proporciona funciones para «dibujar» caracteres en la pantalla con hasta 256 colores disponibles (si la terminal lo permite).</description>
    </item>
    
    <item>
      <title>Performance comparison of regular expression engines</title>
      <link>http://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</link>
      <pubDate>Fri, 16 Dec 2016 20:22:03 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</guid>
      <description>Hola gente, hace unos meses tome el codigo de dark100 &amp;ldquo;Performance comparison of regular expression engines&amp;rdquo; (pueden ver el orginal aqui) para hacer algunas pruebas a un pequeño motor regexp que programe en mi tiempo libre?, bueno &amp;hellip; acabo de actualizar la prueba (aqui)
El proceso fue el siguiente
 Optener el codigo fuente de cada motor (PCRE2, RE2, tre, oniguruma)
 Compilar cada motor localmente (intel x86-64 celeron 847), es decir</description>
    </item>
    
  </channel>
</rss>