<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nba - GNU&#39;s Rock</title>
    <link>http://nasciiboy.github.io/tags/index.xml</link>
    <description>Recent content on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL 3.0</copyright>
    <atom:link href="http://nasciiboy.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>la forma en que trabajo</title>
      <link>http://nasciiboy.github.io/post/workspace/</link>
      <pubDate>Fri, 20 Jan 2017 22:16:06 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/post/workspace/</guid>
      <description>

&lt;p&gt;Me gusta leer sobre la configuracion de otras personas, ver videos reseñando
algun teclado, recorrer calles que no conosco&amp;hellip;&lt;/p&gt;

&lt;p&gt;Despues de algunos años de pruevas, recoleccion y pocas compras, esta es la
configuracion con la que &lt;q&gt;trabajo&lt;/q&gt; (pasar el tiempo es mas apropiado). A
pesar de esta lejos de ser la configuracion de mis sueños, cumple con su labor
dia a dia.&lt;/p&gt;

&lt;p&gt;Espero disfruten de mi cuento&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../workspace.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;El corazon de mi caballo de batalla, es una placa de gama baja de la marca asus,
el modelo es C8HM70 en formato itx con un procesador (soldado) intel celeron 847
de doble nucleo a 1.1GHz + un puerto PCI ocupado por una grafica asus 210
silent + 2 slots de memoria ram DDR3 de 4GB + dos puertos SATA, uno para un ssd
kingston 3k de 240GB, el otro para un hdd wenster digital blue de 1TB (y un hdd
de 320GB no conectado).&lt;/p&gt;

&lt;p&gt;El gabinete es una herencia de un pc armado que tenia una placa con un pentium
4.&lt;/p&gt;

&lt;p&gt;Dos monitores (imagen superior) uno de 1366x768 en 19&amp;rdquo; y otro 1024x768 15&amp;rdquo;,
ambos con conector vga, uno conectado a la placa y otro a la grafica dedicada.&lt;/p&gt;

&lt;p&gt;Un teclado mecanico corsair strafe rgb de switches rojos (con el tiempo,
liquidos derramados y una capa de grasa en las teclas, ha venido el
cariño&amp;hellip; cambiaria los switches por azules o cafes) + un raton logitech
inalambrico m185 + gamepad logitech inalambrico f710.&lt;/p&gt;

&lt;p&gt;Unos audifonos de diadema (los mas baratos) sony mdr-zx100.&lt;/p&gt;

&lt;p&gt;Un cuaderno, una pluma roja y una hoja con la tabla de los operadores de C.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../hardware.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;el-sistema-operativo&#34;&gt;El sistema operativo&lt;/h2&gt;

&lt;p&gt;Por tres años, Debian fue quien movia el aparato, hasta que la nacion del fuego
ataco (monitor extra con vga) y la unica distribucion que hizo funcionar la
grafica integrada en conjunto con la dedicada fue (redobles, luego el sonido
previo a la aparicon de una creatura destructora) chan, chan, chan,
fedora&amp;hellip; ademas del regreso del avatar tamben anelo el dia en que Debian o
algun Arch esten de nuevo en el disco duro.&lt;/p&gt;

&lt;h2 id=&#34;el-entorno-de-escritorio-y-lo-demas&#34;&gt;El entorno de escritorio&amp;hellip; y lo demas&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Gnome!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Es minimalista, elegante por defecto y con mi hardware va fenomenal.&lt;/p&gt;

&lt;p&gt;Solo tiro de dos extensiones externas, &lt;a href=&#34;https://github.com/hedayaty/NetSpeed&#34;&gt;netspeed&lt;/a&gt; que muestra en la barra de estado
las estadisticas de la red (subida/bajada) y &lt;a href=&#34;https://github.com/aleho/gnome-shell-volume-mixer&#34;&gt;Volume Mixer&lt;/a&gt; para controlar el volumen
de manera independiente para cada aplicacion&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../fly-kp_5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Al princio tenia 4 espacios de trabajo, luego 6, despues 7 y finalmente pase a
10. Cada escritorio tiene su propio atajo de teclado, &lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;KP_..9&lt;/code&gt; para
moverse entre los escritorios y &lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;KP_0..9&lt;/code&gt; para mover ventanas
a un escritorio distinto.&lt;/p&gt;

&lt;p&gt;Tambien hay combinaciones para cambiar de una pantalla a otra y aunque suelo
tener solo dos ventanas por espacio de trabajo (una en cada pantalla) dispuse
cuatro combinaciones para cambiar entre las aplicaciones de cada escritorio
&lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;Esp&lt;/code&gt;, &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;Tab&lt;/code&gt;, &lt;code&gt;Super&lt;/code&gt; (derecho) + &lt;code&gt;Enter&lt;/code&gt; y &lt;code&gt;Super&lt;/code&gt;
(derecho) + &lt;code&gt;Retroceso&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tres espacios de trabajo estan reservados para programacion (&lt;code&gt;Super&lt;/code&gt; +
&lt;code&gt;KP_4..6&lt;/code&gt;). En estas habita una instancia de Emacs con 5 paneles y una consola
con una o dos pestañas, todo a pantala completa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../kp_5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a los siguientes tres espacios (&lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;KP_1..3&lt;/code&gt;). El primero con un
navegador de ficheros con 5 o mas pestañas (en este espacio suelo ver videos,
visualizar cosas y editar imagenes). El segundo, tiene una terminal donde
escucho musica con &lt;code&gt;moc&lt;/code&gt; y un emacs con una lista de mi coleccion musical y las
tareas que realizo (si son parte de un proyecto luego lo utilizo para el
commit). En el tercer espacio estan qbittorrent y thunderbird&lt;/p&gt;

&lt;p&gt;El espacio asignado a &lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;KP_0&lt;/code&gt; esta reservado para firefox, con pestañas en el
traductor y en general para investigar lo que haga falta&lt;/p&gt;

&lt;p&gt;Finalmente los espacios (&lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;KP_7..9&lt;/code&gt;) son para eventualidades.
Recientemente en &lt;code&gt;Super&lt;/code&gt; + &lt;code&gt;KP_6&lt;/code&gt; puse un emacs dedicado a erc, elfeed, eww y un
firefox abierto en reddit.&lt;/p&gt;

&lt;p&gt;Por comodidad trato de utilizar el raton lo menos posible, su uso esta limitado
a firefox y aplicaciones graficas&lt;/p&gt;

&lt;p&gt;En el pasado cuando utilizaba solo un monitor (de &amp;ldquo;15) tenia que sobreponer las
aplicaciones de extravagantes e incomodas formas, ahora cada una tiene su propia
pantalla en su propio espacio de trabajo y combinacion, de esta forma puedo
pasar de un lado a otra automaticamente sin pensarlo demasiado.&lt;/p&gt;

&lt;h2 id=&#34;teclado&#34;&gt;Teclado&lt;/h2&gt;

&lt;p&gt;El teclado tiene una distrubicion en lenguaje ingles mapeado como programmer dvorak
con estas teclas modificadas&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Caps Lock&lt;/code&gt; es &lt;code&gt;Control&lt;/code&gt; (izquierdo)&lt;/li&gt;
&lt;li&gt;Sobre &lt;code&gt;Enter&lt;/code&gt; esta &lt;code&gt;Caps Lock&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Al lado del nuevo &lt;code&gt;Caps Lock&lt;/code&gt; esta &lt;code&gt;Control&lt;/code&gt; (Derecho)&lt;/li&gt;
&lt;li&gt;Donde estaba &lt;code&gt;Control&lt;/code&gt; (izquierdo) esta &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Donde estaba &lt;code&gt;Control&lt;/code&gt; (derecho) esta &lt;code&gt;@&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Super&lt;/code&gt; derecho tambien esta mapeado como &lt;code&gt;Super&lt;/code&gt; izquierdo&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;La modificacion no esta hecha mediante un mapeo del teclado, en esencia porque
desconosco de donde demonios tome gnome el mapeo. Como el teclado no es un
teclado al uso, es mas bien un tablero con muchas teclas y luces independientes,
requiere un software dedicado para funcionar llamado ckb, desde el cual realice
el cambio.&lt;/p&gt;

&lt;p&gt;Nota: El teclado tambien fuciona sin software&lt;/p&gt;

&lt;p&gt;Al principio utilizaba el mapeo en español y pulsaba las teclas con dos dedos,
luego aprendi mecanografia en mapeo qwerty español, despues salte a qwerty
ingles y efectivamente es mas comodo para programar, no se si lo habras notado,
pero qwerty requiere mover los dedos a posiciones poco practicas asi que
investigando un poco pase a programmer dvork en ingles. Luego de 1 año con este
mapeo puedo asegurar que es mucho mas comodo, veloz y eficiente, aunque no
estoy seguro si sea o no mejor, tener las teclas numericas o los simbolos,
supongo que hay que elegir&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;aplicaciones-y-emacs-con-atajos-especificos&#34;&gt;Aplicaciones (y Emacs) con atajos especificos&lt;/h2&gt;

&lt;p&gt;Abras notado que los comandos del escritorio en mi configuracion involucran la
tecla &lt;code&gt;Super&lt;/code&gt;, bien, los siguientes atajos no son la exepcion&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; para emacs compilado desde el codigo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt; para emacs optenido desde el repositorio de la distribucion&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z&lt;/code&gt; para firefox&lt;/li&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt; para el visor de documentos pdf (evince)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; para konsole&lt;/li&gt;
&lt;li&gt;&lt;code&gt;t&lt;/code&gt; para terminix&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;fin&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raptor-Book</title>
      <link>http://nasciiboy.github.io/prog/raptor-book/</link>
      <pubDate>Wed, 11 Jan 2017 10:03:58 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptor-book/</guid>
      <description>&lt;p&gt;Solo queria programar un juego similar a &lt;strong&gt;Megaman 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../MegaMan2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;y termine instalando debian, leyendo de bash, sdl, ncurses, c, c++, Emacs&amp;hellip;&lt;/p&gt;

&lt;p&gt;Desafortunadamente aun no hay un texto sagrado de nombre &lt;strong&gt;&amp;ldquo;De Cero a Motor
3D&amp;rdquo;&lt;/strong&gt; (en solo 15 años) ni siminar. Entre intentar aprender ingles y buscar un
sistema de documentacion decente, termine por programar un motor de expresiones
regulares sin comprender la teoria de automatas finitos, lenguajes finitos ni
recordar un poco de las clases de mate de nivel basico, pues no llegue al
medio&amp;hellip;&lt;/p&gt;

&lt;p&gt;Con estos precedentes, el tiempo que brinda el desempleo en un mundo turbulento
lleno de humanos, aleatoriedad incomprendida y falto de materiales
psicotropicos, comence a escribir un libro lleno de palabras dilexicas que
muestra lo aprendido hasta ahora, con la sucia intencion de ganar dinero&amp;hellip; y
aportar conocimiento de libre disposicion a quien lo desee.&lt;/p&gt;

&lt;p&gt;De que va el libro? Como programar un motor de expresiones regulares sin tener
ni idea, el unico requisito es saber lenguaje de programacion C.&lt;/p&gt;

&lt;p&gt;Por ahora estoy revisando y reescribiendo las primeras secciones, pueden
colaborar con revision, anotaciones de que puntos se pueden mejorar y lo que les
venga en gana. Hay una version en html y en el repositorio hay una explicacion
un poco mas detallada.&lt;/p&gt;

&lt;p&gt;Pueden descargar una copia en un comprimido zip &lt;a href=&#34;https://github.com/nasciiboy/raptor-book/archive/master.zip&#34;&gt;aqui&lt;/a&gt; o
clonar el repositiorio asi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/nasciiboy/raptor-book.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aunque no me gustan los tutoriales en fasciculos, se iran agregando secciones al
libro segun esten listas, intentare ser constante.&lt;/p&gt;

&lt;p&gt;happy hacking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017Challenges</title>
      <link>http://nasciiboy.github.io/prog/2017Challenges/</link>
      <pubDate>Wed, 04 Jan 2017 20:41:22 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/2017Challenges/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../orange.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hace unos dias (presuntamente a principio de año) aparecio en reddit
(r/programming) un enlace a una competencia para programadores mediante github &lt;a href=&#34;https://github.com/YearOfProgramming/2017Challenges&#34;&gt;2017Challenges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aparentemente, el premio es el reto, la busqueda de nuevo conocimiento y la
alegria interior de ser el primero en publicar una solucion (ingeniosa) para un
lenguaje determinado&amp;hellip;&lt;/p&gt;

&lt;p&gt;iniciaron con cuatro pruebas&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Hello World: escribir un programa &amp;ldquo;hola mundo&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reverse String: invertir el orden de una cadena&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Lonely: encontrar elementos no repetidos en un arreglo con longitud y valores
aleatorios, con opcion de mesclar enteros y caracteres&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Majority Element: dentro de un arreglo de longitud y elementos aleatorios,
localizar el valor que se repita almenos la mitad de la dimencion del arreglo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Invert Binary Tree: invertir un arbol binario&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;El dia de hoy se incluyo un nuevo reto&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the Difference: comparar dos cadenas donde una difiere en incluir un
caracter adicional, el punto es desplegar el caracter discordante&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cualquier lenguaje de programacion es valido&amp;hellip; he? pues si, lo que mas abunda
son python, seguido por java y javascript&amp;hellip;&lt;/p&gt;

&lt;p&gt;Todo lo necesario para que el codigo se incluya en el repositorio esta explicado
en el &lt;code&gt;readme.md&lt;/code&gt; del proyecto (o en internet)&lt;/p&gt;

&lt;p&gt;No ser un guru de la programacion es un buen motivo para participar, como
tambien aprender a colaborar en un proyecto mediante git(hub) (no tengo ni idea
que hacen fetch, merge, o el orden en que deba realizarce el pull), ademas
puedes poner en practica estructuras &amp;ldquo;complejas&amp;rdquo; como los arboles binarios, que
en mi caso solo los habia visto de lejos con respeto y admiracion en el &amp;ldquo;k&amp;amp;r&amp;rdquo; y
&amp;ldquo;C como programar&amp;rdquo;&lt;/p&gt;

&lt;p&gt;de momento llebo los 4 primeros retos en c (&lt;a href=&#34;https://github.com/nasciiboy/2017Challenges&#34;&gt;aqui&lt;/a&gt;) (aun pendientes de aprobacion los
ultimos 2), cuando tenga mas confianza intentare con go y en algun futuro lejano
quiza con lisp.&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>first theme</title>
      <link>http://nasciiboy.github.io/emacs/first-theme/</link>
      <pubDate>Wed, 28 Dec 2016 17:17:04 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/first-theme/</guid>
      <description>

&lt;h2 id=&#34;crear-un-tema-en-emacs&#34;&gt;Crear un Tema en Emacs&lt;/h2&gt;

&lt;h3 id=&#34;un-poco-de-historia&#34;&gt;un poco de historia&lt;/h3&gt;

&lt;p&gt;Cuando comence a utilizar emacs (hace unos pocos años) para establecer un tema
se utilizaba un paquete llamado &lt;strong&gt;color-theme&lt;/strong&gt; parte del paquete
&lt;code&gt;emacs-goodies-el&lt;/code&gt; de Debian. Al parecer desde la version 24 de emacs se
desaconseja su uso, pese a todo en mi instalacion se mantuvo en servicio hasta
la version 26.0.50 sin generar inconvenientes.&lt;/p&gt;

&lt;p&gt;para la posteridad y los viajeros en el tiempo, dejo aqui el paquete en forma
de &lt;a href=&#34;../color-theme-6.6.0.zip&#34;&gt;zip&lt;/a&gt; (con un tema personalizado de regalo
&lt;code&gt;color-theme-nascii&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;asi es como se utilizaba&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(add-to-list &#39;load-path &amp;quot;~/ruta-a/color-theme-6.6.0&amp;quot;)
(require &#39;color-theme)
(color-theme-initialize)

;; para cargar un tema en especifico
;; (color-theme-nombreDelTema)
(color-theme-nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;establecer-el-tema-por-defecto&#34;&gt;establecer el tema por defecto&lt;/h3&gt;

&lt;p&gt;apartir de emacs version 24 podemos cambiar el tema sin instalar nada con el
comando &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para cambiar el tema se mueve el cursor al tema y se presiona enter&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../custom-themes-ligth-blue.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;para guardar el cambio colocamos el cursor en el &amp;ldquo;boton&amp;rdquo; &lt;strong&gt;Save Theme
Setting&lt;/strong&gt; + un enter, accion que colocara automagicamente unas lineas de codigo
extra en nuestro &lt;code&gt;init.el&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No te van las cosas automagicas? puedes establecer la carga de un tema
directamente en el fichero de configuracion &lt;code&gt;init.el&lt;/code&gt; con&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/RUTA/A/miTema-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si queremos que el menu de seleccion cargue un tema automaticamente, tiene que
estar en nuestro directorio de configuracion &lt;code&gt;~/.emacs.d/&lt;/code&gt;&lt;strong&gt;nombreTema&lt;/strong&gt;&lt;code&gt;-theme.el&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;crear-un-tema&#34;&gt;crear un tema&lt;/h3&gt;

&lt;p&gt;Los temas se crean en base a la configuracion actual, pero tambien podemos crear
un tema a partir de cero segun indiquemos al comando &lt;code&gt;customize-create-theme&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;../customize-create-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;en el recuadro &lt;strong&gt;Theme Name&lt;/strong&gt; damos nombre al tema, en el recuandro
&lt;strong&gt;Description&lt;/strong&gt; dejamos la fecha de creacion o en su lugar colocamos una
descripcion del tema, por ejemplo &lt;code&gt;&amp;quot;nascii-theme un tema obscuro mas...&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;establecemos las variables a gusto y guardamos el tema con &lt;code&gt;C-x C-s&lt;/code&gt; o con un
intro sobre el recuadro &lt;strong&gt;Save Theme&lt;/strong&gt;. Regresamos a &lt;code&gt;customize-themes&lt;/code&gt; y
automagicamente nuestro tema estara disponible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: Si creamos el tema apartir de la configuracion actual y queremos
compartirlo con los demas habitantes de la red, debemos evitar incluir algunas
variables especificas de nuestro sistema en el codigo fuente del tema, por
ejemplo, el tipo de tipografia.&lt;/p&gt;

&lt;h3 id=&#34;ver-los-cambios-al-vuelo&#34;&gt;ver los cambios &amp;ldquo;al vuelo&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Vamos al codigo fuente del tema &lt;code&gt;C-x C-f&lt;/code&gt; &lt;code&gt;~/.emacs.d/miTema-theme.el&lt;/code&gt;,
modificamos el parametro de interes (los colorines se encuentran entre comillas
en formato nombre o en formato hexadecimal de 3 o 6 digitos), luego evaluamos el
buffer con el comando &lt;code&gt;eval-buffer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para hacer un poco menos lioso el asunto asignamos &lt;code&gt;eval-buffer&lt;/code&gt; a una tecla&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(global-set-key [f9] &#39;eval-buffer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;con esto tenemos asignado el comando a la tecla de funcion &lt;strong&gt;F9&lt;/strong&gt;, asi podemos
recargar los cambios estilo navegador web.&lt;/p&gt;

&lt;h3 id=&#34;nascii-theme&#34;&gt;nascii-theme&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;../nascii-theme.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.

;; ---------------------------
;;
;; nascii: Another dark theme
;;
;; ----------------------------

(unless (&amp;gt;= emacs-major-version 24)
  (error &amp;quot;requires Emacs 24 or later.&amp;quot;))

(deftheme nascii
  &amp;quot;Another dark theme&amp;quot;)

(custom-theme-set-faces
 &#39;nascii
 &#39;(default ((t (:weight normal :slant normal :underline nil :overline nil :strike-through nil :foreground &amp;quot;white&amp;quot; :background &amp;quot;black&amp;quot; :stipple nil :inherit nil))))
 &#39;(cursor ((t (:background &amp;quot;yellow&amp;quot;))))
 &#39;(escape-glyph ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;brown&amp;quot;))))
 &#39;(minibuffer-prompt ((((background dark)) (:foreground &amp;quot;cyan&amp;quot;)) (((type pc)) (:foreground &amp;quot;magenta&amp;quot;)) (t (:foreground &amp;quot;medium blue&amp;quot;))))
 &#39;(highlight ((t (:background &amp;quot;darkolivegreen&amp;quot;))))
 &#39;(region ((t (:background &amp;quot;#222&amp;quot; :foreground &amp;quot;#87cefa&amp;quot;))))
 &#39;(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground &amp;quot;grey50&amp;quot;)) (((class color grayscale) (min-colors 88) (background dark)) (:foreground &amp;quot;grey70&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;green&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;yellow&amp;quot;))))
 &#39;(secondary-selection ((t (:background &amp;quot;darkslateblue&amp;quot;))))
 &#39;(trailing-whitespace ((t (:background &amp;quot;red&amp;quot;))))
 &#39;(font-lock-builtin-face ((t (:foreground &amp;quot;LightSteelBlue&amp;quot;))))
 &#39;(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 &#39;(font-lock-comment-face ((t (:foreground &amp;quot;OrangeRed&amp;quot;))))
 &#39;(font-lock-constant-face ((t (:foreground &amp;quot;Aquamarine&amp;quot;))))
 &#39;(font-lock-doc-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-function-name-face ((t (:foreground &amp;quot;LightSkyBlue&amp;quot;))))
 &#39;(font-lock-keyword-face ((t (:foreground &amp;quot;Cyan&amp;quot;))))
 &#39;(font-lock-negation-char-face ((t nil)))
 &#39;(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 &#39;(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 &#39;(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 &#39;(font-lock-string-face ((t (:foreground &amp;quot;LightSalmon&amp;quot;))))
 &#39;(font-lock-type-face ((t (:foreground &amp;quot;PaleGreen&amp;quot;))))
 &#39;(font-lock-variable-name-face ((t (:foreground &amp;quot;LightGoldenrod&amp;quot;))))
 &#39;(font-lock-warning-face ((t (:weight bold :foreground &amp;quot;Pink&amp;quot;))))
 &#39;(button ((t (:inherit (link)))))
 &#39;(link ((((class color) (min-colors 88) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (background light)) (:underline (:color foreground-color :style line) :foreground &amp;quot;blue&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan1&amp;quot;)) (((class color) (background dark)) (:underline (:color foreground-color :style line) :foreground &amp;quot;cyan&amp;quot;)) (t (:inherit (underline)))))
 &#39;(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground &amp;quot;magenta4&amp;quot;)) (((class color) (background dark)) (:foreground &amp;quot;violet&amp;quot;))))
 &#39;(fringe ((t (:background &amp;quot;grey10&amp;quot;))))
 &#39;(header-line ((t (:box nil :foreground &amp;quot;grey20&amp;quot; :background &amp;quot;grey90&amp;quot;))))
 &#39;(tooltip ((t (:foreground &amp;quot;black&amp;quot; :background &amp;quot;lightyellow&amp;quot;))))
 &#39;(mode-line ((t (:box (:line-width -2 :color nil :style released-button) :background &amp;quot;black&amp;quot; :foreground &amp;quot;white&amp;quot;))))
 &#39;(mode-line-buffer-id ((t (:weight bold))))
 &#39;(mode-line-emphasis ((t (:weight bold))))
 &#39;(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color &amp;quot;grey40&amp;quot; :style released-button))) (t (:inherit (highlight)))))
 &#39;(mode-line-inactive ((default (:inherit (mode-line))) (((class color) (min-colors 88) (background light)) (:background &amp;quot;grey90&amp;quot; :foreground &amp;quot;grey20&amp;quot; :box (:line-width -1 :color &amp;quot;grey75&amp;quot; :style nil) :weight light)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;grey30&amp;quot; :foreground &amp;quot;grey80&amp;quot; :box (:line-width -1 :color &amp;quot;grey40&amp;quot; :style nil) :weight light))))
 &#39;(isearch ((t (:foreground &amp;quot;brown4&amp;quot; :background &amp;quot;palevioletred2&amp;quot;))))
 &#39;(isearch-fail ((((class color) (min-colors 88) (background light)) (:background &amp;quot;RosyBrown1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;red4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;red&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;red&amp;quot;)) (((class color grayscale)) (:foreground &amp;quot;grey&amp;quot;)) (t (:inverse-video t))))
 &#39;(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background &amp;quot;paleturquoise&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;paleturquoise4&amp;quot;)) (((class color) (min-colors 16)) (:background &amp;quot;turquoise3&amp;quot;)) (((class color) (min-colors 8)) (:background &amp;quot;turquoise3&amp;quot;)) (t (:underline (:color foreground-color :style line)))))
 &#39;(match ((((class color) (min-colors 88) (background light)) (:background &amp;quot;yellow1&amp;quot;)) (((class color) (min-colors 88) (background dark)) (:background &amp;quot;RoyalBlue3&amp;quot;)) (((class color) (min-colors 8) (background light)) (:foreground &amp;quot;black&amp;quot; :background &amp;quot;yellow&amp;quot;)) (((class color) (min-colors 8) (background dark)) (:foreground &amp;quot;white&amp;quot; :background &amp;quot;blue&amp;quot;)) (((type tty) (class mono)) (:inverse-video t)) (t (:background &amp;quot;gray&amp;quot;))))
 &#39;(next-error ((t (:inherit (region)))))
 &#39;(query-replace ((t (:inherit (isearch))))))

(provide-theme &#39;nascii)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;para cargar el tema, copiar y guardar en &lt;code&gt;&amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;&lt;/code&gt;, luego se
puede cargar/probar ejecutando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(load-file &amp;quot;~/.emacs.d/nascii-theme.el&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o mediante &lt;code&gt;customize-themes&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;referencias&#34;&gt;referencias&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&#34;&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Creating-Custom-Themes.html#Creating-Custom-Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tambien puede acceder directamente al manual dentro de emacs. Copia esto&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[[info:emacs#Creating%20Custom%20Themes]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pegalo en algun buffer, cambia a modo-org, coloca el cursor sobre el texto y
presiona &lt;code&gt;C-c C-o&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Que es GNU Emacs?</title>
      <link>http://nasciiboy.github.io/emacs/que-es-emacs/</link>
      <pubDate>Fri, 23 Dec 2016 20:43:19 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/emacs/que-es-emacs/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../Emacs-logo.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;algunos dicen que es &lt;strong&gt;un editor&lt;/strong&gt;, otros que es &lt;strong&gt;un sistema operativo&lt;/strong&gt;, los mas
filosoficos diran que es  &lt;strong&gt;lo que elijas que sea&lt;/strong&gt;, &lt;strong&gt;una forma de vida&lt;/strong&gt;,
&lt;strong&gt;un camino a seguir&lt;/strong&gt; o incluso que Emacs son los padres&amp;hellip; bueno luego de un
par de años utilizando Emacs esta es mi opinion&lt;/p&gt;

&lt;h2 id=&#34;my-and-mrs-emacs&#34;&gt;My and mrs Emacs&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Yo y la señora Emacs,
tenemos algo que esta creciendo,
sabemos que está mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Nos vemos cada dia en el mismo monitor,
a las 8:30 se que estará ahí,
tomando mis comandos, haciendo toda clase de funciones,
mientras moc toca nuestra canción favorita.&lt;/p&gt;

&lt;p&gt;Yo y la señora, señora Emacs, señora Emacs, señora Emacs,
tenemos algo que esta creciendo,
sabemos que esta mal,
pero es algo muy fuerte como para dejarlo ir ahora.&lt;/p&gt;

&lt;p&gt;Tenemos que ser muy cuidadosos,
de no llevar nuestros sueños muy lejos,
porque ella tiene sus propias obligaciones y yo también,
yo y la señora, señora Emacs, señora Emacs, señora Emacs.&lt;/p&gt;

&lt;p&gt;Bueno, es nuestra hora de irnos,
me duele mucho, mucho por dentro,
y ahora ella tomará su camino, yo el mio,
Pero mañana nos veremos en el mismo lugar, a la misma hora.
Yo y la señora Emacs, señora Emacs, señora Emacs&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;hellip;cof, cof, hem, todo aspirante a programador debe eligir su martillo
forjador de codigo, en mi caso al ser autodidacta unicamente las opiniones de
internet sirvieron de guia (lagrimas ironicas).&lt;/p&gt;

&lt;p&gt;Primero vino la bestia (&lt;strong&gt;VI&lt;/strong&gt;), fue dificil, muy dificil (mas sin saber
mecanografia). Hubo que anotar las combinaciones frecuentes en un papel y pegar
los ojos al teclado y luego al monitor y luego al teclado. Dia tras dia mejoraba
mi Kung Fu y la idea de ser un programador parecia no ser solo un sueño. Tras un
mes de entrenamiento y con algo de confianza probe un enfoque mas visual
(&lt;strong&gt;gedit&lt;/strong&gt;), el resultado? Un sin sabor, era sencillo pero no tenia profundidad,
carecia de potencia, en resumen aburrido, de regreso al viejo dojo encontre una
nueva escuela (&lt;strong&gt;Emacs&lt;/strong&gt;), las clases eran gratis y prometian ser interesantes&lt;/p&gt;

&lt;p&gt;Tras una semana con el tutorial, era tan agil con Emacs como con Vi, nada mal,
se podia hacer todo con el teclado y si lo queria tambien tenia menus accesibles
tanto por las &lt;code&gt;F&lt;/code&gt;s como por el raton (esto ultimo es increible, todo aquel que
asimila la &lt;strong&gt;forma Emacs&lt;/strong&gt; inevitablemente termina por hacer a un lado el
raton. ¿Quien demonios sigue programando esto?).&lt;/p&gt;

&lt;p&gt;Tras unos dias (y con ayuda de algun tutorial) puede cambiar el tema, luego
descubri que se podia navegar por los ficheros desde emacs y que tenia
terminales e interpretes y un tetris y un navegador web y gestor de paquetes y
soporte para cualquier lenguaje de programacion (almenos resaltado) y un sin fin
de utiles(?) aplicaciones, sin embargo &lt;strong&gt;todas compartian el mismo conjunto de
comandos base&lt;/strong&gt; para moverse por la interfaz y manipular texto, aprender lo
especifico de cada funcionalidad (en gerga de emacs, &lt;strong&gt;modo&lt;/strong&gt;) es un tema
aparte que requiere una memoria exepcional&lt;/p&gt;

&lt;p&gt;Cai como un yonqui adicto a cualquier informacion de emacs (los no hablantes de
ingles tenemos un poco mas dicil&amp;hellip; todo), apenas aprendi algun nuevo comando lo
ponia en practica (para olvidarlo un par de horas despues)&lt;/p&gt;

&lt;p&gt;Y un buen dia entientes que puedes programar emacs, que todo comportamiento es
modificable y de echo es modificable &lt;strong&gt;al vuelo&lt;/strong&gt; y te preguntas &lt;strong&gt;¿Que es
Emacs?&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;emacs-es&#34;&gt;Emacs Es&amp;hellip;&lt;/h2&gt;

&lt;p&gt;El interprete de un lenguaje derivado de Lisp (Emacs Lisp). De hecho es el
interprete mas sofisticado que existe y probablemente existira, ya que viene con
el suficiente codigo precargado como para (hacerte creer que es un editor y)
permitirte crear nuevos programas, funcionalidades o modificar Emacs en si
mismo&amp;hellip; existe un mejor diseño que ese?&lt;/p&gt;

&lt;h2 id=&#34;enfoques-sobre-el-texto&#34;&gt;Enfoques sobre el texto&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;teco&lt;/strong&gt;: un leguaje para forjar texto&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vi&lt;/strong&gt;: escribamos caracteres o apliquemos comandos a los caracteres&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;: el texto es la interfaz, el editor es parte de la interfaz,
extendamos y modifiquemos a voluntad y sin restricciones nuestra interfaz&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nano&lt;/strong&gt;: un simple editor&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vim&lt;/strong&gt;: joder, lo que pueden hacer los de emacs, haremos a vi extensible&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sublime&lt;/strong&gt;: hare mi propio vim&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;atom&lt;/strong&gt;: hagamos un editor como sublime pero con tecnologia web awesome!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>