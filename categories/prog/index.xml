<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prog on nba - GNU&#39;s Rock</title>
    <link>http://nasciiboy.github.io/categories/prog/</link>
    <description>Recent content in Prog on nba - GNU&#39;s Rock</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL 3.0</copyright>
    <lastBuildDate>Tue, 04 Jul 2017 18:47:44 -0500</lastBuildDate>
    
	<atom:link href="http://nasciiboy.github.io/categories/prog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>morg [dia 432]</title>
      <link>http://nasciiboy.github.io/prog/morg-d432/</link>
      <pubDate>Tue, 04 Jul 2017 18:47:44 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-d432/</guid>
      <description>sin un titulo interesante y sin esperar una secuencia tan armonica, confie a un programa informatico de internet la tarea de calcular los dias desde el primer commit del repo de morg, no por ningun hecho revelante y menos por un desarrollo agil, que es mas bien paralitico
bueno, el programa exportador llevaba parado un rato con un bicho enorme, mientras continua el aprendizage del lenguaje Go, a la espera de una refactorizacion, pruebas y demas cosas necesarias, asi pues cuando me decidia a probar a exportar o visualizar algun libro recien maquetado, optenia un log inverso de panicos y direcciones de memoria exadecimales.</description>
    </item>
    
    <item>
      <title>Crear una paleta de color con solo un indice</title>
      <link>http://nasciiboy.github.io/prog/rainbow/</link>
      <pubDate>Sat, 17 Jun 2017 12:39:43 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/rainbow/</guid>
      <description>que tal, como lo indica el titulo vamos a generar una paleta de color apartir de un unico indice, para, por ejemplo colorear una imagen en una escala de colores RGB del negro absoluto (0,0,0) al blanco (255,255,255), con una trancicion &amp;ldquo;suave&amp;rdquo; por estos
El asunto surgio resolviendo algunos de los ejercicios de libro de programacion de go, especificamente el 3.5, donde proponian dar color a una imagen de mandelbrot, que estaba en una escala de grises (de hay viene lo de generar los colores apartir de un solo indice).</description>
    </item>
    
    <item>
      <title>El Lenguaje De programacion Go</title>
      <link>http://nasciiboy.github.io/prog/tgpl/</link>
      <pubDate>Mon, 29 May 2017 22:02:43 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/tgpl/</guid>
      <description>golang, el lenguaje de programacion de sistemas de la gente de google con el que planea llebar a cabo sus mas retorcidos y stalkerosos deseos.
Hoy y tras pocos meses de programacion y muchas horas de investigacion linguistica intentando entender el english, les traigo una reseña de la biblia de golang (Go para los amigos) The Go Programming Language (en adelante TGPL o GPL(?))
el libro los usa-americanos tinen sus medidas extravagantes, siguiendo su ejemplo, yo mido la extencion de un documento en las lineas (de 80 columnas indentadas) que abarca, por ejemplo, 7000-10000 lineas suelen ser la extencion regular de una novela, debajo de esta cantidad es un trabajo corto, superior de esta es extenso y superior a las 20000 lineas ya es muy extenso, aunque Dune utiliza (y muy bien) la friolera y descomunal cantidad de 34150 lineas.</description>
    </item>
    
    <item>
      <title>Nirvana</title>
      <link>http://nasciiboy.github.io/prog/nirvana/</link>
      <pubDate>Thu, 20 Apr 2017 11:54:03 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/nirvana/</guid>
      <description>hu! ha!, imparable el proyecto de programacion morg (nombre temporal) es (o no), mientras tanto y a modo de respaldo (por si en algun momento me convierto al lado privativo de la fuerza&amp;hellip;) les presento las ultimas novedades codificadas del proyecto
Primero se agrego katana que conceptualmente se encarga de parsear/cortar el texto plano formateado, y regresar una estructura convenientemente estructurada que facilita cualquier labor a realizar.
Dentro de la estructura se enucuentran los datos del documento y opciones, ademas de un arreglo de nodos, llamado Toc donde cada elemento es un encabezado (de cualquier nivel) que contiene los parrafos, listas, abouts, tablas, comandos, etc.</description>
    </item>
    
    <item>
      <title>Programmer&#39;s Guide to NCurses</title>
      <link>http://nasciiboy.github.io/prog/pg2ncurses/</link>
      <pubDate>Tue, 11 Apr 2017 12:38:06 -0500</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/pg2ncurses/</guid>
      <description>Go, que no es un lenguaje nuevo (ya tiene sus añitos) carece de librerias nativas para desplegar guis, asi como tuis&amp;hellip; bueno esto ultimo no es del todo cierto, pues cuenta con unas pocas librerias nativas para mostrar graficos por la terminal, solo queeee, estan muy verdes, me explico, tienes la habilidad de modificar los caracteres, conocer la dimencion de la terminal, leer la entrada del rator (y teclado) y poco mas, ni funciones para desplegar texto, ni scroll, ni todo el arsenal de funciones que por ejemplo, posee ncurses.</description>
    </item>
    
    <item>
      <title>yorozuya</title>
      <link>http://nasciiboy.github.io/prog/yorozuya/</link>
      <pubDate>Tue, 14 Mar 2017 16:33:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/yorozuya/</guid>
      <description>Yorozuya en una tienda donde se toma cualquier tipo de trabajo por una tarifa&amp;hellip; bienvenidos los encargos!
bueno, bueno, matizando un poco y conectado con la saga de post sobre morg, me encontraba aprendiendo golang y para tener una referencia rapida del lenguaje, pase el libro oficial (apartir de un pdf) a morg (AQUI el material, fuente, resultado e imagenes). Aun le falta una revision fina que ire realizando a medida que avance su lectura, aunque la actualizacion quisa solo vea la luz cuando aparesca el proyecto morg al 100%.</description>
    </item>
    
    <item>
      <title>morg: como usar</title>
      <link>http://nasciiboy.github.io/prog/morg-howto/</link>
      <pubDate>Sun, 12 Mar 2017 09:33:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg-howto/</guid>
      <description>la aleatoriadad llevo a programar morg en golang (aunque creo que ya se como portarlo a c) de momento a instalar go
instalar go (version GNU) primero ve a la direccion https://golang.org/dl/ y clica el enlace de descarga donde diga algo como (al dia de escribir esto) go1.8.linux-amd64.tar.gz (Cambia el amd64 por la arquitectura de tu equipo)
Si todo va bien tendras el comprimido en $HOME/Downloads, abrimos un terminal y vamos hay</description>
    </item>
    
    <item>
      <title>morg</title>
      <link>http://nasciiboy.github.io/prog/morg/</link>
      <pubDate>Thu, 02 Mar 2017 06:37:35 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/morg/</guid>
      <description>Que tal, por fin tras un año de hacer el vago ha surgido el primer exportador del lenguaje de marcas ligeras morg (nombre tentativo). Aun esta en una fase de programacion, con muchos apaños y trucos sucios&amp;hellip; pero funciona! toma eso internet!
Que igual y no era tan dificil, pero que me hice lio y termine programando un motor de expresiones regulares y por puro orgullo lo incluyo en el programa</description>
    </item>
    
    <item>
      <title>INBO</title>
      <link>http://nasciiboy.github.io/prog/inbo/</link>
      <pubDate>Mon, 13 Feb 2017 22:14:42 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/inbo/</guid>
      <description>Despues de año y medio de desempleo (y quiza de ser un inutil) aparecio una idea voy a programar un juego como MegaMan II. Por supuesto, no tenia ningun conocimiento de programacion (ni conputadora), solo tiempo y patrocinadores que gentilmente me proporcionaron un pc pentium 4 con un monitor lcd de imagen difuminada aderesada por unas lineas misteriosas capaces de disminuir la vida util de tus ojos 10 años (como la edad (minima) del pc, coincidencia?</description>
    </item>
    
    <item>
      <title>regexp3-go (dia cero)</title>
      <link>http://nasciiboy.github.io/prog/regexp3-go/</link>
      <pubDate>Sat, 11 Feb 2017 10:26:04 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/regexp3-go/</guid>
      <description>Hace un año, luego de &amp;ldquo;maquetar&amp;rdquo; algunos libros en org-mode, decidi crear mi propio lenguaje de marcas ligeras, con casinos y colegialas japonesas, programar un substituto del comando man/info y aniquilar a html/latex como sistema de documentacion.
Un mes mas tarde fruto de la necesidad de parsear el texto del nuevo lenguaje y mi incapacidad de entender como utilizar una libreria de expresiones regulares, nacio Recursive Regexp Raptor (alias regexp3) que es un motor de expresiones regulares para C, otro mes mas tarde salio a la web la primer version en forma de repositorio en github y ahora&amp;hellip; ni hay un nuevo lenguaje, ni un substituto de man/info, ni ha muerto html y he dedicado mas horas de las que jamas pense en regexp3 (y regexp4 &amp;ldquo;el sucesor&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>Gnome Keys</title>
      <link>http://nasciiboy.github.io/prog/gnome-keys/</link>
      <pubDate>Wed, 18 Jan 2017 20:57:15 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/gnome-keys/</guid>
      <description>He utilizado gnome 2 (mas de un año en Debian 6), tambien xfce, lxde, dwm, ratpoison, stumpwm, kde 4, kde 5, fluxbox y openbox (y visto unity&amp;hellip;) con todo, mi escritorio es y sera Gnome Shell
Lo unico que evita que Gnome Shell sea perfecto es la capacidad de personalizar el teclado a gusto, como puede ofreser kde, o eso creia.
Hace un par de dias comence a utilizar un emulador grafico nuevo llamado terminix el cual tambien adolece de una personalizacion profunda de los atajos de teclado, asi que me pase por su proyecto y les deje una lista de deseos.</description>
    </item>
    
    <item>
      <title>Raptor-Book</title>
      <link>http://nasciiboy.github.io/prog/raptor-book/</link>
      <pubDate>Wed, 11 Jan 2017 10:03:58 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/raptor-book/</guid>
      <description>Solo queria programar un juego similar a Megaman 2
y termine instalando debian, leyendo de bash, sdl, ncurses, c, c++, Emacs&amp;hellip;
Desafortunadamente aun no hay un texto sagrado de nombre &amp;ldquo;De Cero a Motor 3D&amp;rdquo; (en solo 15 años) ni siminar. Entre intentar aprender ingles y buscar un sistema de documentacion decente, termine por programar un motor de expresiones regulares sin comprender la teoria de automatas finitos, lenguajes finitos ni recordar un poco de las clases de mate de nivel basico, pues no llegue al medio&amp;hellip;</description>
    </item>
    
    <item>
      <title>2017Challenges</title>
      <link>http://nasciiboy.github.io/prog/2017challenges/</link>
      <pubDate>Wed, 04 Jan 2017 20:41:22 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/2017challenges/</guid>
      <description>Hace unos dias (presuntamente a principio de año) aparecio en reddit (r/programming) un enlace a una competencia para programadores mediante github 2017Challenges.
Aparentemente, el premio es el reto, la busqueda de nuevo conocimiento y la alegria interior de ser el primero en publicar una solucion (ingeniosa) para un lenguaje determinado&amp;hellip;
iniciaron con cuatro pruebas
 Hello World: escribir un programa &amp;ldquo;hola mundo&amp;rdquo;
 Reverse String: invertir el orden de una cadena</description>
    </item>
    
    <item>
      <title>Ncurses</title>
      <link>http://nasciiboy.github.io/prog/ncurses/</link>
      <pubDate>Mon, 19 Dec 2016 21:45:05 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/ncurses/</guid>
      <description>Que es Ncurses Es una libreria (parte del proyecto GNU) que nos permite crear TUIs (Text User Interface) escrita en lenguaje de programacion C con envoltorios para algunos otros lenguajes. Se utiliza principalmente en el sistema GNU/linux y en los derivados de BSD y probablemente tambien corra en el sistema de las ventanas mediante minGW (Minimalist GNU for Windows).
Proporciona funciones para «dibujar» caracteres en la pantalla con hasta 256 colores disponibles (si la terminal lo permite).</description>
    </item>
    
    <item>
      <title>Performance comparison of regular expression engines</title>
      <link>http://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</link>
      <pubDate>Fri, 16 Dec 2016 20:22:03 -0600</pubDate>
      
      <guid>http://nasciiboy.github.io/prog/performance-comparison-of-regular-expression-engines/</guid>
      <description>Hola gente, hace unos meses tome el codigo de dark100 &amp;ldquo;Performance comparison of regular expression engines&amp;rdquo; (pueden ver el orginal aqui) para hacer algunas pruebas a un pequeño motor regexp que programe en mi tiempo libre?, bueno &amp;hellip; acabo de actualizar la prueba (aqui)
El proceso fue el siguiente
 Optener el codigo fuente de cada motor (PCRE2, RE2, tre, oniguruma)
 Compilar cada motor localmente (intel x86-64 celeron 847), es decir</description>
    </item>
    
  </channel>
</rss>