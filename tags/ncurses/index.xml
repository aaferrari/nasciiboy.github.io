<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ncurses on ⋲ᴹ∧cₛ ℜø∁κ§</title>
    <link>https://nasciiboy.land/tags/ncurses/</link>
    <description>Recent content in Ncurses on ⋲ᴹ∧cₛ ℜø∁κ§</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>GPL v3.0</copyright>
    <lastBuildDate>Sun, 29 Sep 2019 17:35:09 -0500</lastBuildDate>
    
        <atom:link href="https://nasciiboy.land/tags/ncurses/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pdcurses</title>
      <link>https://nasciiboy.land/prog/pdcurses/</link>
      <pubDate>Sun, 29 Sep 2019 17:35:09 -0500</pubDate>
      
      <guid>https://nasciiboy.land/prog/pdcurses/</guid>
      <description>&lt;p&gt;No pocas veces se ha esctiro sobre la irrelevancia del codigo o su irremediable
destino a ser olvidado, pero, como (aspirantes a) programadores deseamos lo
mejor para nuestra creacion, que cresca y perdure en el tiempo e incluso
pueda ser no solo reconocido, tambien reutilizadas las horas dedicadas en
ingeniar los mecanismos y diseños detras de su funcionamiento.&lt;/p&gt;

&lt;p&gt;Asi pues, existiendo gran cantidad de lenguajes de programacion, cada uno con
sus particularidades y experimentos es dificil decantarse por una opcion, y sin
embargo, descartando lo estilizados, comodos o sinceramente superiores que
puedan parecer, lo cierto es que el ecosistema de estos lenguajes modernos no
termina de llegar a una &amp;ldquo;madurez nativa&amp;rdquo; en aspectos tan basicos como el area
grafica, campo en que las librerias relevantes prevalecen ancladas a C y C++&lt;/p&gt;

&lt;p&gt;Inequivacomente todo nuevo lenguaje para ser tomado en serio se vera forzado a
ofrecer maneras de incorporar (aprovechar, diria alguno) codigo C/C++ y es
entonces cuando como exquisitos de la programacion con altos entandares de
pureza nos preguntamos si vale la pena esta ilusion de modernidad construida sobre
sucias capas de compativilidad forzada. No valdria mas regresar a las fuentes
mientras aparece un lenguaje que paracite con gracia a C y C++?&lt;/p&gt;

&lt;p&gt;Es en medio de estos pensamientos desviados, tras toquetear varias librerias
(TUI) con diseños extraños que la nostalgia me puede y recuerdo a
ncurses&amp;hellip; pero busco entonces una alternativa menos limitada con aparente buena
salud y que brinde mayores comodidades en lo inmediato para digamos, la creacion
de videojuegos&lt;/p&gt;

&lt;p&gt;En esta busqueda apareciose &lt;strong&gt;PDCurses&lt;/strong&gt; una libreria &lt;em&gt;estilo curses&lt;/em&gt; de dominio
publico para llevar los programas que utilizan (n)curses a entornos graficos
&amp;ldquo;precindiendo de emulador de terminal&amp;rdquo;&lt;/p&gt;

&lt;p&gt;comor? se imitan la mayoria de capacidades que ejerce (n)curses sobre una terminal
pero hechando mano de librerias graficas como X11, SDL1 y SDL2, lo cual
permitiria crear &amp;ldquo;aplicaciones graficas independientes&amp;rdquo; de herramientas de
terminal, como por ejemplo htop o mocp&lt;/p&gt;

&lt;p&gt;y? ademas de permitir la portavilidad que el codigo permita por si mismo,
establece un &amp;ldquo;entorno estandarizado&amp;rdquo; con el cual una aplicacion mantendria un
aspecto homogeneo en por ejemplo el color y tamaño de fuente. Al no formar parte
de un &amp;ldquo;emulador de terminal&amp;rdquo;, permitiria tambien la asignacion de atajos
personalizados sin temor y finalmente podria expandirse esta libreria para
proporcionar acceso homologado a perifericos como gamepads, ignorar las
limitaciones de la terminal accediendo sin fracaso a paletas de color de 8; 16 y
256 colores o directamente RGB, ademas de tambien podria estar disponible la
manipulacion directa a nivel de pixel, ventanas (en curses &lt;code&gt;WINDOW&lt;/code&gt;) con tamaños
distintos de fuente, colores y modos todo ello establecido sobre la simplicidad de
ncurses&lt;/p&gt;

&lt;p&gt;mas tarde, podria ademas de estas convenientes especulaciones portar la libreria
a un conjunto limitado y saludable de C++, para tener codigo algo mas
&amp;ldquo;bonito&amp;rdquo;&amp;hellip; pero dejemos las especulaciones y aterricemos esto en habilidades
concretas&lt;/p&gt;

&lt;p&gt;como menciona la &lt;a href=&#34;https://pdcurses.org/&#34;&gt;pagina&lt;/a&gt; de PDCurses, se proporcionan
varias verciones que a su ves hechan mano de librerias especificas. Pareciendome
&lt;strong&gt;SDL2&lt;/strong&gt; la mas relevante y mas o menos familiar, me centrare en
ella.&lt;/p&gt;

&lt;p&gt;Adquiramos primero las dependencias necesarias&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ncurses estandar para terminal
apt install libncurses-dev

# solo serian extrictamente necesarias libsdl2-dev y libsdl2-ttf-dev
# pero ya de paso...
apt install libsdl2-dev libsdl2-ttf-dev libsdl2-gfx-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-net-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Segun parece PDCurses estubo en inactividad por bastante tiempo, por lo que un
fork (&lt;a href=&#34;https://github.com/Bill-Gray/PDCurses&#34;&gt;https://github.com/Bill-Gray/PDCurses&lt;/a&gt;) se propuso tomar el relevo. Sin
embargo, este tambien callo en inactividad y los cambios que intentaba llebar a
cabo no estan completos asi que preferiblemente es mejor acudir a la vercion oficial&lt;/p&gt;

&lt;p&gt;La vercion oficial, recientemente ha tomado cierto movimiento, asi que tomar
con cautela este esctiro, podria diferir o ser inutil en un futuro cercato. El
commit sobre el que se llevaron las pruebas es &lt;code&gt;f407bdbda6e38dfab34f590323a914285bf843dd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Optecion y compilacion&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/wmcbrine/PDCurses
cd PDCurses/sdl2
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;con esto tenemos nuestra libreria (&lt;code&gt;pdcurses.a&lt;/code&gt;) con la cual podemos (intentar) compilar
nuestros programitas&lt;/p&gt;

&lt;p&gt;Sin dejar el directorio &lt;code&gt;PDCurses/sdl2&lt;/code&gt; descargar un pequeño programa de prueba
y compilar de la siguiente forma&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# el programita de prueba
wget https://nasciiboy.land/data//nasciiboy.c

# Compilar siempre a ejecutables con un nombre familiar
# ahorra desgaste neuronal, desde tiempos inmemoriales
# elegi nombrar `test` a los binarios
#
# Colocar el fichero a compilar al final de la linea
# permite cambiar el objetivo con facilidad
gcc -O2 -Wall -fPIC -I.. -o test.o -c nasciiboy.c
gcc test.o -o test pdcurses.a -lSDL2

# ejecutar
./test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hala, optendran algo similar a esto&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/nasciiboy_png.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;experimentando tambien podria compilarse con la libreria ncurses r-e-a-l&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcc -o test -lncurses nasciiboy.c
./test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;su ejecucion en mi terminal standar se veria asi&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/nasciiboy_tilix.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;ahora, la libreria por defecto utiliza una fuente (tipografia) de mapa de bits,
pero, ademas de variar el tamaño en pixeles podemos recurrir tambien a fuentes &lt;code&gt;.ttf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/nasciiboy_DejaVuSansMono.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Conseguir la preciada fuente &lt;code&gt;.ttf&lt;/code&gt; requiere los siguientes pasos&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# borrar para poder recompilar la libreria
make clean
# recompilar con fuente ttf
make WIDE=Y

gcc -O2 -Wall -fPIC -I.. -o test.o -c nasciiboy.c
gcc test.o -o test pdcurses.a -lSDL2 -lSDL2_ttf

# ejecutar
./test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;para  modificar la fuente y su tamaño debemos entrar en el fichero &lt;code&gt;PDCurses/sdl2/pdcscrn.c&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#ifdef PDC_WIDE
# ifndef PDC_FONT_PATH
#  ifdef _WIN32
#   define PDC_FONT_PATH &amp;quot;C:/Windows/Fonts/consola.ttf&amp;quot;
#  elif defined(__APPLE__)
#   define PDC_FONT_PATH &amp;quot;/System/Library/Fonts/Menlo.ttc&amp;quot;
#  else
#   define PDC_FONT_PATH &amp;quot;/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf&amp;quot;
#  endif
# endif
TTF_Font *pdc_ttffont = NULL;
int pdc_font_size =
# ifdef _WIN32
 16;
# else
 17;
# endif
#endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;las lineas se explican por si mismas&lt;/p&gt;

&lt;p&gt;Dentro del &lt;code&gt;Makefile&lt;/code&gt; (&lt;code&gt;PDCurses/sdl2/Makefile&lt;/code&gt;) vemos la variable que activa
estas opciones&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifeq ($(WIDE),Y)
	CFLAGS += -DPDC_WIDE
	SFLAGS += $(TFLAGS)
	SLIBS  += $(TLIBS)
endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;finalmente, para evitar un poco de incomodidad en el proceso de compilacion de
&lt;code&gt;nasciiboy.c&lt;/code&gt; (o el fichero objetivo de sus practicas), sugiero las siguientes
modificaciones en el mencionado makefile&lt;/p&gt;

&lt;p&gt;Buscar unas lineas mas o menos asi&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifeq ($(OS),Windows_NT)
    ...
else
	RM = rm -f

	SFLAGS = $(shell sdl2-config --cflags)
	SLIBS = $(shell sdl2-config --libs)
    ...
endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;y agregar una variable &lt;code&gt;RUN&lt;/code&gt; mas o menos asi&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifeq ($(OS),Windows_NT)
    ...
else
	RUN=./
	RM = rm -f

    ...
endif

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ir al final del makefile y agregar lo siguiente&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;run: test $(SRC)
	$(RUN)test$(E)

test$(E): test.o
	$(LINK) $^ -o $@ $(LDFLAGS) $(TLIBS)

test.o: $(LIBCURSES) $(SRC)
	$(BUILD) -c $(DEMOFLAGS) $(SRC) -o test.o
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(en teoria) ahora podriamos compilar nuestro fichero tanto en GNU, OSX y
Windows, tal que asi&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make run SRC=nasciiboy.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o compilar todo (con fuentes tty) (tras un &lt;code&gt;make clean&lt;/code&gt; + &lt;code&gt;rm test&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make run WIDE=Y SRC=nasciiboy.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;o realizar cualquier otra modificacion de nuestra conveniencia sobre estas
rusticas herramientas, XDDD!&lt;/p&gt;

&lt;p&gt;Si buscais documentacion, viene incluida dentro de &lt;code&gt;PDCurses/sdl2/docs&lt;/code&gt;. Cuenta
tambien con vercion web&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MANUAL.md: Variables, constantes, funciones, portavilidad (&lt;a href=&#34;https://github.com/wmcbrine/PDCurses/blob/master/docs/MANUAL.md&#34;&gt;web&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;USERS.md: Mas Constantes, atributos y nombre de teclas (&lt;a href=&#34;https://github.com/wmcbrine/PDCurses/blob/master/docs/USERS.md&#34;&gt;web&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;IMPLEMNT.md: algunas utiles funciones especificas de PDCurses (&lt;a href=&#34;https://github.com/wmcbrine/PDCurses/blob/master/docs/IMPLEMNT.md&#34;&gt;web&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Es posible que en el ejemplo no se vea tan marcada la diferencia entre la fuente
png, la ttf por defecto y una personalizada asi que aqui otro trio mas de
capturas&lt;/p&gt;

&lt;p&gt;PNG&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/naske_png.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;DejaVuSansMono&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/naske_DejaVuSansMono.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;FreeImbo&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://nasciiboy.land/img/PDCurses/naske_FreeImbo.png&#34; alt=&#34;&#34; /&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Estoy algo motivado por modificar esta libreria e incursionar en adaptaciones a
un C++ sanamente restringido para mostrar (superficialmente) la construccion de
algunos juegos sencillos (snake, tetris, un puzzle y un plataformero) pero no
lo espereis con ilusion&amp;hellip;&lt;/p&gt;

&lt;p&gt;PDCurses, no fue la unica alternativa medianamente interesante, tambien
surgieron por el camino &lt;a href=&#34;http://foo.wyrd.name/en:bearlibterminal&#34;&gt;BearLib&lt;/a&gt; y
&lt;a href=&#34;https://bitbucket.org/libtcod/&#34;&gt;Libtcod&lt;/a&gt;. Advertir que no las he probado&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programmer&#39;s Guide to NCurses</title>
      <link>https://nasciiboy.land/prog/pg2ncurses/</link>
      <pubDate>Tue, 11 Apr 2017 12:38:06 -0500</pubDate>
      
      <guid>https://nasciiboy.land/prog/pg2ncurses/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;../gumy.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Go, que no es un lenguaje nuevo (ya tiene sus añitos) carece de librerias
nativas para desplegar guis, asi como tuis&amp;hellip; bueno esto ultimo no es del todo
cierto, pues cuenta con unas pocas librerias nativas para mostrar graficos por
la terminal, solo queeee, estan muy verdes, me explico, tienes la habilidad de
modificar los &lt;q&gt;caracteres&lt;/q&gt;, conocer la dimencion de la terminal, leer la
entrada del rator (y teclado) y poco mas, ni funciones para desplegar texto, ni
scroll, ni todo el arsenal de funciones que por ejemplo, posee &lt;strong&gt;ncurses&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Asi que lo mas logico fue &lt;s&gt;cambiar de lenguage&lt;/s&gt; comenzar la escritura de
una nueva libreria para hacer cosas en la terminal, con casinos y colegialas
japonesas!&lt;/p&gt;

&lt;p&gt;Da la  casualidad, que tenia a la mano el libro &lt;strong&gt;Programmer&amp;rsquo;s Guide to Ncurses&lt;/strong&gt;
de un tal Dang Gookin y ya que estaba en la labor hago una breve reseña del
asunto (y otras cosas)&lt;/p&gt;

&lt;p&gt;Por cierto si nos sabes que es ncurses, puedes visitar un post
relacionado &lt;a href=&#34;../ncurses/index.html&#34;&gt;aqui&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;comor&#34;&gt;comor?&lt;/h2&gt;

&lt;p&gt;El libro asume que tienes conocimientos de programacion, especificamente
programacion en C, que es el lenguaje con el que esta escrita la libreria ncurses,
aunque tambien podrias utilizar C++.&lt;/p&gt;

&lt;p&gt;Tambien, que estas o vas a programar bajo un entorno *nix, con un arsenal
formado por un terminal (con bash), editor y un compilador (gcc), aunque esto
queda mas como una recomendacion. Aun asi se toma un par de secciones para
enseñar lo mas basico antes de iniciar. Quedando como asignacion a quien tome el
material, profundizar en el uso de estas herramientas&lt;/p&gt;

&lt;p&gt;Una vez aclarado el tema, la estructura de la lectura es: plantear/mostrar unas
cuantas funciones de la libreria, dejar el codigo fuente de un programa con
dichas funciones y analizar un poco el asunto.&lt;/p&gt;

&lt;p&gt;La &lt;q&gt;dificultad&lt;/q&gt; aumenta de forma incremental, a medida que se van
introduciendo los conseptos propios de ncurses (estos ultimos son suficientes
para hacerse de una idea de como esta implementada la libreria, o al menos sirve
de guia para implementar una propia) pasando por mostrar texto, leer la entrada
del teclado, refrescar la pantalla, ventanas, color, etc.&lt;/p&gt;

&lt;p&gt;Si bien todo es muy ameno, con un lenguaje relajado y no existen retos que
puedan frustrar a quien inicia, lamentablemente el asunto no pasa de ser un
&lt;strong&gt;paseo por la libreria&lt;/strong&gt;. Puedes olvidarte de tener el codigo para construir
una interfaz molona, menos, fantacear con programar un videojuego o un editor de
texto.&lt;/p&gt;

&lt;p&gt;Digo el material (pdf) son 570 paginas, aunque tiene truco, de esas paginas lo
didactico representa el 35% con letra grande y un monton de listados (esto esta
bien), el resto es una &lt;q&gt;compilacion&lt;/q&gt; de todas las funciones, con una
pequeña explicacion, su formato, notas y ejemplos, muy del estilo de las paginas
man (sospecho que con un pequeño retoque). Llega a dar la imprecion que solo fue
hecho para sacar algunas monedas, algo lamentable, pues aparte de una
pequeña guia oficial de la libreria, este es el unico material de consulta sobre
el tema y encima los dos (estaban) en ingles.&lt;/p&gt;

&lt;p&gt;Entonces? es bueno para conocer los fundamentos de ncurses, salir de
algunas dudas y como material de referencia. Si deseas profundizar y ejemplos
mas elaborados, necesario acudir a la documentacion oficial de la libreria
(NCURSES Programming HOWTO).&lt;/p&gt;

&lt;h2 id=&#34;prison-blues&#34;&gt;Prison Blues&lt;/h2&gt;

&lt;p&gt;a bbeeee, boooohoo, hooo, beeep, beibe. Hace mucho, mucho tiempo, mientras
experimentaba con org mode, el sujeto de este post sirvio
de &lt;a href=&#34;../cobaya.zip&#34;&gt;cobaya&lt;/a&gt; en la busqueda del sistema de documentacion
definitivo(?), tambien como excusa para traducir cosas y aprender (o no) un poco
ingles de forma salvaje.&lt;/p&gt;

&lt;p&gt;Por aquel tiempo imaginaba que prodria finaciarme adaptando libros a formato
digital, cobrando en $dolares. El asunto no fue muy bien e incluso fui llamado
ladron, je, quiza con razon, como saberlo. Lo intente un par de veces mas
enviando el material a algunas editoriales sin resivir respuesta, en fin.&lt;/p&gt;

&lt;p&gt;Al menos, sirvio para conocer los limites de org-mode, que cayo de mi gracia, al
igual que ncurses, por cierto la hoja de estilos, no esta muy fina y lo
referente al español, solo fue revisado mientras lo iba leyendo.&lt;/p&gt;

&lt;p&gt;Org-mode, tiene pocos estilos de resaltado y sus estructuras no estan pensadas
para maquetar documentos extensos, asi que alguna seccion puede fallar, ademas
la traduccion esta en bruto sobre el material original comentado. Se puede
exportar del fuente, pero org es lento y puede fallar, por aquel tiempo un bug
en alguna cosa hacia que emacs se colgara un rato y consumiera 3gb de ram el
solito, motivo por el cual tuve que expardir la memoria a 8gb. No se por que
sera pero no se resalta en colores el codigo fuente.&lt;/p&gt;

&lt;h2 id=&#34;sobre-ncurses&#34;&gt;sobre ncurses&lt;/h2&gt;

&lt;p&gt;Partiendo del principio de que ncurses es heredero de una libreria que permitia
mayor control &lt;strong&gt;sobre un terminal&lt;/strong&gt;, con hardware y software primigenios de
limitadas capacidades, unica y exclusivamente para manejar texto codificado en
ASCII&amp;hellip; fue perfecto!&lt;/p&gt;

&lt;p&gt;Ahora bien, en el precente con equipo que es capaz de mostrar mas colores que el
arcoiris, emuladores de terminal sobre entornos graficos y mas caracteres que
chinos&amp;hellip; es limitado.&lt;/p&gt;

&lt;p&gt;No se mal entienda un terminal es para ser un terminal, su deber es ser
eficiente desplegando texto, no tiene sentido dedicar 4 bytes por caracter para
almacenar colores, ni 2 bytes para atributos (negrita, italica, subrayado, etc),
menos tener la capacidad de modificar los caracteres a nivel pixel (para generar
imagenes), como tampoco tener velocidades de refresco de pantalla mayores a 10 o
20 ciclos, o contar con &lt;strong&gt;&lt;q&gt;modos graficos&lt;/q&gt;&lt;/strong&gt;, soporte para mandos, o midi,
o que la lectura de teclado y raton fuesen librerias independientes&lt;/p&gt;

&lt;p&gt;Pero por que tener la necesidad de averiguar si el terminal puede hacer esto o
aquello, si tiene o no soporte para colores (8, 16, 256, etc), no puede haber un
jodido estandar que me asegure poder desplegar interfaces lizergicas
basadas en texto, con midis y pad, si o si?&lt;/p&gt;

&lt;p&gt;La documentacion y ser software libre son importantes, tanto como lo es para mi
el contar con codigo para subnormales (como yo), quiza es lentitud mia el
encontrar indescifrable el codigo de Ncurses, seran las macros? los guiones
bajos?&amp;hellip; misterioso (ademas de digno de respeto) que un solo individuo lleve el
desarrollo de esta libreria desde hace varios años (que hace poco libero la
vercion 6 (sin aparentes cambios)), los motivos, son un enigma digno de mayor
analisis, te ha pasado actualizar la pantalla con algun &lt;code&gt;wrefresh&lt;/code&gt; y no ver
cambios?&lt;/p&gt;

&lt;p&gt;(narrador) Y asi mientras nasciiboy se cuestionava sobre el pasado, presente y
futuro de las terminales, otro dia mas llegaba a su fin en la isla de los heroes
del viento, no dejen de sintonizar la proxima entrega (/narrador)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ncurses</title>
      <link>https://nasciiboy.land/prog/ncurses/</link>
      <pubDate>Mon, 19 Dec 2016 21:45:05 -0600</pubDate>
      
      <guid>https://nasciiboy.land/prog/ncurses/</guid>
      <description>

&lt;h2 id=&#34;que-es-ncurses&#34;&gt;Que es Ncurses&lt;/h2&gt;

&lt;p&gt;Es una libreria (parte del proyecto GNU) que nos permite crear &lt;strong&gt;TUIs&lt;/strong&gt; (Text
User Interface) escrita en lenguaje de programacion &lt;strong&gt;C&lt;/strong&gt; con &lt;em&gt;envoltorios&lt;/em&gt; para
algunos otros lenguajes. Se utiliza principalmente en el sistema GNU/linux y en
los derivados de BSD y probablemente tambien corra en el sistema de las ventanas
mediante minGW (Minimalist GNU for Windows).&lt;/p&gt;

&lt;p&gt;Proporciona funciones para «dibujar» caracteres en la pantalla con hasta 256
colores disponibles (si la terminal lo permite). Despues de conocer &lt;code&gt;mvwprintw&lt;/code&gt;
utilizar &lt;code&gt;printf&lt;/code&gt; es igual a sufrir alguna incapacidad. Tambien nos da la
posibilidad de modificar varios atributos de la tipografia como pueden ser
&lt;strong&gt;negrita&lt;/strong&gt;, &lt;em&gt;italica&lt;/em&gt; o &lt;u&gt;subrayado&lt;/u&gt;.&lt;/p&gt;

&lt;p&gt;finalmente nos ofrece la posibilidad de tener acceso completo al teclado y
raton.&lt;/p&gt;

&lt;h2 id=&#34;por-que-programar-tuis&#34;&gt;Por que programar TUIs&lt;/h2&gt;

&lt;p&gt;Bueno, es una foma muy sencilla de crear una interfaz «visual» sin morir en el
intento y como fiel creyente de la iglesia de Emacs creo que &lt;em&gt;el texto es la
unica interfaz verdadera&lt;/em&gt;. Si planeas aprender programacion de videojuegos
tambien encontraras que es mas sencillo interactuar con caracteres en lugar de
con pixeles (aunque en el fondo sean lo mismo)&lt;/p&gt;

&lt;h2 id=&#34;como-aprender-a-programar-con-ncurses&#34;&gt;Como aprender a programar con Ncurses?&lt;/h2&gt;

&lt;p&gt;complicado lo tienes&amp;hellip; solo existe un mini-manual (NCURSES Programming HOWTO) y
un libro (Programmer&amp;rsquo;s Guide to NCurses) (ambos en ingles) para aprender lo
basico del tema.&lt;/p&gt;

&lt;p&gt;Tampoco leer codigo ayuda mucho, sobre todo el codigo fuente de la propia
libreria (es muy raro).&lt;/p&gt;

&lt;p&gt;Hace ya un tiempo dedique algunas tardes a traducir el minimanual, puedes encontrar
lo fundamental en este &lt;a href=&#34;../ncurses-programming-howto.zip&#34;&gt;zip&lt;/a&gt; y el resto en un
repositorio en &lt;a href=&#34;https://github.com/nasciiboy/NCURSES-Programming-HOWTO&#34;&gt;github&lt;/a&gt;.
No ha sido revisado, y la traduccion  se realizo con el &amp;ldquo;traductor de
internet&amp;rdquo;. En el repositorio encontraras los fuentes en formato org-mode de
emacs, en algun momento (o años) le dare alguna revicion y quizo se
actualice. Si te es de &lt;code&gt;interes &amp;amp;&amp;amp; utilidad &amp;amp;&amp;amp; y-lo-mejoras&lt;/code&gt; no dudes en
enviarme el resultado&lt;/p&gt;

&lt;p&gt;quiza en un post/tutorial futuro ponga algun codigo interesante del tipo &amp;ldquo;como
programar un tetris&amp;rdquo; o algo asi&amp;hellip;&lt;/p&gt;

&lt;p&gt;ps: tengo una traduccion (ilegal) de el libro casi terminada&amp;hellip;&lt;/p&gt;

&lt;p&gt;ps 2: actualmente no me gusta ncurses, principalmente por que no entiendo su
codigo fuente, y porque es un &amp;ldquo;todo en uno&amp;rdquo;, preferiria que la interaccion con
el teclado, el mouse e incluso joystick fuesen librerias independientes&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
